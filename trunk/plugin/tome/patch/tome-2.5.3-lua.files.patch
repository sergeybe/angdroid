diff -Nru --strip-trailing-cr tome-2.5.3/src/w_dun.c tome-2.5.3-lua.files/src/w_dun.c
--- tome-2.5.3/src/w_dun.c	1969-12-31 16:00:00.000000000 -0800
+++ tome-2.5.3-lua.files/src/w_dun.c	2010-09-26 07:37:21.000000000 -0700
@@ -0,0 +1,3299 @@
+/*
+** Lua binding: dungeon
+** Generated automatically by tolua 4.0a - angband on Sun Sep 26 07:37:20 2010.
+*/
+
+#include "lua/tolua.h"
+
+/* Exported function */
+int tolua_dungeon_open (lua_State* tolua_S);
+void tolua_dungeon_close (lua_State* tolua_S);
+
+#include "angband.h"
+static wilderness_map* lua_get_wild_map(int y, int x) { return &wild_map[y][x]; }
+
+/* function to register type */
+static void toluaI_reg_types (lua_State* tolua_S)
+{
+ tolua_usertype(tolua_S,"rule_type");
+ tolua_usertype(tolua_S,"wilderness_type_info");
+ tolua_usertype(tolua_S,"wilderness_map");
+ tolua_usertype(tolua_S,"town_type");
+ tolua_usertype(tolua_S,"border_type");
+ tolua_usertype(tolua_S,"store_type");
+ tolua_usertype(tolua_S,"obj_theme");
+ tolua_usertype(tolua_S,"dungeon_info_type");
+}
+
+/* error messages */
+#define TOLUA_ERR_SELF tolua_error(tolua_S,"invalid 'self'")
+#define TOLUA_ERR_ASSIGN tolua_error(tolua_S,"#vinvalid type in variable assignment.")
+
+/* get function: dungeon_flags1 */
+static int toluaI_get_dungeon_level_flags1(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)dungeon_flags1);
+ return 1;
+}
+
+/* set function: dungeon_flags1 */
+static int toluaI_set_dungeon_level_flags1(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  dungeon_flags1 = ((u32b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: dungeon_flags2 */
+static int toluaI_get_dungeon_level_flags2(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)dungeon_flags2);
+ return 1;
+}
+
+/* set function: dungeon_flags2 */
+static int toluaI_set_dungeon_level_flags2(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  dungeon_flags2 = ((u32b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: north of class  border_type */
+static int toluaI_get_dungeon_border_type_north(lua_State* tolua_S)
+{
+ int toluaI_index;
+  border_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (border_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_WID)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->north[toluaI_index]);
+ return 1;
+}
+
+/* set function: north of class  border_type */
+static int toluaI_set_dungeon_border_type_north(lua_State* tolua_S)
+{
+ int toluaI_index;
+  border_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (border_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_WID)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->north[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: south of class  border_type */
+static int toluaI_get_dungeon_border_type_south(lua_State* tolua_S)
+{
+ int toluaI_index;
+  border_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (border_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_WID)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->south[toluaI_index]);
+ return 1;
+}
+
+/* set function: south of class  border_type */
+static int toluaI_set_dungeon_border_type_south(lua_State* tolua_S)
+{
+ int toluaI_index;
+  border_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (border_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_WID)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->south[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: east of class  border_type */
+static int toluaI_get_dungeon_border_type_east(lua_State* tolua_S)
+{
+ int toluaI_index;
+  border_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (border_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_HGT)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->east[toluaI_index]);
+ return 1;
+}
+
+/* set function: east of class  border_type */
+static int toluaI_set_dungeon_border_type_east(lua_State* tolua_S)
+{
+ int toluaI_index;
+  border_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (border_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_HGT)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->east[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: west of class  border_type */
+static int toluaI_get_dungeon_border_type_west(lua_State* tolua_S)
+{
+ int toluaI_index;
+  border_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (border_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_HGT)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->west[toluaI_index]);
+ return 1;
+}
+
+/* set function: west of class  border_type */
+static int toluaI_set_dungeon_border_type_west(lua_State* tolua_S)
+{
+ int toluaI_index;
+  border_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (border_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_HGT)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->west[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: north_west of class  border_type */
+static int toluaI_get_dungeon_border_type_north_west(lua_State* tolua_S)
+{
+  border_type* self = (border_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->north_west);
+ return 1;
+}
+
+/* set function: north_west of class  border_type */
+static int toluaI_set_dungeon_border_type_north_west(lua_State* tolua_S)
+{
+  border_type* self = (border_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->north_west = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: north_east of class  border_type */
+static int toluaI_get_dungeon_border_type_north_east(lua_State* tolua_S)
+{
+  border_type* self = (border_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->north_east);
+ return 1;
+}
+
+/* set function: north_east of class  border_type */
+static int toluaI_set_dungeon_border_type_north_east(lua_State* tolua_S)
+{
+  border_type* self = (border_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->north_east = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: south_west of class  border_type */
+static int toluaI_get_dungeon_border_type_south_west(lua_State* tolua_S)
+{
+  border_type* self = (border_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->south_west);
+ return 1;
+}
+
+/* set function: south_west of class  border_type */
+static int toluaI_set_dungeon_border_type_south_west(lua_State* tolua_S)
+{
+  border_type* self = (border_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->south_west = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: south_east of class  border_type */
+static int toluaI_get_dungeon_border_type_south_east(lua_State* tolua_S)
+{
+  border_type* self = (border_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->south_east);
+ return 1;
+}
+
+/* set function: south_east of class  border_type */
+static int toluaI_set_dungeon_border_type_south_east(lua_State* tolua_S)
+{
+  border_type* self = (border_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->south_east = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: name of class  wilderness_type_info */
+static int toluaI_get_dungeon_wilderness_type_info_name(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->name);
+ return 1;
+}
+
+/* set function: name of class  wilderness_type_info */
+static int toluaI_set_dungeon_wilderness_type_info_name(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->name = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: text of class  wilderness_type_info */
+static int toluaI_get_dungeon_wilderness_type_info_text(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->text);
+ return 1;
+}
+
+/* set function: text of class  wilderness_type_info */
+static int toluaI_set_dungeon_wilderness_type_info_text(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->text = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: entrance of class  wilderness_type_info */
+static int toluaI_get_dungeon_wilderness_type_info_entrance(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->entrance);
+ return 1;
+}
+
+/* set function: entrance of class  wilderness_type_info */
+static int toluaI_set_dungeon_wilderness_type_info_entrance(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->entrance = ((u16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: road of class  wilderness_type_info */
+static int toluaI_get_dungeon_wilderness_type_info_road(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->road);
+ return 1;
+}
+
+/* set function: road of class  wilderness_type_info */
+static int toluaI_set_dungeon_wilderness_type_info_road(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->road = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: level of class  wilderness_type_info */
+static int toluaI_get_dungeon_wilderness_type_info_level(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->level);
+ return 1;
+}
+
+/* set function: level of class  wilderness_type_info */
+static int toluaI_set_dungeon_wilderness_type_info_level(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->level = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags1 of class  wilderness_type_info */
+static int toluaI_get_dungeon_wilderness_type_info_flags1(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags1);
+ return 1;
+}
+
+/* set function: flags1 of class  wilderness_type_info */
+static int toluaI_set_dungeon_wilderness_type_info_flags1(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags1 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: feat of class  wilderness_type_info */
+static int toluaI_get_dungeon_wilderness_type_info_feat(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->feat);
+ return 1;
+}
+
+/* set function: feat of class  wilderness_type_info */
+static int toluaI_set_dungeon_wilderness_type_info_feat(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->feat = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: terrain_idx of class  wilderness_type_info */
+static int toluaI_get_dungeon_wilderness_type_info_terrain_idx(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->terrain_idx);
+ return 1;
+}
+
+/* set function: terrain_idx of class  wilderness_type_info */
+static int toluaI_set_dungeon_wilderness_type_info_terrain_idx(lua_State* tolua_S)
+{
+  wilderness_type_info* self = (wilderness_type_info*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->terrain_idx = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: terrain of class  wilderness_type_info */
+static int toluaI_get_dungeon_wilderness_type_info_terrain(lua_State* tolua_S)
+{
+ int toluaI_index;
+  wilderness_type_info* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (wilderness_type_info*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_WILD_TERRAIN)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->terrain[toluaI_index]);
+ return 1;
+}
+
+/* set function: terrain of class  wilderness_type_info */
+static int toluaI_set_dungeon_wilderness_type_info_terrain(lua_State* tolua_S)
+{
+ int toluaI_index;
+  wilderness_type_info* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (wilderness_type_info*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_WILD_TERRAIN)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->terrain[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: feat of class  wilderness_map */
+static int toluaI_get_dungeon_wilderness_map_feat(lua_State* tolua_S)
+{
+  wilderness_map* self = (wilderness_map*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->feat);
+ return 1;
+}
+
+/* set function: feat of class  wilderness_map */
+static int toluaI_set_dungeon_wilderness_map_feat(lua_State* tolua_S)
+{
+  wilderness_map* self = (wilderness_map*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->feat = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: seed of class  wilderness_map */
+static int toluaI_get_dungeon_wilderness_map_seed(lua_State* tolua_S)
+{
+  wilderness_map* self = (wilderness_map*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->seed);
+ return 1;
+}
+
+/* set function: seed of class  wilderness_map */
+static int toluaI_set_dungeon_wilderness_map_seed(lua_State* tolua_S)
+{
+  wilderness_map* self = (wilderness_map*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->seed = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: entrance of class  wilderness_map */
+static int toluaI_get_dungeon_wilderness_map_entrance(lua_State* tolua_S)
+{
+  wilderness_map* self = (wilderness_map*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->entrance);
+ return 1;
+}
+
+/* set function: entrance of class  wilderness_map */
+static int toluaI_set_dungeon_wilderness_map_entrance(lua_State* tolua_S)
+{
+  wilderness_map* self = (wilderness_map*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->entrance = ((u16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: known of class  wilderness_map */
+static int toluaI_get_dungeon_wilderness_map_known(lua_State* tolua_S)
+{
+  wilderness_map* self = (wilderness_map*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->known);
+ return 1;
+}
+
+/* set function: known of class  wilderness_map */
+static int toluaI_set_dungeon_wilderness_map_known(lua_State* tolua_S)
+{
+  wilderness_map* self = (wilderness_map*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->known = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: name of class  town_type */
+static int toluaI_get_dungeon_town_type_name(lua_State* tolua_S)
+{
+  town_type* self = (town_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushstring(tolua_S,(const char*)self->name);
+ return 1;
+}
+
+/* set function: name of class  town_type */
+static int toluaI_set_dungeon_town_type_name(lua_State* tolua_S)
+{
+  town_type* self = (town_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  self->name = ((cptr)  tolua_getstring(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: seed of class  town_type */
+static int toluaI_get_dungeon_town_type_seed(lua_State* tolua_S)
+{
+  town_type* self = (town_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->seed);
+ return 1;
+}
+
+/* set function: seed of class  town_type */
+static int toluaI_set_dungeon_town_type_seed(lua_State* tolua_S)
+{
+  town_type* self = (town_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->seed = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: store of class  town_type */
+static int toluaI_get_dungeon_town_type_store(lua_State* tolua_S)
+{
+ int toluaI_index;
+  town_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (town_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_st_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&self->store[toluaI_index],tolua_tag(tolua_S,"store_type"));
+ return 1;
+}
+
+/* set function: store of class  town_type */
+static int toluaI_set_dungeon_town_type_store(lua_State* tolua_S)
+{
+ int toluaI_index;
+  town_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (town_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_st_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->store[toluaI_index] = *((store_type*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: numstores of class  town_type */
+static int toluaI_get_dungeon_town_type_numstores(lua_State* tolua_S)
+{
+  town_type* self = (town_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->numstores);
+ return 1;
+}
+
+/* set function: numstores of class  town_type */
+static int toluaI_set_dungeon_town_type_numstores(lua_State* tolua_S)
+{
+  town_type* self = (town_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->numstores = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags of class  town_type */
+static int toluaI_get_dungeon_town_type_flags(lua_State* tolua_S)
+{
+  town_type* self = (town_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags);
+ return 1;
+}
+
+/* set function: flags of class  town_type */
+static int toluaI_set_dungeon_town_type_flags(lua_State* tolua_S)
+{
+  town_type* self = (town_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: stocked of class  town_type */
+static int toluaI_get_dungeon_town_type_stocked(lua_State* tolua_S)
+{
+  town_type* self = (town_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->stocked);
+ return 1;
+}
+
+/* set function: stocked of class  town_type */
+static int toluaI_set_dungeon_town_type_stocked(lua_State* tolua_S)
+{
+  town_type* self = (town_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->stocked = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: destroyed of class  town_type */
+static int toluaI_get_dungeon_town_type_destroyed(lua_State* tolua_S)
+{
+  town_type* self = (town_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->destroyed);
+ return 1;
+}
+
+/* set function: destroyed of class  town_type */
+static int toluaI_set_dungeon_town_type_destroyed(lua_State* tolua_S)
+{
+  town_type* self = (town_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->destroyed = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: max_towns */
+static int toluaI_get_dungeon_max_towns(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)max_towns);
+ return 1;
+}
+
+/* set function: max_towns */
+static int toluaI_set_dungeon_max_towns(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  max_towns = ((u16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: town_info */
+static int toluaI_get_dungeon_town_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_towns)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&town_info[toluaI_index],tolua_tag(tolua_S,"town_type"));
+ return 1;
+}
+
+/* set function: town_info */
+static int toluaI_set_dungeon_town_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_towns)
+ tolua_error(tolua_S,"array indexing out of range.");
+  town_info[toluaI_index] = *((town_type*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: mode of class  rule_type */
+static int toluaI_get_dungeon_rule_type_mode(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mode);
+ return 1;
+}
+
+/* set function: mode of class  rule_type */
+static int toluaI_set_dungeon_rule_type_mode(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mode = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: percent of class  rule_type */
+static int toluaI_get_dungeon_rule_type_percent(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->percent);
+ return 1;
+}
+
+/* set function: percent of class  rule_type */
+static int toluaI_set_dungeon_rule_type_percent(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->percent = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mflags1 of class  rule_type */
+static int toluaI_get_dungeon_rule_type_mflags1(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mflags1);
+ return 1;
+}
+
+/* set function: mflags1 of class  rule_type */
+static int toluaI_set_dungeon_rule_type_mflags1(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mflags1 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mflags2 of class  rule_type */
+static int toluaI_get_dungeon_rule_type_mflags2(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mflags2);
+ return 1;
+}
+
+/* set function: mflags2 of class  rule_type */
+static int toluaI_set_dungeon_rule_type_mflags2(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mflags2 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mflags3 of class  rule_type */
+static int toluaI_get_dungeon_rule_type_mflags3(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mflags3);
+ return 1;
+}
+
+/* set function: mflags3 of class  rule_type */
+static int toluaI_set_dungeon_rule_type_mflags3(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mflags3 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mflags4 of class  rule_type */
+static int toluaI_get_dungeon_rule_type_mflags4(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mflags4);
+ return 1;
+}
+
+/* set function: mflags4 of class  rule_type */
+static int toluaI_set_dungeon_rule_type_mflags4(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mflags4 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mflags5 of class  rule_type */
+static int toluaI_get_dungeon_rule_type_mflags5(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mflags5);
+ return 1;
+}
+
+/* set function: mflags5 of class  rule_type */
+static int toluaI_set_dungeon_rule_type_mflags5(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mflags5 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mflags6 of class  rule_type */
+static int toluaI_get_dungeon_rule_type_mflags6(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mflags6);
+ return 1;
+}
+
+/* set function: mflags6 of class  rule_type */
+static int toluaI_set_dungeon_rule_type_mflags6(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mflags6 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mflags7 of class  rule_type */
+static int toluaI_get_dungeon_rule_type_mflags7(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mflags7);
+ return 1;
+}
+
+/* set function: mflags7 of class  rule_type */
+static int toluaI_set_dungeon_rule_type_mflags7(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mflags7 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mflags8 of class  rule_type */
+static int toluaI_get_dungeon_rule_type_mflags8(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mflags8);
+ return 1;
+}
+
+/* set function: mflags8 of class  rule_type */
+static int toluaI_set_dungeon_rule_type_mflags8(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mflags8 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mflags9 of class  rule_type */
+static int toluaI_get_dungeon_rule_type_mflags9(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mflags9);
+ return 1;
+}
+
+/* set function: mflags9 of class  rule_type */
+static int toluaI_set_dungeon_rule_type_mflags9(lua_State* tolua_S)
+{
+  rule_type* self = (rule_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mflags9 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_char of class  rule_type */
+static int toluaI_get_dungeon_rule_type_r_char(lua_State* tolua_S)
+{
+ int toluaI_index;
+  rule_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (rule_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->r_char[toluaI_index]);
+ return 1;
+}
+
+/* set function: r_char of class  rule_type */
+static int toluaI_set_dungeon_rule_type_r_char(lua_State* tolua_S)
+{
+ int toluaI_index;
+  rule_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (rule_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->r_char[toluaI_index] = ((char)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: treasure of class  obj_theme */
+static int toluaI_get_dungeon_obj_theme_treasure(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->treasure);
+ return 1;
+}
+
+/* set function: treasure of class  obj_theme */
+static int toluaI_set_dungeon_obj_theme_treasure(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->treasure = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: combat of class  obj_theme */
+static int toluaI_get_dungeon_obj_theme_combat(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->combat);
+ return 1;
+}
+
+/* set function: combat of class  obj_theme */
+static int toluaI_set_dungeon_obj_theme_combat(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->combat = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: magic of class  obj_theme */
+static int toluaI_get_dungeon_obj_theme_magic(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->magic);
+ return 1;
+}
+
+/* set function: magic of class  obj_theme */
+static int toluaI_set_dungeon_obj_theme_magic(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->magic = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tools of class  obj_theme */
+static int toluaI_get_dungeon_obj_theme_tools(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tools);
+ return 1;
+}
+
+/* set function: tools of class  obj_theme */
+static int toluaI_set_dungeon_obj_theme_tools(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tools = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: name of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_name(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->name);
+ return 1;
+}
+
+/* set function: name of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_name(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->name = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: text of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_text(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->text);
+ return 1;
+}
+
+/* set function: text of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_text(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->text = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: short_name of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_short_name(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=3)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->short_name[toluaI_index]);
+ return 1;
+}
+
+/* set function: short_name of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_short_name(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=3)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->short_name[toluaI_index] = ((char)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: floor1 of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_floor1(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->floor1);
+ return 1;
+}
+
+/* set function: floor1 of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_floor1(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->floor1 = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: floor_percent1 of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_floor_percent1(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->floor_percent1[toluaI_index]);
+ return 1;
+}
+
+/* set function: floor_percent1 of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_floor_percent1(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->floor_percent1[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: floor2 of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_floor2(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->floor2);
+ return 1;
+}
+
+/* set function: floor2 of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_floor2(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->floor2 = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: floor_percent2 of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_floor_percent2(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->floor_percent2[toluaI_index]);
+ return 1;
+}
+
+/* set function: floor_percent2 of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_floor_percent2(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->floor_percent2[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: floor3 of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_floor3(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->floor3);
+ return 1;
+}
+
+/* set function: floor3 of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_floor3(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->floor3 = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: floor_percent3 of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_floor_percent3(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->floor_percent3[toluaI_index]);
+ return 1;
+}
+
+/* set function: floor_percent3 of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_floor_percent3(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->floor_percent3[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: outer_wall of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_outer_wall(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->outer_wall);
+ return 1;
+}
+
+/* set function: outer_wall of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_outer_wall(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->outer_wall = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: inner_wall of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_inner_wall(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->inner_wall);
+ return 1;
+}
+
+/* set function: inner_wall of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_inner_wall(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->inner_wall = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: fill_type1 of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_fill_type1(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->fill_type1);
+ return 1;
+}
+
+/* set function: fill_type1 of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_fill_type1(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->fill_type1 = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: fill_percent1 of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_fill_percent1(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->fill_percent1[toluaI_index]);
+ return 1;
+}
+
+/* set function: fill_percent1 of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_fill_percent1(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->fill_percent1[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: fill_type2 of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_fill_type2(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->fill_type2);
+ return 1;
+}
+
+/* set function: fill_type2 of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_fill_type2(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->fill_type2 = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: fill_percent2 of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_fill_percent2(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->fill_percent2[toluaI_index]);
+ return 1;
+}
+
+/* set function: fill_percent2 of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_fill_percent2(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->fill_percent2[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: fill_type3 of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_fill_type3(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->fill_type3);
+ return 1;
+}
+
+/* set function: fill_type3 of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_fill_type3(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->fill_type3 = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: fill_percent3 of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_fill_percent3(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->fill_percent3[toluaI_index]);
+ return 1;
+}
+
+/* set function: fill_percent3 of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_fill_percent3(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->fill_percent3[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: fill_method of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_fill_method(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->fill_method);
+ return 1;
+}
+
+/* set function: fill_method of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_fill_method(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->fill_method = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mindepth of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_mindepth(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mindepth);
+ return 1;
+}
+
+/* set function: mindepth of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_mindepth(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mindepth = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: maxdepth of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_maxdepth(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->maxdepth);
+ return 1;
+}
+
+/* set function: maxdepth of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_maxdepth(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->maxdepth = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: principal of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_principal(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->principal);
+ return 1;
+}
+
+/* set function: principal of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_principal(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->principal = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: next of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_next(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->next);
+ return 1;
+}
+
+/* set function: next of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_next(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->next = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: min_plev of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_min_plev(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->min_plev);
+ return 1;
+}
+
+/* set function: min_plev of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_min_plev(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->min_plev = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: min_m_alloc_level of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_min_m_alloc_level(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->min_m_alloc_level);
+ return 1;
+}
+
+/* set function: min_m_alloc_level of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_min_m_alloc_level(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->min_m_alloc_level = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: max_m_alloc_chance of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_max_m_alloc_chance(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->max_m_alloc_chance);
+ return 1;
+}
+
+/* set function: max_m_alloc_chance of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_max_m_alloc_chance(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->max_m_alloc_chance = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags1 of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_flags1(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags1);
+ return 1;
+}
+
+/* set function: flags1 of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_flags1(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags1 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags2 of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_flags2(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags2);
+ return 1;
+}
+
+/* set function: flags2 of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_flags2(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags2 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: size_x of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_size_x(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->size_x);
+ return 1;
+}
+
+/* set function: size_x of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_size_x(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->size_x = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: size_y of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_size_y(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->size_y);
+ return 1;
+}
+
+/* set function: size_y of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_size_y(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->size_y = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: rule_percents of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_rule_percents(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->rule_percents[toluaI_index]);
+ return 1;
+}
+
+/* set function: rule_percents of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_rule_percents(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->rule_percents[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: rules of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_rules(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&self->rules[toluaI_index],tolua_tag(tolua_S,"rule_type"));
+ return 1;
+}
+
+/* set function: rules of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_rules(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->rules[toluaI_index] = *((rule_type*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: final_object of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_final_object(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->final_object);
+ return 1;
+}
+
+/* set function: final_object of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_final_object(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->final_object = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: final_artifact of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_final_artifact(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->final_artifact);
+ return 1;
+}
+
+/* set function: final_artifact of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_final_artifact(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->final_artifact = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: final_guardian of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_final_guardian(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->final_guardian);
+ return 1;
+}
+
+/* set function: final_guardian of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_final_guardian(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->final_guardian = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ix of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_ix(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ix);
+ return 1;
+}
+
+/* set function: ix of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_ix(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ix = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: iy of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_iy(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->iy);
+ return 1;
+}
+
+/* set function: iy of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_iy(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->iy = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ox of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_ox(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ox);
+ return 1;
+}
+
+/* set function: ox of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_ox(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ox = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: oy of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_oy(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->oy);
+ return 1;
+}
+
+/* set function: oy of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_oy(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->oy = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: objs of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_objs(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushusertype(tolua_S,(void*)&self->objs,tolua_tag(tolua_S,"obj_theme"));
+ return 1;
+}
+
+/* set function: objs of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_objs(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,tolua_tag(tolua_S,"obj_theme"),0))
+ TOLUA_ERR_ASSIGN;
+  self->objs = *((obj_theme*)  tolua_getusertype(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: d_dice of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_d_dice(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->d_dice[toluaI_index]);
+ return 1;
+}
+
+/* set function: d_dice of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_d_dice(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->d_dice[toluaI_index] = ((int)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: d_side of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_d_side(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->d_side[toluaI_index]);
+ return 1;
+}
+
+/* set function: d_side of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_d_side(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->d_side[toluaI_index] = ((int)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: d_frequency of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_d_frequency(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->d_frequency[toluaI_index]);
+ return 1;
+}
+
+/* set function: d_frequency of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_d_frequency(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->d_frequency[toluaI_index] = ((int)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: d_type of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_d_type(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->d_type[toluaI_index]);
+ return 1;
+}
+
+/* set function: d_type of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_d_type(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->d_type[toluaI_index] = ((int)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: t_idx of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_t_idx(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=TOWN_DUNGEON)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->t_idx[toluaI_index]);
+ return 1;
+}
+
+/* set function: t_idx of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_t_idx(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=TOWN_DUNGEON)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->t_idx[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: t_level of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_t_level(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=TOWN_DUNGEON)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->t_level[toluaI_index]);
+ return 1;
+}
+
+/* set function: t_level of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_t_level(lua_State* tolua_S)
+{
+ int toluaI_index;
+  dungeon_info_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (dungeon_info_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=TOWN_DUNGEON)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->t_level[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: t_num of class  dungeon_info_type */
+static int toluaI_get_dungeon_dungeon_info_type_t_num(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->t_num);
+ return 1;
+}
+
+/* set function: t_num of class  dungeon_info_type */
+static int toluaI_set_dungeon_dungeon_info_type_t_num(lua_State* tolua_S)
+{
+  dungeon_info_type* self = (dungeon_info_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->t_num = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: max_d_idx */
+static int toluaI_get_dungeon_max_d_idx(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)max_d_idx);
+ return 1;
+}
+
+/* set function: max_d_idx */
+static int toluaI_set_dungeon_max_d_idx(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  max_d_idx = ((u16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: d_info */
+static int toluaI_get_dungeon_d_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_d_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&d_info[toluaI_index],tolua_tag(tolua_S,"dungeon_info_type"));
+ return 1;
+}
+
+/* set function: d_info */
+static int toluaI_set_dungeon_d_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_d_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  d_info[toluaI_index] = *((dungeon_info_type*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: d_name */
+static int toluaI_get_dungeon_d_name(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)d_name);
+ return 1;
+}
+
+/* set function: d_name */
+static int toluaI_set_dungeon_d_name(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  d_name = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: d_text */
+static int toluaI_get_dungeon_d_text(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)d_text);
+ return 1;
+}
+
+/* set function: d_text */
+static int toluaI_set_dungeon_d_text(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  d_text = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: max_wild_x */
+static int toluaI_get_dungeon_max_wild_x(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)max_wild_x);
+ return 1;
+}
+
+/* set function: max_wild_x */
+static int toluaI_set_dungeon_max_wild_x(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  max_wild_x = ((u16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: max_wild_y */
+static int toluaI_get_dungeon_max_wild_y(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)max_wild_y);
+ return 1;
+}
+
+/* set function: max_wild_y */
+static int toluaI_set_dungeon_max_wild_y(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  max_wild_y = ((u16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: max_wf_idx */
+static int toluaI_get_dungeon_max_wf_idx(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)max_wf_idx);
+ return 1;
+}
+
+/* set function: max_wf_idx */
+static int toluaI_set_dungeon_max_wf_idx(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  max_wf_idx = ((u16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: wf_info */
+static int toluaI_get_dungeon_wf_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_wf_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&wf_info[toluaI_index],tolua_tag(tolua_S,"wilderness_type_info"));
+ return 1;
+}
+
+/* set function: wf_info */
+static int toluaI_set_dungeon_wf_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_wf_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  wf_info[toluaI_index] = *((wilderness_type_info*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: wf_name */
+static int toluaI_get_dungeon_wf_name(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)wf_name);
+ return 1;
+}
+
+/* set function: wf_name */
+static int toluaI_set_dungeon_wf_name(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  wf_name = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: wf_text */
+static int toluaI_get_dungeon_wf_text(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)wf_text);
+ return 1;
+}
+
+/* set function: wf_text */
+static int toluaI_set_dungeon_wf_text(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  wf_text = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: DUNGEON_DEATH */
+static int toluaI_get_dungeon_DUNGEON_DEATH(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)DUNGEON_DEATH);
+ return 1;
+}
+
+/* set function: DUNGEON_DEATH */
+static int toluaI_set_dungeon_DUNGEON_DEATH(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  DUNGEON_DEATH = ((s32b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: dungeon_type */
+static int toluaI_get_dungeon_current_dungeon_idx(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)dungeon_type);
+ return 1;
+}
+
+/* set function: dungeon_type */
+static int toluaI_set_dungeon_current_dungeon_idx(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  dungeon_type = ((byte)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* function: lua_get_wild_map */
+static int toluaI_dungeon_wild_map00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  wilderness_map* toluaI_ret = (wilderness_map*)  lua_get_wild_map(y,x);
+ tolua_pushusertype(tolua_S,(void*)toluaI_ret,tolua_tag(tolua_S,"wilderness_map"));
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'wild_map'.");
+ return 0;
+}
+
+/* function: place_trap */
+static int toluaI_dungeon_place_trap00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  place_trap(y,x);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'place_trap'.");
+ return 0;
+}
+
+/* function: place_floor */
+static int toluaI_dungeon_place_floor00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  place_floor(y,x);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'place_floor'.");
+ return 0;
+}
+
+/* function: place_filler */
+static int toluaI_dungeon_place_filler00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  place_filler(y,x);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'place_filler'.");
+ return 0;
+}
+
+/* function: add_scripted_generator */
+static int toluaI_dungeon_add_scripted_generator00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,6)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr name = ((cptr)  tolua_getstring(tolua_S,1,0));
+  bool stairs = ((bool)  tolua_getnumber(tolua_S,2,0));
+  bool monsters = ((bool)  tolua_getnumber(tolua_S,3,0));
+  bool objects = ((bool)  tolua_getnumber(tolua_S,4,0));
+  bool miscs = ((bool)  tolua_getnumber(tolua_S,5,0));
+ {
+  add_scripted_generator(name,stairs,monsters,objects,miscs);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'add_scripted_generator'.");
+ return 0;
+}
+
+/* function: new_player_spot */
+static int toluaI_dungeon_new_player_spot00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int branch = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  new_player_spot(branch);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'new_player_spot'.");
+ return 0;
+}
+
+/* function: get_level_desc */
+static int toluaI_dungeon_get_level_desc00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  char* buf = ((char*)  tolua_getstring(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  get_level_desc(buf);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_level_desc'.");
+ return 0;
+}
+
+/* function: get_level_flags */
+static int toluaI_dungeon_get_level_flags00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  get_level_flags();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_level_flags'.");
+ return 0;
+}
+
+/* function: get_dungeon_name */
+static int toluaI_dungeon_get_dungeon_name00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  char* buf = ((char*)  tolua_getstring(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  get_dungeon_name(buf);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_dungeon_name'.");
+ return 0;
+}
+
+/* function: get_dungeon_special */
+static int toluaI_dungeon_get_dungeon_special00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  char* buf = ((char*)  tolua_getstring(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  get_dungeon_special(buf);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_dungeon_special'.");
+ return 0;
+}
+
+/* function: get_command */
+static int toluaI_dungeon_get_command00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  const char* file = ((const char*)  tolua_getstring(tolua_S,1,0));
+  char comm = ((char)  tolua_getnumber(tolua_S,2,0));
+  char* param = ((char*)  tolua_getstring(tolua_S,3,0));
+ {
+  bool toluaI_ret = (bool)  get_command(file,comm,param);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_command'.");
+ return 0;
+}
+
+/* function: get_branch */
+static int toluaI_dungeon_get_branch00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  int toluaI_ret = (int)  get_branch();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_branch'.");
+ return 0;
+}
+
+/* function: get_fbranch */
+static int toluaI_dungeon_get_fbranch00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  int toluaI_ret = (int)  get_fbranch();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_fbranch'.");
+ return 0;
+}
+
+/* function: get_flevel */
+static int toluaI_dungeon_get_flevel00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  int toluaI_ret = (int)  get_flevel();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_flevel'.");
+ return 0;
+}
+
+/* function: get_dungeon_save */
+static int toluaI_dungeon_get_dungeon_save00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  char* buf = ((char*)  tolua_getstring(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  get_dungeon_save(buf);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_dungeon_save'.");
+ return 0;
+}
+
+/* Open function */
+int tolua_dungeon_open (lua_State* tolua_S)
+{
+ tolua_open(tolua_S);
+ toluaI_reg_types(tolua_S);
+ tolua_constant(tolua_S,NULL,"CAVE_MARK",CAVE_MARK);
+ tolua_constant(tolua_S,NULL,"CAVE_GLOW",CAVE_GLOW);
+ tolua_constant(tolua_S,NULL,"CAVE_ICKY",CAVE_ICKY);
+ tolua_constant(tolua_S,NULL,"CAVE_ROOM",CAVE_ROOM);
+ tolua_constant(tolua_S,NULL,"CAVE_SEEN",CAVE_SEEN);
+ tolua_constant(tolua_S,NULL,"CAVE_VIEW",CAVE_VIEW);
+ tolua_constant(tolua_S,NULL,"CAVE_TEMP",CAVE_TEMP);
+ tolua_constant(tolua_S,NULL,"CAVE_WALL",CAVE_WALL);
+ tolua_constant(tolua_S,NULL,"CAVE_TRDT",CAVE_TRDT);
+ tolua_constant(tolua_S,NULL,"CAVE_IDNT",CAVE_IDNT);
+ tolua_constant(tolua_S,NULL,"CAVE_SPEC",CAVE_SPEC);
+ tolua_constant(tolua_S,NULL,"CAVE_FREE",CAVE_FREE);
+ tolua_constant(tolua_S,NULL,"CAVE_DETECT",CAVE_DETECT);
+ tolua_constant(tolua_S,NULL,"CAVE_PLIT",CAVE_PLIT);
+ tolua_constant(tolua_S,NULL,"CAVE_MLIT",CAVE_MLIT);
+ tolua_constant(tolua_S,NULL,"FEAT_NONE",FEAT_NONE);
+ tolua_constant(tolua_S,NULL,"FEAT_FLOOR",FEAT_FLOOR);
+ tolua_constant(tolua_S,NULL,"FEAT_FOUNTAIN",FEAT_FOUNTAIN);
+ tolua_constant(tolua_S,NULL,"FEAT_GLYPH",FEAT_GLYPH);
+ tolua_constant(tolua_S,NULL,"FEAT_OPEN",FEAT_OPEN);
+ tolua_constant(tolua_S,NULL,"FEAT_BROKEN",FEAT_BROKEN);
+ tolua_constant(tolua_S,NULL,"FEAT_LESS",FEAT_LESS);
+ tolua_constant(tolua_S,NULL,"FEAT_MORE",FEAT_MORE);
+ tolua_constant(tolua_S,NULL,"FEAT_QUEST_ENTER",FEAT_QUEST_ENTER);
+ tolua_constant(tolua_S,NULL,"FEAT_QUEST_EXIT",FEAT_QUEST_EXIT);
+ tolua_constant(tolua_S,NULL,"FEAT_QUEST_DOWN",FEAT_QUEST_DOWN);
+ tolua_constant(tolua_S,NULL,"FEAT_QUEST_UP",FEAT_QUEST_UP);
+ tolua_constant(tolua_S,NULL,"FEAT_SHAFT_DOWN",FEAT_SHAFT_DOWN);
+ tolua_constant(tolua_S,NULL,"FEAT_SHAFT_UP",FEAT_SHAFT_UP);
+ tolua_constant(tolua_S,NULL,"FEAT_EMPTY_FOUNTAIN",FEAT_EMPTY_FOUNTAIN);
+ tolua_constant(tolua_S,NULL,"FEAT_TRAP",FEAT_TRAP);
+ tolua_constant(tolua_S,NULL,"FEAT_DOOR_HEAD",FEAT_DOOR_HEAD);
+ tolua_constant(tolua_S,NULL,"FEAT_DOOR_TAIL",FEAT_DOOR_TAIL);
+ tolua_constant(tolua_S,NULL,"FEAT_SECRET",FEAT_SECRET);
+ tolua_constant(tolua_S,NULL,"FEAT_RUBBLE",FEAT_RUBBLE);
+ tolua_constant(tolua_S,NULL,"FEAT_MAGMA",FEAT_MAGMA);
+ tolua_constant(tolua_S,NULL,"FEAT_QUARTZ",FEAT_QUARTZ);
+ tolua_constant(tolua_S,NULL,"FEAT_MAGMA_H",FEAT_MAGMA_H);
+ tolua_constant(tolua_S,NULL,"FEAT_QUARTZ_H",FEAT_QUARTZ_H);
+ tolua_constant(tolua_S,NULL,"FEAT_MAGMA_K",FEAT_MAGMA_K);
+ tolua_constant(tolua_S,NULL,"FEAT_QUARTZ_K",FEAT_QUARTZ_K);
+ tolua_constant(tolua_S,NULL,"FEAT_WALL_EXTRA",FEAT_WALL_EXTRA);
+ tolua_constant(tolua_S,NULL,"FEAT_WALL_INNER",FEAT_WALL_INNER);
+ tolua_constant(tolua_S,NULL,"FEAT_WALL_OUTER",FEAT_WALL_OUTER);
+ tolua_constant(tolua_S,NULL,"FEAT_WALL_SOLID",FEAT_WALL_SOLID);
+ tolua_constant(tolua_S,NULL,"FEAT_PERM_EXTRA",FEAT_PERM_EXTRA);
+ tolua_constant(tolua_S,NULL,"FEAT_PERM_INNER",FEAT_PERM_INNER);
+ tolua_constant(tolua_S,NULL,"FEAT_PERM_OUTER",FEAT_PERM_OUTER);
+ tolua_constant(tolua_S,NULL,"FEAT_PERM_SOLID",FEAT_PERM_SOLID);
+ tolua_constant(tolua_S,NULL,"FEAT_MINOR_GLYPH",FEAT_MINOR_GLYPH);
+ tolua_constant(tolua_S,NULL,"FEAT_PATTERN_START",FEAT_PATTERN_START);
+ tolua_constant(tolua_S,NULL,"FEAT_PATTERN_1",FEAT_PATTERN_1);
+ tolua_constant(tolua_S,NULL,"FEAT_PATTERN_2",FEAT_PATTERN_2);
+ tolua_constant(tolua_S,NULL,"FEAT_PATTERN_3",FEAT_PATTERN_3);
+ tolua_constant(tolua_S,NULL,"FEAT_PATTERN_4",FEAT_PATTERN_4);
+ tolua_constant(tolua_S,NULL,"FEAT_PATTERN_END",FEAT_PATTERN_END);
+ tolua_constant(tolua_S,NULL,"FEAT_PATTERN_OLD",FEAT_PATTERN_OLD);
+ tolua_constant(tolua_S,NULL,"FEAT_PATTERN_XTRA1",FEAT_PATTERN_XTRA1);
+ tolua_constant(tolua_S,NULL,"FEAT_PATTERN_XTRA2",FEAT_PATTERN_XTRA2);
+ tolua_constant(tolua_S,NULL,"FEAT_SHOP",FEAT_SHOP);
+ tolua_constant(tolua_S,NULL,"FEAT_QUEST1",FEAT_QUEST1);
+ tolua_constant(tolua_S,NULL,"FEAT_QUEST2",FEAT_QUEST2);
+ tolua_constant(tolua_S,NULL,"FEAT_QUEST3",FEAT_QUEST3);
+ tolua_constant(tolua_S,NULL,"FEAT_QUEST4",FEAT_QUEST4);
+ tolua_constant(tolua_S,NULL,"FEAT_SHAL_WATER",FEAT_SHAL_WATER);
+ tolua_constant(tolua_S,NULL,"FEAT_DEEP_LAVA",FEAT_DEEP_LAVA);
+ tolua_constant(tolua_S,NULL,"FEAT_SHAL_LAVA",FEAT_SHAL_LAVA);
+ tolua_constant(tolua_S,NULL,"FEAT_DARK_PIT",FEAT_DARK_PIT);
+ tolua_constant(tolua_S,NULL,"FEAT_DIRT",FEAT_DIRT);
+ tolua_constant(tolua_S,NULL,"FEAT_GRASS",FEAT_GRASS);
+ tolua_constant(tolua_S,NULL,"FEAT_ICE",FEAT_ICE);
+ tolua_constant(tolua_S,NULL,"FEAT_SAND",FEAT_SAND);
+ tolua_constant(tolua_S,NULL,"FEAT_DEAD_TREE",FEAT_DEAD_TREE);
+ tolua_constant(tolua_S,NULL,"FEAT_ASH",FEAT_ASH);
+ tolua_constant(tolua_S,NULL,"FEAT_MUD",FEAT_MUD);
+ tolua_constant(tolua_S,NULL,"FEAT_ICE_WALL",FEAT_ICE_WALL);
+ tolua_constant(tolua_S,NULL,"FEAT_TREES",FEAT_TREES);
+ tolua_constant(tolua_S,NULL,"FEAT_MOUNTAIN",FEAT_MOUNTAIN);
+ tolua_constant(tolua_S,NULL,"FEAT_SANDWALL",FEAT_SANDWALL);
+ tolua_constant(tolua_S,NULL,"FEAT_SANDWALL_H",FEAT_SANDWALL_H);
+ tolua_constant(tolua_S,NULL,"FEAT_SANDWALL_K",FEAT_SANDWALL_K);
+ tolua_constant(tolua_S,NULL,"FEAT_BETWEEN",FEAT_BETWEEN);
+ tolua_constant(tolua_S,NULL,"FEAT_ALTAR_HEAD",FEAT_ALTAR_HEAD);
+ tolua_constant(tolua_S,NULL,"FEAT_ALTAR_TAIL",FEAT_ALTAR_TAIL);
+ tolua_constant(tolua_S,NULL,"FEAT_MARKER",FEAT_MARKER);
+ tolua_constant(tolua_S,NULL,"FEAT_TAINTED_WATER",FEAT_TAINTED_WATER);
+ tolua_constant(tolua_S,NULL,"FEAT_MON_TRAP",FEAT_MON_TRAP);
+ tolua_constant(tolua_S,NULL,"FEAT_BETWEEN2",FEAT_BETWEEN2);
+ tolua_constant(tolua_S,NULL,"FEAT_LAVA_WALL",FEAT_LAVA_WALL);
+ tolua_constant(tolua_S,NULL,"FEAT_GREAT_FIRE",FEAT_GREAT_FIRE);
+ tolua_constant(tolua_S,NULL,"FEAT_WAY_MORE",FEAT_WAY_MORE);
+ tolua_constant(tolua_S,NULL,"FEAT_WAY_LESS",FEAT_WAY_LESS);
+ tolua_constant(tolua_S,NULL,"FEAT_EKKAIA",FEAT_EKKAIA);
+ tolua_constant(tolua_S,NULL,"FEAT_DEEP_WATER",FEAT_DEEP_WATER);
+ tolua_constant(tolua_S,NULL,"FEAT_GLASS_WALL",FEAT_GLASS_WALL);
+ tolua_constant(tolua_S,NULL,"FEAT_ILLUS_WALL",FEAT_ILLUS_WALL);
+ tolua_constant(tolua_S,NULL,"FEAT_FLOWER",FEAT_FLOWER);
+ tolua_constant(tolua_S,NULL,"FEAT_SMALL_TREES",FEAT_SMALL_TREES);
+ tolua_constant(tolua_S,NULL,"FEAT_TOWN",FEAT_TOWN);
+ tolua_constant(tolua_S,NULL,"FEAT_FIRE",FEAT_FIRE);
+ tolua_constant(tolua_S,NULL,"DF1_PRINCIPAL",DF1_PRINCIPAL);
+ tolua_constant(tolua_S,NULL,"DF1_MAZE",DF1_MAZE);
+ tolua_constant(tolua_S,NULL,"DF1_SMALLEST",DF1_SMALLEST);
+ tolua_constant(tolua_S,NULL,"DF1_SMALL",DF1_SMALL);
+ tolua_constant(tolua_S,NULL,"DF1_BIG",DF1_BIG);
+ tolua_constant(tolua_S,NULL,"DF1_NO_DOORS",DF1_NO_DOORS);
+ tolua_constant(tolua_S,NULL,"DF1_WATER_RIVER",DF1_WATER_RIVER);
+ tolua_constant(tolua_S,NULL,"DF1_LAVA_RIVER",DF1_LAVA_RIVER);
+ tolua_constant(tolua_S,NULL,"DF1_WATER_RIVERS",DF1_WATER_RIVERS);
+ tolua_constant(tolua_S,NULL,"DF1_LAVA_RIVERS",DF1_LAVA_RIVERS);
+ tolua_constant(tolua_S,NULL,"DF1_CAVE",DF1_CAVE);
+ tolua_constant(tolua_S,NULL,"DF1_CAVERN",DF1_CAVERN);
+ tolua_constant(tolua_S,NULL,"DF1_NO_UP",DF1_NO_UP);
+ tolua_constant(tolua_S,NULL,"DF1_HOT",DF1_HOT);
+ tolua_constant(tolua_S,NULL,"DF1_COLD",DF1_COLD);
+ tolua_constant(tolua_S,NULL,"DF1_FORCE_DOWN",DF1_FORCE_DOWN);
+ tolua_constant(tolua_S,NULL,"DF1_FORGET",DF1_FORGET);
+ tolua_constant(tolua_S,NULL,"DF1_NO_DESTROY",DF1_NO_DESTROY);
+ tolua_constant(tolua_S,NULL,"DF1_SAND_VEIN",DF1_SAND_VEIN);
+ tolua_constant(tolua_S,NULL,"DF1_CIRCULAR_ROOMS",DF1_CIRCULAR_ROOMS);
+ tolua_constant(tolua_S,NULL,"DF1_EMPTY",DF1_EMPTY);
+ tolua_constant(tolua_S,NULL,"DF1_DAMAGE_FEAT",DF1_DAMAGE_FEAT);
+ tolua_constant(tolua_S,NULL,"DF1_FLAT",DF1_FLAT);
+ tolua_constant(tolua_S,NULL,"DF1_TOWER",DF1_TOWER);
+ tolua_constant(tolua_S,NULL,"DF1_RANDOM_TOWNS",DF1_RANDOM_TOWNS);
+ tolua_constant(tolua_S,NULL,"DF1_DOUBLE",DF1_DOUBLE);
+ tolua_constant(tolua_S,NULL,"DF1_LIFE_LEVEL",DF1_LIFE_LEVEL);
+ tolua_constant(tolua_S,NULL,"DF1_EVOLVE",DF1_EVOLVE);
+ tolua_constant(tolua_S,NULL,"DF1_ADJUST_LEVEL_1",DF1_ADJUST_LEVEL_1);
+ tolua_constant(tolua_S,NULL,"DF1_ADJUST_LEVEL_2",DF1_ADJUST_LEVEL_2);
+ tolua_constant(tolua_S,NULL,"DF1_NO_RECALL",DF1_NO_RECALL);
+ tolua_constant(tolua_S,NULL,"DF1_NO_STREAMERS",DF1_NO_STREAMERS);
+ tolua_constant(tolua_S,NULL,"DF2_ADJUST_LEVEL_1_2",DF2_ADJUST_LEVEL_1_2);
+ tolua_constant(tolua_S,NULL,"DF2_NO_SHAFT",DF2_NO_SHAFT);
+ tolua_constant(tolua_S,NULL,"DF2_ADJUST_LEVEL_PLAYER",DF2_ADJUST_LEVEL_PLAYER);
+ tolua_constant(tolua_S,NULL,"DF2_NO_TELEPORT",DF2_NO_TELEPORT);
+ tolua_constant(tolua_S,NULL,"DF2_ASK_LEAVE",DF2_ASK_LEAVE);
+ tolua_constant(tolua_S,NULL,"DF2_NO_STAIR",DF2_NO_STAIR);
+ tolua_constant(tolua_S,NULL,"DF2_SPECIAL",DF2_SPECIAL);
+ tolua_constant(tolua_S,NULL,"DF2_NO_NEW_MONSTER",DF2_NO_NEW_MONSTER);
+ tolua_constant(tolua_S,NULL,"DF2_DESC",DF2_DESC);
+ tolua_constant(tolua_S,NULL,"DF2_NO_GENO",DF2_NO_GENO);
+ tolua_constant(tolua_S,NULL,"DF2_NO_BREATH",DF2_NO_BREATH);
+ tolua_constant(tolua_S,NULL,"DF2_WATER_BREATH",DF2_WATER_BREATH);
+ tolua_constant(tolua_S,NULL,"DF2_ELVEN",DF2_ELVEN);
+ tolua_constant(tolua_S,NULL,"DF2_DWARVEN",DF2_DWARVEN);
+ tolua_constant(tolua_S,NULL,"DF2_NO_EASY_MOVE",DF2_NO_EASY_MOVE);
+ tolua_constant(tolua_S,NULL,"DF2_NO_RECALL_OUT",DF2_NO_RECALL_OUT);
+ tolua_constant(tolua_S,NULL,"DF2_DESC_ALWAYS",DF2_DESC_ALWAYS);
+ tolua_globalvar(tolua_S,"level_flags1",toluaI_get_dungeon_level_flags1,toluaI_set_dungeon_level_flags1);
+ tolua_globalvar(tolua_S,"level_flags2",toluaI_get_dungeon_level_flags2,toluaI_set_dungeon_level_flags2);
+ tolua_constant(tolua_S,NULL,"MAX_HGT",MAX_HGT);
+ tolua_constant(tolua_S,NULL,"MAX_WID",MAX_WID);
+ tolua_constant(tolua_S,NULL,"TOWN_RANDOM",TOWN_RANDOM);
+ tolua_constant(tolua_S,NULL,"TOWN_DUNGEON",TOWN_DUNGEON);
+ tolua_constant(tolua_S,NULL,"TOWN_CHANCE",TOWN_CHANCE);
+ tolua_constant(tolua_S,NULL,"TERRAIN_EDGE",TERRAIN_EDGE);
+ tolua_constant(tolua_S,NULL,"TERRAIN_TOWN",TERRAIN_TOWN);
+ tolua_constant(tolua_S,NULL,"TERRAIN_DEEP_WATER",TERRAIN_DEEP_WATER);
+ tolua_constant(tolua_S,NULL,"TERRAIN_SHALLOW_WATER",TERRAIN_SHALLOW_WATER);
+ tolua_constant(tolua_S,NULL,"TERRAIN_SWAMP",TERRAIN_SWAMP);
+ tolua_constant(tolua_S,NULL,"TERRAIN_DIRT",TERRAIN_DIRT);
+ tolua_constant(tolua_S,NULL,"TERRAIN_GRASS",TERRAIN_GRASS);
+ tolua_constant(tolua_S,NULL,"TERRAIN_TREES",TERRAIN_TREES);
+ tolua_constant(tolua_S,NULL,"TERRAIN_DESERT",TERRAIN_DESERT);
+ tolua_constant(tolua_S,NULL,"TERRAIN_SHALLOW_LAVA",TERRAIN_SHALLOW_LAVA);
+ tolua_constant(tolua_S,NULL,"TERRAIN_DEEP_LAVA",TERRAIN_DEEP_LAVA);
+ tolua_constant(tolua_S,NULL,"TERRAIN_MOUNTAIN",TERRAIN_MOUNTAIN);
+ tolua_constant(tolua_S,NULL,"MAX_WILD_TERRAIN",MAX_WILD_TERRAIN);
+ tolua_cclass(tolua_S,"border_type","");
+ tolua_tablearray(tolua_S,"border_type","north",toluaI_get_dungeon_border_type_north,toluaI_set_dungeon_border_type_north);
+ tolua_tablearray(tolua_S,"border_type","south",toluaI_get_dungeon_border_type_south,toluaI_set_dungeon_border_type_south);
+ tolua_tablearray(tolua_S,"border_type","east",toluaI_get_dungeon_border_type_east,toluaI_set_dungeon_border_type_east);
+ tolua_tablearray(tolua_S,"border_type","west",toluaI_get_dungeon_border_type_west,toluaI_set_dungeon_border_type_west);
+ tolua_tablevar(tolua_S,"border_type","north_west",toluaI_get_dungeon_border_type_north_west,toluaI_set_dungeon_border_type_north_west);
+ tolua_tablevar(tolua_S,"border_type","north_east",toluaI_get_dungeon_border_type_north_east,toluaI_set_dungeon_border_type_north_east);
+ tolua_tablevar(tolua_S,"border_type","south_west",toluaI_get_dungeon_border_type_south_west,toluaI_set_dungeon_border_type_south_west);
+ tolua_tablevar(tolua_S,"border_type","south_east",toluaI_get_dungeon_border_type_south_east,toluaI_set_dungeon_border_type_south_east);
+ tolua_cclass(tolua_S,"wilderness_type_info","");
+ tolua_tablevar(tolua_S,"wilderness_type_info","name",toluaI_get_dungeon_wilderness_type_info_name,toluaI_set_dungeon_wilderness_type_info_name);
+ tolua_tablevar(tolua_S,"wilderness_type_info","text",toluaI_get_dungeon_wilderness_type_info_text,toluaI_set_dungeon_wilderness_type_info_text);
+ tolua_tablevar(tolua_S,"wilderness_type_info","entrance",toluaI_get_dungeon_wilderness_type_info_entrance,toluaI_set_dungeon_wilderness_type_info_entrance);
+ tolua_tablevar(tolua_S,"wilderness_type_info","road",toluaI_get_dungeon_wilderness_type_info_road,toluaI_set_dungeon_wilderness_type_info_road);
+ tolua_tablevar(tolua_S,"wilderness_type_info","level",toluaI_get_dungeon_wilderness_type_info_level,toluaI_set_dungeon_wilderness_type_info_level);
+ tolua_tablevar(tolua_S,"wilderness_type_info","flags1",toluaI_get_dungeon_wilderness_type_info_flags1,toluaI_set_dungeon_wilderness_type_info_flags1);
+ tolua_tablevar(tolua_S,"wilderness_type_info","feat",toluaI_get_dungeon_wilderness_type_info_feat,toluaI_set_dungeon_wilderness_type_info_feat);
+ tolua_tablevar(tolua_S,"wilderness_type_info","terrain_idx",toluaI_get_dungeon_wilderness_type_info_terrain_idx,toluaI_set_dungeon_wilderness_type_info_terrain_idx);
+ tolua_tablearray(tolua_S,"wilderness_type_info","terrain",toluaI_get_dungeon_wilderness_type_info_terrain,toluaI_set_dungeon_wilderness_type_info_terrain);
+ tolua_cclass(tolua_S,"wilderness_map","");
+ tolua_tablevar(tolua_S,"wilderness_map","feat",toluaI_get_dungeon_wilderness_map_feat,toluaI_set_dungeon_wilderness_map_feat);
+ tolua_tablevar(tolua_S,"wilderness_map","seed",toluaI_get_dungeon_wilderness_map_seed,toluaI_set_dungeon_wilderness_map_seed);
+ tolua_tablevar(tolua_S,"wilderness_map","entrance",toluaI_get_dungeon_wilderness_map_entrance,toluaI_set_dungeon_wilderness_map_entrance);
+ tolua_tablevar(tolua_S,"wilderness_map","known",toluaI_get_dungeon_wilderness_map_known,toluaI_set_dungeon_wilderness_map_known);
+ tolua_cclass(tolua_S,"town_type","");
+ tolua_tablevar(tolua_S,"town_type","name",toluaI_get_dungeon_town_type_name,toluaI_set_dungeon_town_type_name);
+ tolua_tablevar(tolua_S,"town_type","seed",toluaI_get_dungeon_town_type_seed,toluaI_set_dungeon_town_type_seed);
+ tolua_tablearray(tolua_S,"town_type","store",toluaI_get_dungeon_town_type_store,toluaI_set_dungeon_town_type_store);
+ tolua_tablevar(tolua_S,"town_type","numstores",toluaI_get_dungeon_town_type_numstores,toluaI_set_dungeon_town_type_numstores);
+ tolua_tablevar(tolua_S,"town_type","flags",toluaI_get_dungeon_town_type_flags,toluaI_set_dungeon_town_type_flags);
+ tolua_tablevar(tolua_S,"town_type","stocked",toluaI_get_dungeon_town_type_stocked,toluaI_set_dungeon_town_type_stocked);
+ tolua_tablevar(tolua_S,"town_type","destroyed",toluaI_get_dungeon_town_type_destroyed,toluaI_set_dungeon_town_type_destroyed);
+ tolua_globalvar(tolua_S,"max_towns",toluaI_get_dungeon_max_towns,toluaI_set_dungeon_max_towns);
+ tolua_globalarray(tolua_S,"town_info",toluaI_get_dungeon_town_info,toluaI_set_dungeon_town_info);
+ tolua_cclass(tolua_S,"rule_type","");
+ tolua_tablevar(tolua_S,"rule_type","mode",toluaI_get_dungeon_rule_type_mode,toluaI_set_dungeon_rule_type_mode);
+ tolua_tablevar(tolua_S,"rule_type","percent",toluaI_get_dungeon_rule_type_percent,toluaI_set_dungeon_rule_type_percent);
+ tolua_tablevar(tolua_S,"rule_type","mflags1",toluaI_get_dungeon_rule_type_mflags1,toluaI_set_dungeon_rule_type_mflags1);
+ tolua_tablevar(tolua_S,"rule_type","mflags2",toluaI_get_dungeon_rule_type_mflags2,toluaI_set_dungeon_rule_type_mflags2);
+ tolua_tablevar(tolua_S,"rule_type","mflags3",toluaI_get_dungeon_rule_type_mflags3,toluaI_set_dungeon_rule_type_mflags3);
+ tolua_tablevar(tolua_S,"rule_type","mflags4",toluaI_get_dungeon_rule_type_mflags4,toluaI_set_dungeon_rule_type_mflags4);
+ tolua_tablevar(tolua_S,"rule_type","mflags5",toluaI_get_dungeon_rule_type_mflags5,toluaI_set_dungeon_rule_type_mflags5);
+ tolua_tablevar(tolua_S,"rule_type","mflags6",toluaI_get_dungeon_rule_type_mflags6,toluaI_set_dungeon_rule_type_mflags6);
+ tolua_tablevar(tolua_S,"rule_type","mflags7",toluaI_get_dungeon_rule_type_mflags7,toluaI_set_dungeon_rule_type_mflags7);
+ tolua_tablevar(tolua_S,"rule_type","mflags8",toluaI_get_dungeon_rule_type_mflags8,toluaI_set_dungeon_rule_type_mflags8);
+ tolua_tablevar(tolua_S,"rule_type","mflags9",toluaI_get_dungeon_rule_type_mflags9,toluaI_set_dungeon_rule_type_mflags9);
+ tolua_tablearray(tolua_S,"rule_type","r_char",toluaI_get_dungeon_rule_type_r_char,toluaI_set_dungeon_rule_type_r_char);
+ tolua_cclass(tolua_S,"obj_theme","");
+ tolua_tablevar(tolua_S,"obj_theme","treasure",toluaI_get_dungeon_obj_theme_treasure,toluaI_set_dungeon_obj_theme_treasure);
+ tolua_tablevar(tolua_S,"obj_theme","combat",toluaI_get_dungeon_obj_theme_combat,toluaI_set_dungeon_obj_theme_combat);
+ tolua_tablevar(tolua_S,"obj_theme","magic",toluaI_get_dungeon_obj_theme_magic,toluaI_set_dungeon_obj_theme_magic);
+ tolua_tablevar(tolua_S,"obj_theme","tools",toluaI_get_dungeon_obj_theme_tools,toluaI_set_dungeon_obj_theme_tools);
+ tolua_cclass(tolua_S,"dungeon_info_type","");
+ tolua_tablevar(tolua_S,"dungeon_info_type","name",toluaI_get_dungeon_dungeon_info_type_name,toluaI_set_dungeon_dungeon_info_type_name);
+ tolua_tablevar(tolua_S,"dungeon_info_type","text",toluaI_get_dungeon_dungeon_info_type_text,toluaI_set_dungeon_dungeon_info_type_text);
+ tolua_tablearray(tolua_S,"dungeon_info_type","short_name",toluaI_get_dungeon_dungeon_info_type_short_name,toluaI_set_dungeon_dungeon_info_type_short_name);
+ tolua_tablevar(tolua_S,"dungeon_info_type","floor1",toluaI_get_dungeon_dungeon_info_type_floor1,toluaI_set_dungeon_dungeon_info_type_floor1);
+ tolua_tablearray(tolua_S,"dungeon_info_type","floor_percent1",toluaI_get_dungeon_dungeon_info_type_floor_percent1,toluaI_set_dungeon_dungeon_info_type_floor_percent1);
+ tolua_tablevar(tolua_S,"dungeon_info_type","floor2",toluaI_get_dungeon_dungeon_info_type_floor2,toluaI_set_dungeon_dungeon_info_type_floor2);
+ tolua_tablearray(tolua_S,"dungeon_info_type","floor_percent2",toluaI_get_dungeon_dungeon_info_type_floor_percent2,toluaI_set_dungeon_dungeon_info_type_floor_percent2);
+ tolua_tablevar(tolua_S,"dungeon_info_type","floor3",toluaI_get_dungeon_dungeon_info_type_floor3,toluaI_set_dungeon_dungeon_info_type_floor3);
+ tolua_tablearray(tolua_S,"dungeon_info_type","floor_percent3",toluaI_get_dungeon_dungeon_info_type_floor_percent3,toluaI_set_dungeon_dungeon_info_type_floor_percent3);
+ tolua_tablevar(tolua_S,"dungeon_info_type","outer_wall",toluaI_get_dungeon_dungeon_info_type_outer_wall,toluaI_set_dungeon_dungeon_info_type_outer_wall);
+ tolua_tablevar(tolua_S,"dungeon_info_type","inner_wall",toluaI_get_dungeon_dungeon_info_type_inner_wall,toluaI_set_dungeon_dungeon_info_type_inner_wall);
+ tolua_tablevar(tolua_S,"dungeon_info_type","fill_type1",toluaI_get_dungeon_dungeon_info_type_fill_type1,toluaI_set_dungeon_dungeon_info_type_fill_type1);
+ tolua_tablearray(tolua_S,"dungeon_info_type","fill_percent1",toluaI_get_dungeon_dungeon_info_type_fill_percent1,toluaI_set_dungeon_dungeon_info_type_fill_percent1);
+ tolua_tablevar(tolua_S,"dungeon_info_type","fill_type2",toluaI_get_dungeon_dungeon_info_type_fill_type2,toluaI_set_dungeon_dungeon_info_type_fill_type2);
+ tolua_tablearray(tolua_S,"dungeon_info_type","fill_percent2",toluaI_get_dungeon_dungeon_info_type_fill_percent2,toluaI_set_dungeon_dungeon_info_type_fill_percent2);
+ tolua_tablevar(tolua_S,"dungeon_info_type","fill_type3",toluaI_get_dungeon_dungeon_info_type_fill_type3,toluaI_set_dungeon_dungeon_info_type_fill_type3);
+ tolua_tablearray(tolua_S,"dungeon_info_type","fill_percent3",toluaI_get_dungeon_dungeon_info_type_fill_percent3,toluaI_set_dungeon_dungeon_info_type_fill_percent3);
+ tolua_tablevar(tolua_S,"dungeon_info_type","fill_method",toluaI_get_dungeon_dungeon_info_type_fill_method,toluaI_set_dungeon_dungeon_info_type_fill_method);
+ tolua_tablevar(tolua_S,"dungeon_info_type","mindepth",toluaI_get_dungeon_dungeon_info_type_mindepth,toluaI_set_dungeon_dungeon_info_type_mindepth);
+ tolua_tablevar(tolua_S,"dungeon_info_type","maxdepth",toluaI_get_dungeon_dungeon_info_type_maxdepth,toluaI_set_dungeon_dungeon_info_type_maxdepth);
+ tolua_tablevar(tolua_S,"dungeon_info_type","principal",toluaI_get_dungeon_dungeon_info_type_principal,toluaI_set_dungeon_dungeon_info_type_principal);
+ tolua_tablevar(tolua_S,"dungeon_info_type","next",toluaI_get_dungeon_dungeon_info_type_next,toluaI_set_dungeon_dungeon_info_type_next);
+ tolua_tablevar(tolua_S,"dungeon_info_type","min_plev",toluaI_get_dungeon_dungeon_info_type_min_plev,toluaI_set_dungeon_dungeon_info_type_min_plev);
+ tolua_tablevar(tolua_S,"dungeon_info_type","min_m_alloc_level",toluaI_get_dungeon_dungeon_info_type_min_m_alloc_level,toluaI_set_dungeon_dungeon_info_type_min_m_alloc_level);
+ tolua_tablevar(tolua_S,"dungeon_info_type","max_m_alloc_chance",toluaI_get_dungeon_dungeon_info_type_max_m_alloc_chance,toluaI_set_dungeon_dungeon_info_type_max_m_alloc_chance);
+ tolua_tablevar(tolua_S,"dungeon_info_type","flags1",toluaI_get_dungeon_dungeon_info_type_flags1,toluaI_set_dungeon_dungeon_info_type_flags1);
+ tolua_tablevar(tolua_S,"dungeon_info_type","flags2",toluaI_get_dungeon_dungeon_info_type_flags2,toluaI_set_dungeon_dungeon_info_type_flags2);
+ tolua_tablevar(tolua_S,"dungeon_info_type","size_x",toluaI_get_dungeon_dungeon_info_type_size_x,toluaI_set_dungeon_dungeon_info_type_size_x);
+ tolua_tablevar(tolua_S,"dungeon_info_type","size_y",toluaI_get_dungeon_dungeon_info_type_size_y,toluaI_set_dungeon_dungeon_info_type_size_y);
+ tolua_tablearray(tolua_S,"dungeon_info_type","rule_percents",toluaI_get_dungeon_dungeon_info_type_rule_percents,toluaI_set_dungeon_dungeon_info_type_rule_percents);
+ tolua_tablearray(tolua_S,"dungeon_info_type","rules",toluaI_get_dungeon_dungeon_info_type_rules,toluaI_set_dungeon_dungeon_info_type_rules);
+ tolua_tablevar(tolua_S,"dungeon_info_type","final_object",toluaI_get_dungeon_dungeon_info_type_final_object,toluaI_set_dungeon_dungeon_info_type_final_object);
+ tolua_tablevar(tolua_S,"dungeon_info_type","final_artifact",toluaI_get_dungeon_dungeon_info_type_final_artifact,toluaI_set_dungeon_dungeon_info_type_final_artifact);
+ tolua_tablevar(tolua_S,"dungeon_info_type","final_guardian",toluaI_get_dungeon_dungeon_info_type_final_guardian,toluaI_set_dungeon_dungeon_info_type_final_guardian);
+ tolua_tablevar(tolua_S,"dungeon_info_type","ix",toluaI_get_dungeon_dungeon_info_type_ix,toluaI_set_dungeon_dungeon_info_type_ix);
+ tolua_tablevar(tolua_S,"dungeon_info_type","iy",toluaI_get_dungeon_dungeon_info_type_iy,toluaI_set_dungeon_dungeon_info_type_iy);
+ tolua_tablevar(tolua_S,"dungeon_info_type","ox",toluaI_get_dungeon_dungeon_info_type_ox,toluaI_set_dungeon_dungeon_info_type_ox);
+ tolua_tablevar(tolua_S,"dungeon_info_type","oy",toluaI_get_dungeon_dungeon_info_type_oy,toluaI_set_dungeon_dungeon_info_type_oy);
+ tolua_tablevar(tolua_S,"dungeon_info_type","objs",toluaI_get_dungeon_dungeon_info_type_objs,toluaI_set_dungeon_dungeon_info_type_objs);
+ tolua_tablearray(tolua_S,"dungeon_info_type","d_dice",toluaI_get_dungeon_dungeon_info_type_d_dice,toluaI_set_dungeon_dungeon_info_type_d_dice);
+ tolua_tablearray(tolua_S,"dungeon_info_type","d_side",toluaI_get_dungeon_dungeon_info_type_d_side,toluaI_set_dungeon_dungeon_info_type_d_side);
+ tolua_tablearray(tolua_S,"dungeon_info_type","d_frequency",toluaI_get_dungeon_dungeon_info_type_d_frequency,toluaI_set_dungeon_dungeon_info_type_d_frequency);
+ tolua_tablearray(tolua_S,"dungeon_info_type","d_type",toluaI_get_dungeon_dungeon_info_type_d_type,toluaI_set_dungeon_dungeon_info_type_d_type);
+ tolua_tablearray(tolua_S,"dungeon_info_type","t_idx",toluaI_get_dungeon_dungeon_info_type_t_idx,toluaI_set_dungeon_dungeon_info_type_t_idx);
+ tolua_tablearray(tolua_S,"dungeon_info_type","t_level",toluaI_get_dungeon_dungeon_info_type_t_level,toluaI_set_dungeon_dungeon_info_type_t_level);
+ tolua_tablevar(tolua_S,"dungeon_info_type","t_num",toluaI_get_dungeon_dungeon_info_type_t_num,toluaI_set_dungeon_dungeon_info_type_t_num);
+ tolua_globalvar(tolua_S,"max_d_idx",toluaI_get_dungeon_max_d_idx,toluaI_set_dungeon_max_d_idx);
+ tolua_globalarray(tolua_S,"d_info",toluaI_get_dungeon_d_info,toluaI_set_dungeon_d_info);
+ tolua_globalvar(tolua_S,"d_name",toluaI_get_dungeon_d_name,toluaI_set_dungeon_d_name);
+ tolua_globalvar(tolua_S,"d_text",toluaI_get_dungeon_d_text,toluaI_set_dungeon_d_text);
+ tolua_globalvar(tolua_S,"max_wild_x",toluaI_get_dungeon_max_wild_x,toluaI_set_dungeon_max_wild_x);
+ tolua_globalvar(tolua_S,"max_wild_y",toluaI_get_dungeon_max_wild_y,toluaI_set_dungeon_max_wild_y);
+ tolua_globalvar(tolua_S,"max_wf_idx",toluaI_get_dungeon_max_wf_idx,toluaI_set_dungeon_max_wf_idx);
+ tolua_globalarray(tolua_S,"wf_info",toluaI_get_dungeon_wf_info,toluaI_set_dungeon_wf_info);
+ tolua_globalvar(tolua_S,"wf_name",toluaI_get_dungeon_wf_name,toluaI_set_dungeon_wf_name);
+ tolua_globalvar(tolua_S,"wf_text",toluaI_get_dungeon_wf_text,toluaI_set_dungeon_wf_text);
+ tolua_globalvar(tolua_S,"DUNGEON_DEATH",toluaI_get_dungeon_DUNGEON_DEATH,toluaI_set_dungeon_DUNGEON_DEATH);
+ tolua_globalvar(tolua_S,"current_dungeon_idx",toluaI_get_dungeon_current_dungeon_idx,toluaI_set_dungeon_current_dungeon_idx);
+ tolua_function(tolua_S,NULL,"wild_map",toluaI_dungeon_wild_map00);
+ tolua_function(tolua_S,NULL,"place_trap",toluaI_dungeon_place_trap00);
+ tolua_function(tolua_S,NULL,"place_floor",toluaI_dungeon_place_floor00);
+ tolua_function(tolua_S,NULL,"place_filler",toluaI_dungeon_place_filler00);
+ tolua_function(tolua_S,NULL,"add_scripted_generator",toluaI_dungeon_add_scripted_generator00);
+ tolua_function(tolua_S,NULL,"new_player_spot",toluaI_dungeon_new_player_spot00);
+ tolua_function(tolua_S,NULL,"get_level_desc",toluaI_dungeon_get_level_desc00);
+ tolua_function(tolua_S,NULL,"get_level_flags",toluaI_dungeon_get_level_flags00);
+ tolua_function(tolua_S,NULL,"get_dungeon_name",toluaI_dungeon_get_dungeon_name00);
+ tolua_function(tolua_S,NULL,"get_dungeon_special",toluaI_dungeon_get_dungeon_special00);
+ tolua_function(tolua_S,NULL,"get_command",toluaI_dungeon_get_command00);
+ tolua_function(tolua_S,NULL,"get_branch",toluaI_dungeon_get_branch00);
+ tolua_function(tolua_S,NULL,"get_fbranch",toluaI_dungeon_get_fbranch00);
+ tolua_function(tolua_S,NULL,"get_flevel",toluaI_dungeon_get_flevel00);
+ tolua_function(tolua_S,NULL,"get_dungeon_save",toluaI_dungeon_get_dungeon_save00);
+ return 1;
+}
+/* Close function */
+void tolua_dungeon_close (lua_State* tolua_S)
+{
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"CAVE_MARK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"CAVE_GLOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"CAVE_ICKY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"CAVE_ROOM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"CAVE_SEEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"CAVE_VIEW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"CAVE_TEMP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"CAVE_WALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"CAVE_TRDT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"CAVE_IDNT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"CAVE_SPEC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"CAVE_FREE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"CAVE_DETECT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"CAVE_PLIT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"CAVE_MLIT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_NONE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_FLOOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_FOUNTAIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_GLYPH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_OPEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_BROKEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_LESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_MORE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_QUEST_ENTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_QUEST_EXIT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_QUEST_DOWN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_QUEST_UP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_SHAFT_DOWN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_SHAFT_UP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_EMPTY_FOUNTAIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_TRAP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_DOOR_HEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_DOOR_TAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_SECRET");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_RUBBLE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_MAGMA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_QUARTZ");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_MAGMA_H");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_QUARTZ_H");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_MAGMA_K");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_QUARTZ_K");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_WALL_EXTRA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_WALL_INNER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_WALL_OUTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_WALL_SOLID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_PERM_EXTRA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_PERM_INNER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_PERM_OUTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_PERM_SOLID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_MINOR_GLYPH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_PATTERN_START");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_PATTERN_1");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_PATTERN_2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_PATTERN_3");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_PATTERN_4");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_PATTERN_END");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_PATTERN_OLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_PATTERN_XTRA1");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_PATTERN_XTRA2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_SHOP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_QUEST1");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_QUEST2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_QUEST3");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_QUEST4");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_SHAL_WATER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_DEEP_LAVA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_SHAL_LAVA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_DARK_PIT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_DIRT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_GRASS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_ICE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_SAND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_DEAD_TREE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_ASH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_MUD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_ICE_WALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_TREES");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_MOUNTAIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_SANDWALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_SANDWALL_H");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_SANDWALL_K");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_BETWEEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_ALTAR_HEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_ALTAR_TAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_MARKER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_TAINTED_WATER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_MON_TRAP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_BETWEEN2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_LAVA_WALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_GREAT_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_WAY_MORE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_WAY_LESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_EKKAIA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_DEEP_WATER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_GLASS_WALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_ILLUS_WALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_FLOWER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_SMALL_TREES");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_TOWN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FEAT_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_PRINCIPAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_MAZE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_SMALLEST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_SMALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_BIG");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_NO_DOORS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_WATER_RIVER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_LAVA_RIVER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_WATER_RIVERS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_LAVA_RIVERS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_CAVE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_CAVERN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_NO_UP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_HOT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_FORCE_DOWN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_FORGET");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_NO_DESTROY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_SAND_VEIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_CIRCULAR_ROOMS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_EMPTY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_DAMAGE_FEAT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_FLAT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_TOWER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_RANDOM_TOWNS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_DOUBLE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_LIFE_LEVEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_EVOLVE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_ADJUST_LEVEL_1");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_ADJUST_LEVEL_2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_NO_RECALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF1_NO_STREAMERS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_ADJUST_LEVEL_1_2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_NO_SHAFT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_ADJUST_LEVEL_PLAYER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_NO_TELEPORT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_ASK_LEAVE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_NO_STAIR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_SPECIAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_NO_NEW_MONSTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_DESC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_NO_GENO");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_NO_BREATH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_WATER_BREATH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_ELVEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_DWARVEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_NO_EASY_MOVE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_NO_RECALL_OUT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DF2_DESC_ALWAYS");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"level_flags1"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"level_flags2"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MAX_HGT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MAX_WID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TOWN_RANDOM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TOWN_DUNGEON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TOWN_CHANCE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERRAIN_EDGE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERRAIN_TOWN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERRAIN_DEEP_WATER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERRAIN_SHALLOW_WATER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERRAIN_SWAMP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERRAIN_DIRT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERRAIN_GRASS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERRAIN_TREES");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERRAIN_DESERT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERRAIN_SHALLOW_LAVA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERRAIN_DEEP_LAVA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERRAIN_MOUNTAIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MAX_WILD_TERRAIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"border_type");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"wilderness_type_info");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"wilderness_map");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"town_type");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"max_towns"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"town_info");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"rule_type");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"obj_theme");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"dungeon_info_type");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"max_d_idx"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"d_info");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"d_name"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"d_text"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"max_wild_x"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"max_wild_y"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"max_wf_idx"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"wf_info");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"wf_name"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"wf_text"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"DUNGEON_DEATH"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"current_dungeon_idx"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"wild_map");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"place_trap");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"place_floor");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"place_filler");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"add_scripted_generator");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"new_player_spot");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_level_desc");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_level_flags");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_dungeon_name");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_dungeon_special");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_command");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_branch");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_fbranch");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_flevel");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_dungeon_save");
+}
diff -Nru --strip-trailing-cr tome-2.5.3/src/w_mnster.c tome-2.5.3-lua.files/src/w_mnster.c
--- tome-2.5.3/src/w_mnster.c	1969-12-31 16:00:00.000000000 -0800
+++ tome-2.5.3-lua.files/src/w_mnster.c	2010-09-26 07:37:07.000000000 -0700
@@ -0,0 +1,3241 @@
+/*
+** Lua binding: monster
+** Generated automatically by tolua 4.0a - angband on Sun Sep 26 07:37:07 2010.
+*/
+
+#include "lua/tolua.h"
+
+/* Exported function */
+int tolua_monster_open (lua_State* tolua_S);
+void tolua_monster_close (lua_State* tolua_S);
+
+#include "angband.h"
+static monster_type lua_monster_forge;
+static monster_type *lua_get_monster(int m_idx){return (&m_list[m_idx]);}
+static char *lua_monster_desc(monster_type *m_ptr, int mode){static char buf[200]; monster_desc(buf, m_ptr, mode); return buf;}
+static char *lua_monster_race_desc(int r_idx, int ego){static char buf[200]; monster_race_desc(buf, r_idx, ego); return buf;}
+
+/* function to register type */
+static void toluaI_reg_types (lua_State* tolua_S)
+{
+ tolua_usertype(tolua_S,"monster_type");
+ tolua_usertype(tolua_S,"monster_blow");
+ tolua_usertype(tolua_S,"obj_theme");
+ tolua_usertype(tolua_S,"object_type");
+ tolua_usertype(tolua_S,"monster_race");
+}
+
+/* error messages */
+#define TOLUA_ERR_SELF tolua_error(tolua_S,"invalid 'self'")
+#define TOLUA_ERR_ASSIGN tolua_error(tolua_S,"#vinvalid type in variable assignment.")
+
+/* get function: lua_monster_forge */
+static int toluaI_get_monster_monster_forge(lua_State* tolua_S)
+{
+ tolua_pushusertype(tolua_S,(void*)&lua_monster_forge,tolua_tag(tolua_S,"monster_type"));
+ return 1;
+}
+
+/* set function: lua_monster_forge */
+static int toluaI_set_monster_monster_forge(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,2,tolua_tag(tolua_S,"monster_type"),0))
+ TOLUA_ERR_ASSIGN;
+  lua_monster_forge = *((monster_type*)  tolua_getusertype(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: method of class  monster_blow */
+static int toluaI_get_monster_monster_blow_method(lua_State* tolua_S)
+{
+  monster_blow* self = (monster_blow*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->method);
+ return 1;
+}
+
+/* set function: method of class  monster_blow */
+static int toluaI_set_monster_monster_blow_method(lua_State* tolua_S)
+{
+  monster_blow* self = (monster_blow*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->method = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: effect of class  monster_blow */
+static int toluaI_get_monster_monster_blow_effect(lua_State* tolua_S)
+{
+  monster_blow* self = (monster_blow*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->effect);
+ return 1;
+}
+
+/* set function: effect of class  monster_blow */
+static int toluaI_set_monster_monster_blow_effect(lua_State* tolua_S)
+{
+  monster_blow* self = (monster_blow*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->effect = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: d_dice of class  monster_blow */
+static int toluaI_get_monster_monster_blow_d_dice(lua_State* tolua_S)
+{
+  monster_blow* self = (monster_blow*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->d_dice);
+ return 1;
+}
+
+/* set function: d_dice of class  monster_blow */
+static int toluaI_set_monster_monster_blow_d_dice(lua_State* tolua_S)
+{
+  monster_blow* self = (monster_blow*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->d_dice = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: d_side of class  monster_blow */
+static int toluaI_get_monster_monster_blow_d_side(lua_State* tolua_S)
+{
+  monster_blow* self = (monster_blow*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->d_side);
+ return 1;
+}
+
+/* set function: d_side of class  monster_blow */
+static int toluaI_set_monster_monster_blow_d_side(lua_State* tolua_S)
+{
+  monster_blow* self = (monster_blow*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->d_side = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: name of class  monster_race */
+static int toluaI_get_monster_monster_race_name(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->name);
+ return 1;
+}
+
+/* set function: name of class  monster_race */
+static int toluaI_set_monster_monster_race_name(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->name = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: text of class  monster_race */
+static int toluaI_get_monster_monster_race_text(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->text);
+ return 1;
+}
+
+/* set function: text of class  monster_race */
+static int toluaI_set_monster_monster_race_text(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->text = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: hdice of class  monster_race */
+static int toluaI_get_monster_monster_race_hdice(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->hdice);
+ return 1;
+}
+
+/* set function: hdice of class  monster_race */
+static int toluaI_set_monster_monster_race_hdice(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->hdice = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: hside of class  monster_race */
+static int toluaI_get_monster_monster_race_hside(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->hside);
+ return 1;
+}
+
+/* set function: hside of class  monster_race */
+static int toluaI_set_monster_monster_race_hside(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->hside = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ac of class  monster_race */
+static int toluaI_get_monster_monster_race_ac(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ac);
+ return 1;
+}
+
+/* set function: ac of class  monster_race */
+static int toluaI_set_monster_monster_race_ac(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ac = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sleep of class  monster_race */
+static int toluaI_get_monster_monster_race_sleep(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sleep);
+ return 1;
+}
+
+/* set function: sleep of class  monster_race */
+static int toluaI_set_monster_monster_race_sleep(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sleep = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: aaf of class  monster_race */
+static int toluaI_get_monster_monster_race_aaf(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->aaf);
+ return 1;
+}
+
+/* set function: aaf of class  monster_race */
+static int toluaI_set_monster_monster_race_aaf(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->aaf = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: speed of class  monster_race */
+static int toluaI_get_monster_monster_race_speed(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->speed);
+ return 1;
+}
+
+/* set function: speed of class  monster_race */
+static int toluaI_set_monster_monster_race_speed(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->speed = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mexp of class  monster_race */
+static int toluaI_get_monster_monster_race_mexp(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mexp);
+ return 1;
+}
+
+/* set function: mexp of class  monster_race */
+static int toluaI_set_monster_monster_race_mexp(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mexp = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: weight of class  monster_race */
+static int toluaI_get_monster_monster_race_weight(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->weight);
+ return 1;
+}
+
+/* set function: weight of class  monster_race */
+static int toluaI_set_monster_monster_race_weight(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->weight = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: freq_inate of class  monster_race */
+static int toluaI_get_monster_monster_race_freq_inate(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->freq_inate);
+ return 1;
+}
+
+/* set function: freq_inate of class  monster_race */
+static int toluaI_set_monster_monster_race_freq_inate(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->freq_inate = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: freq_spell of class  monster_race */
+static int toluaI_get_monster_monster_race_freq_spell(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->freq_spell);
+ return 1;
+}
+
+/* set function: freq_spell of class  monster_race */
+static int toluaI_set_monster_monster_race_freq_spell(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->freq_spell = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags1 of class  monster_race */
+static int toluaI_get_monster_monster_race_flags1(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags1);
+ return 1;
+}
+
+/* set function: flags1 of class  monster_race */
+static int toluaI_set_monster_monster_race_flags1(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags1 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags2 of class  monster_race */
+static int toluaI_get_monster_monster_race_flags2(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags2);
+ return 1;
+}
+
+/* set function: flags2 of class  monster_race */
+static int toluaI_set_monster_monster_race_flags2(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags2 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags3 of class  monster_race */
+static int toluaI_get_monster_monster_race_flags3(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags3);
+ return 1;
+}
+
+/* set function: flags3 of class  monster_race */
+static int toluaI_set_monster_monster_race_flags3(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags3 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags4 of class  monster_race */
+static int toluaI_get_monster_monster_race_flags4(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags4);
+ return 1;
+}
+
+/* set function: flags4 of class  monster_race */
+static int toluaI_set_monster_monster_race_flags4(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags4 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags5 of class  monster_race */
+static int toluaI_get_monster_monster_race_flags5(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags5);
+ return 1;
+}
+
+/* set function: flags5 of class  monster_race */
+static int toluaI_set_monster_monster_race_flags5(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags5 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags6 of class  monster_race */
+static int toluaI_get_monster_monster_race_flags6(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags6);
+ return 1;
+}
+
+/* set function: flags6 of class  monster_race */
+static int toluaI_set_monster_monster_race_flags6(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags6 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags7 of class  monster_race */
+static int toluaI_get_monster_monster_race_flags7(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags7);
+ return 1;
+}
+
+/* set function: flags7 of class  monster_race */
+static int toluaI_set_monster_monster_race_flags7(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags7 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags8 of class  monster_race */
+static int toluaI_get_monster_monster_race_flags8(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags8);
+ return 1;
+}
+
+/* set function: flags8 of class  monster_race */
+static int toluaI_set_monster_monster_race_flags8(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags8 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags9 of class  monster_race */
+static int toluaI_get_monster_monster_race_flags9(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags9);
+ return 1;
+}
+
+/* set function: flags9 of class  monster_race */
+static int toluaI_set_monster_monster_race_flags9(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags9 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: blow of class  monster_race */
+static int toluaI_get_monster_monster_race_blow(lua_State* tolua_S)
+{
+ int toluaI_index;
+  monster_race* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (monster_race*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&self->blow[toluaI_index],tolua_tag(tolua_S,"monster_blow"));
+ return 1;
+}
+
+/* set function: blow of class  monster_race */
+static int toluaI_set_monster_monster_race_blow(lua_State* tolua_S)
+{
+ int toluaI_index;
+  monster_race* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (monster_race*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->blow[toluaI_index] = *((monster_blow*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: body_parts of class  monster_race */
+static int toluaI_get_monster_monster_race_body_parts(lua_State* tolua_S)
+{
+ int toluaI_index;
+  monster_race* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (monster_race*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=BODY_MAX)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->body_parts[toluaI_index]);
+ return 1;
+}
+
+/* set function: body_parts of class  monster_race */
+static int toluaI_set_monster_monster_race_body_parts(lua_State* tolua_S)
+{
+ int toluaI_index;
+  monster_race* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (monster_race*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=BODY_MAX)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->body_parts[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: level of class  monster_race */
+static int toluaI_get_monster_monster_race_level(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->level);
+ return 1;
+}
+
+/* set function: level of class  monster_race */
+static int toluaI_set_monster_monster_race_level(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->level = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: rarity of class  monster_race */
+static int toluaI_get_monster_monster_race_rarity(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->rarity);
+ return 1;
+}
+
+/* set function: rarity of class  monster_race */
+static int toluaI_set_monster_monster_race_rarity(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->rarity = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: d_attr of class  monster_race */
+static int toluaI_get_monster_monster_race_d_attr(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->d_attr);
+ return 1;
+}
+
+/* set function: d_attr of class  monster_race */
+static int toluaI_set_monster_monster_race_d_attr(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->d_attr = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: d_char of class  monster_race */
+static int toluaI_get_monster_monster_race_d_char(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->d_char);
+ return 1;
+}
+
+/* set function: d_char of class  monster_race */
+static int toluaI_set_monster_monster_race_d_char(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->d_char = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: x_attr of class  monster_race */
+static int toluaI_get_monster_monster_race_x_attr(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->x_attr);
+ return 1;
+}
+
+/* set function: x_attr of class  monster_race */
+static int toluaI_set_monster_monster_race_x_attr(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->x_attr = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: x_char of class  monster_race */
+static int toluaI_get_monster_monster_race_x_char(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->x_char);
+ return 1;
+}
+
+/* set function: x_char of class  monster_race */
+static int toluaI_set_monster_monster_race_x_char(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->x_char = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: max_num of class  monster_race */
+static int toluaI_get_monster_monster_race_max_num(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->max_num);
+ return 1;
+}
+
+/* set function: max_num of class  monster_race */
+static int toluaI_set_monster_monster_race_max_num(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->max_num = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: cur_num of class  monster_race */
+static int toluaI_get_monster_monster_race_cur_num(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->cur_num);
+ return 1;
+}
+
+/* set function: cur_num of class  monster_race */
+static int toluaI_set_monster_monster_race_cur_num(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->cur_num = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_sights of class  monster_race */
+static int toluaI_get_monster_monster_race_r_sights(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_sights);
+ return 1;
+}
+
+/* set function: r_sights of class  monster_race */
+static int toluaI_set_monster_monster_race_r_sights(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_sights = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_deaths of class  monster_race */
+static int toluaI_get_monster_monster_race_r_deaths(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_deaths);
+ return 1;
+}
+
+/* set function: r_deaths of class  monster_race */
+static int toluaI_set_monster_monster_race_r_deaths(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_deaths = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_pkills of class  monster_race */
+static int toluaI_get_monster_monster_race_r_pkills(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_pkills);
+ return 1;
+}
+
+/* set function: r_pkills of class  monster_race */
+static int toluaI_set_monster_monster_race_r_pkills(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_pkills = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_tkills of class  monster_race */
+static int toluaI_get_monster_monster_race_r_tkills(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_tkills);
+ return 1;
+}
+
+/* set function: r_tkills of class  monster_race */
+static int toluaI_set_monster_monster_race_r_tkills(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_tkills = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_wake of class  monster_race */
+static int toluaI_get_monster_monster_race_r_wake(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_wake);
+ return 1;
+}
+
+/* set function: r_wake of class  monster_race */
+static int toluaI_set_monster_monster_race_r_wake(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_wake = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_ignore of class  monster_race */
+static int toluaI_get_monster_monster_race_r_ignore(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_ignore);
+ return 1;
+}
+
+/* set function: r_ignore of class  monster_race */
+static int toluaI_set_monster_monster_race_r_ignore(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_ignore = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_xtra1 of class  monster_race */
+static int toluaI_get_monster_monster_race_r_xtra1(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_xtra1);
+ return 1;
+}
+
+/* set function: r_xtra1 of class  monster_race */
+static int toluaI_set_monster_monster_race_r_xtra1(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_xtra1 = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_xtra2 of class  monster_race */
+static int toluaI_get_monster_monster_race_r_xtra2(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_xtra2);
+ return 1;
+}
+
+/* set function: r_xtra2 of class  monster_race */
+static int toluaI_set_monster_monster_race_r_xtra2(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_xtra2 = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_drop_gold of class  monster_race */
+static int toluaI_get_monster_monster_race_r_drop_gold(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_drop_gold);
+ return 1;
+}
+
+/* set function: r_drop_gold of class  monster_race */
+static int toluaI_set_monster_monster_race_r_drop_gold(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_drop_gold = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_drop_item of class  monster_race */
+static int toluaI_get_monster_monster_race_r_drop_item(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_drop_item);
+ return 1;
+}
+
+/* set function: r_drop_item of class  monster_race */
+static int toluaI_set_monster_monster_race_r_drop_item(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_drop_item = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_cast_inate of class  monster_race */
+static int toluaI_get_monster_monster_race_r_cast_inate(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_cast_inate);
+ return 1;
+}
+
+/* set function: r_cast_inate of class  monster_race */
+static int toluaI_set_monster_monster_race_r_cast_inate(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_cast_inate = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_cast_spell of class  monster_race */
+static int toluaI_get_monster_monster_race_r_cast_spell(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_cast_spell);
+ return 1;
+}
+
+/* set function: r_cast_spell of class  monster_race */
+static int toluaI_set_monster_monster_race_r_cast_spell(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_cast_spell = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_blows of class  monster_race */
+static int toluaI_get_monster_monster_race_r_blows(lua_State* tolua_S)
+{
+ int toluaI_index;
+  monster_race* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (monster_race*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->r_blows[toluaI_index]);
+ return 1;
+}
+
+/* set function: r_blows of class  monster_race */
+static int toluaI_set_monster_monster_race_r_blows(lua_State* tolua_S)
+{
+ int toluaI_index;
+  monster_race* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (monster_race*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->r_blows[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: r_flags1 of class  monster_race */
+static int toluaI_get_monster_monster_race_r_flags1(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_flags1);
+ return 1;
+}
+
+/* set function: r_flags1 of class  monster_race */
+static int toluaI_set_monster_monster_race_r_flags1(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_flags1 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_flags2 of class  monster_race */
+static int toluaI_get_monster_monster_race_r_flags2(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_flags2);
+ return 1;
+}
+
+/* set function: r_flags2 of class  monster_race */
+static int toluaI_set_monster_monster_race_r_flags2(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_flags2 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_flags3 of class  monster_race */
+static int toluaI_get_monster_monster_race_r_flags3(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_flags3);
+ return 1;
+}
+
+/* set function: r_flags3 of class  monster_race */
+static int toluaI_set_monster_monster_race_r_flags3(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_flags3 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_flags4 of class  monster_race */
+static int toluaI_get_monster_monster_race_r_flags4(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_flags4);
+ return 1;
+}
+
+/* set function: r_flags4 of class  monster_race */
+static int toluaI_set_monster_monster_race_r_flags4(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_flags4 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_flags5 of class  monster_race */
+static int toluaI_get_monster_monster_race_r_flags5(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_flags5);
+ return 1;
+}
+
+/* set function: r_flags5 of class  monster_race */
+static int toluaI_set_monster_monster_race_r_flags5(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_flags5 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_flags6 of class  monster_race */
+static int toluaI_get_monster_monster_race_r_flags6(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_flags6);
+ return 1;
+}
+
+/* set function: r_flags6 of class  monster_race */
+static int toluaI_set_monster_monster_race_r_flags6(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_flags6 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_flags7 of class  monster_race */
+static int toluaI_get_monster_monster_race_r_flags7(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_flags7);
+ return 1;
+}
+
+/* set function: r_flags7 of class  monster_race */
+static int toluaI_set_monster_monster_race_r_flags7(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_flags7 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_flags8 of class  monster_race */
+static int toluaI_get_monster_monster_race_r_flags8(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_flags8);
+ return 1;
+}
+
+/* set function: r_flags8 of class  monster_race */
+static int toluaI_set_monster_monster_race_r_flags8(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_flags8 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_flags9 of class  monster_race */
+static int toluaI_get_monster_monster_race_r_flags9(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_flags9);
+ return 1;
+}
+
+/* set function: r_flags9 of class  monster_race */
+static int toluaI_set_monster_monster_race_r_flags9(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_flags9 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: on_saved of class  monster_race */
+static int toluaI_get_monster_monster_race_on_saved(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->on_saved);
+ return 1;
+}
+
+/* set function: on_saved of class  monster_race */
+static int toluaI_set_monster_monster_race_on_saved(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->on_saved = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: total_visible of class  monster_race */
+static int toluaI_get_monster_monster_race_total_visible(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->total_visible);
+ return 1;
+}
+
+/* set function: total_visible of class  monster_race */
+static int toluaI_set_monster_monster_race_total_visible(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->total_visible = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: drops of class  monster_race */
+static int toluaI_get_monster_monster_race_drops(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushusertype(tolua_S,(void*)&self->drops,tolua_tag(tolua_S,"obj_theme"));
+ return 1;
+}
+
+/* set function: drops of class  monster_race */
+static int toluaI_set_monster_monster_race_drops(lua_State* tolua_S)
+{
+  monster_race* self = (monster_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,tolua_tag(tolua_S,"obj_theme"),0))
+ TOLUA_ERR_ASSIGN;
+  self->drops = *((obj_theme*)  tolua_getusertype(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_idx of class  monster_type */
+static int toluaI_get_monster_monster_type_r_idx(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_idx);
+ return 1;
+}
+
+/* set function: r_idx of class  monster_type */
+static int toluaI_set_monster_monster_type_r_idx(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_idx = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ego of class  monster_type */
+static int toluaI_get_monster_monster_type_ego(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ego);
+ return 1;
+}
+
+/* set function: ego of class  monster_type */
+static int toluaI_set_monster_monster_type_ego(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ego = ((u16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: fy of class  monster_type */
+static int toluaI_get_monster_monster_type_fy(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->fy);
+ return 1;
+}
+
+/* set function: fy of class  monster_type */
+static int toluaI_set_monster_monster_type_fy(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->fy = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: fx of class  monster_type */
+static int toluaI_get_monster_monster_type_fx(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->fx);
+ return 1;
+}
+
+/* set function: fx of class  monster_type */
+static int toluaI_set_monster_monster_type_fx(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->fx = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: hp of class  monster_type */
+static int toluaI_get_monster_monster_type_hp(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->hp);
+ return 1;
+}
+
+/* set function: hp of class  monster_type */
+static int toluaI_set_monster_monster_type_hp(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->hp = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: maxhp of class  monster_type */
+static int toluaI_get_monster_monster_type_maxhp(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->maxhp);
+ return 1;
+}
+
+/* set function: maxhp of class  monster_type */
+static int toluaI_set_monster_monster_type_maxhp(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->maxhp = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: blow of class  monster_type */
+static int toluaI_get_monster_monster_type_blow(lua_State* tolua_S)
+{
+ int toluaI_index;
+  monster_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (monster_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&self->blow[toluaI_index],tolua_tag(tolua_S,"monster_blow"));
+ return 1;
+}
+
+/* set function: blow of class  monster_type */
+static int toluaI_set_monster_monster_type_blow(lua_State* tolua_S)
+{
+ int toluaI_index;
+  monster_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (monster_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->blow[toluaI_index] = *((monster_blow*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: speed of class  monster_type */
+static int toluaI_get_monster_monster_type_speed(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->speed);
+ return 1;
+}
+
+/* set function: speed of class  monster_type */
+static int toluaI_set_monster_monster_type_speed(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->speed = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: level of class  monster_type */
+static int toluaI_get_monster_monster_type_level(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->level);
+ return 1;
+}
+
+/* set function: level of class  monster_type */
+static int toluaI_set_monster_monster_type_level(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->level = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ac of class  monster_type */
+static int toluaI_get_monster_monster_type_ac(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ac);
+ return 1;
+}
+
+/* set function: ac of class  monster_type */
+static int toluaI_set_monster_monster_type_ac(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ac = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: exp of class  monster_type */
+static int toluaI_get_monster_monster_type_exp(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->exp);
+ return 1;
+}
+
+/* set function: exp of class  monster_type */
+static int toluaI_set_monster_monster_type_exp(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->exp = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: csleep of class  monster_type */
+static int toluaI_get_monster_monster_type_csleep(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->csleep);
+ return 1;
+}
+
+/* set function: csleep of class  monster_type */
+static int toluaI_set_monster_monster_type_csleep(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->csleep = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mspeed of class  monster_type */
+static int toluaI_get_monster_monster_type_mspeed(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mspeed);
+ return 1;
+}
+
+/* set function: mspeed of class  monster_type */
+static int toluaI_set_monster_monster_type_mspeed(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mspeed = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: energy of class  monster_type */
+static int toluaI_get_monster_monster_type_energy(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->energy);
+ return 1;
+}
+
+/* set function: energy of class  monster_type */
+static int toluaI_set_monster_monster_type_energy(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->energy = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: stunned of class  monster_type */
+static int toluaI_get_monster_monster_type_stunned(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->stunned);
+ return 1;
+}
+
+/* set function: stunned of class  monster_type */
+static int toluaI_set_monster_monster_type_stunned(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->stunned = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: confused of class  monster_type */
+static int toluaI_get_monster_monster_type_confused(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->confused);
+ return 1;
+}
+
+/* set function: confused of class  monster_type */
+static int toluaI_set_monster_monster_type_confused(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->confused = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: monfear of class  monster_type */
+static int toluaI_get_monster_monster_type_monfear(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->monfear);
+ return 1;
+}
+
+/* set function: monfear of class  monster_type */
+static int toluaI_set_monster_monster_type_monfear(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->monfear = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: bleeding of class  monster_type */
+static int toluaI_get_monster_monster_type_bleeding(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->bleeding);
+ return 1;
+}
+
+/* set function: bleeding of class  monster_type */
+static int toluaI_set_monster_monster_type_bleeding(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->bleeding = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: poisoned of class  monster_type */
+static int toluaI_get_monster_monster_type_poisoned(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->poisoned);
+ return 1;
+}
+
+/* set function: poisoned of class  monster_type */
+static int toluaI_set_monster_monster_type_poisoned(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->poisoned = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: cdis of class  monster_type */
+static int toluaI_get_monster_monster_type_cdis(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->cdis);
+ return 1;
+}
+
+/* set function: cdis of class  monster_type */
+static int toluaI_set_monster_monster_type_cdis(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->cdis = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mflag of class  monster_type */
+static int toluaI_get_monster_monster_type_mflag(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mflag);
+ return 1;
+}
+
+/* set function: mflag of class  monster_type */
+static int toluaI_set_monster_monster_type_mflag(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mflag = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ml of class  monster_type */
+static int toluaI_get_monster_monster_type_ml(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ml);
+ return 1;
+}
+
+/* set function: ml of class  monster_type */
+static int toluaI_set_monster_monster_type_ml(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ml = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: hold_o_idx of class  monster_type */
+static int toluaI_get_monster_monster_type_hold_o_idx(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->hold_o_idx);
+ return 1;
+}
+
+/* set function: hold_o_idx of class  monster_type */
+static int toluaI_set_monster_monster_type_hold_o_idx(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->hold_o_idx = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: smart of class  monster_type */
+static int toluaI_get_monster_monster_type_smart(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->smart);
+ return 1;
+}
+
+/* set function: smart of class  monster_type */
+static int toluaI_set_monster_monster_type_smart(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->smart = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: status of class  monster_type */
+static int toluaI_get_monster_monster_type_status(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->status);
+ return 1;
+}
+
+/* set function: status of class  monster_type */
+static int toluaI_set_monster_monster_type_status(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->status = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: target of class  monster_type */
+static int toluaI_get_monster_monster_type_target(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->target);
+ return 1;
+}
+
+/* set function: target of class  monster_type */
+static int toluaI_set_monster_monster_type_target(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->target = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: possessor of class  monster_type */
+static int toluaI_get_monster_monster_type_possessor(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->possessor);
+ return 1;
+}
+
+/* set function: possessor of class  monster_type */
+static int toluaI_set_monster_monster_type_possessor(lua_State* tolua_S)
+{
+  monster_type* self = (monster_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->possessor = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* function: lua_get_monster */
+static int toluaI_monster_monster00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int m_idx = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  monster_type* toluaI_ret = (monster_type*)  lua_get_monster(m_idx);
+ tolua_pushusertype(tolua_S,(void*)toluaI_ret,tolua_tag(tolua_S,"monster_type"));
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'monster'.");
+ return 0;
+}
+
+/* get function: m_list */
+static int toluaI_get_monster_m_list(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_m_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&m_list[toluaI_index],tolua_tag(tolua_S,"monster_type"));
+ return 1;
+}
+
+/* set function: m_list */
+static int toluaI_set_monster_m_list(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_m_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  m_list[toluaI_index] = *((monster_type*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* function: race_info_idx */
+static int toluaI_monster_race_info_idx00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int r_idx = ((int)  tolua_getnumber(tolua_S,1,0));
+  int ego = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  monster_race* toluaI_ret = (monster_race*)  race_info_idx(r_idx,ego);
+ tolua_pushusertype(tolua_S,(void*)toluaI_ret,tolua_tag(tolua_S,"monster_race"));
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'race_info_idx'.");
+ return 0;
+}
+
+/* function: delete_monster_idx */
+static int toluaI_monster_delete_monster_idx00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int i = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  delete_monster_idx(i);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'delete_monster_idx'.");
+ return 0;
+}
+
+/* function: m_pop */
+static int toluaI_monster_m_pop00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  s16b toluaI_ret = (s16b)  m_pop();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'm_pop'.");
+ return 0;
+}
+
+/* function: get_mon_num_prep */
+static int toluaI_monster_get_mon_num_prep00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  errr toluaI_ret = (errr)  get_mon_num_prep();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_mon_num_prep'.");
+ return 0;
+}
+
+/* function: get_mon_num */
+static int toluaI_monster_get_mon_num00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int level = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  s16b toluaI_ret = (s16b)  get_mon_num(level);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_mon_num'.");
+ return 0;
+}
+
+/* function: lua_monster_desc */
+static int toluaI_monster_monster_desc00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"monster_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  monster_type* m_ptr = ((monster_type*)  tolua_getusertype(tolua_S,1,0));
+  int mode = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  char* toluaI_ret = (char*)  lua_monster_desc(m_ptr,mode);
+ tolua_pushstring(tolua_S,(const char*)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'monster_desc'.");
+ return 0;
+}
+
+/* function: lua_monster_race_desc */
+static int toluaI_monster_monster_race_desc00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int r_idx = ((int)  tolua_getnumber(tolua_S,1,0));
+  int ego = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  char* toluaI_ret = (char*)  lua_monster_race_desc(r_idx,ego);
+ tolua_pushstring(tolua_S,(const char*)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'monster_race_desc'.");
+ return 0;
+}
+
+/* function: monster_race_desc */
+static int toluaI_monster_monster_race_desc01(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  char* desc = ((char*)  tolua_getstring(tolua_S,1,0));
+  int r_idx = ((int)  tolua_getnumber(tolua_S,2,0));
+  int ego = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  monster_race_desc(desc,r_idx,ego);
+ }
+ }
+ return 0;
+tolua_lerror:
+ return toluaI_monster_monster_race_desc00(tolua_S);
+}
+
+/* function: monster_carry */
+static int toluaI_monster_monster_carry00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"monster_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  monster_type* m_ptr = ((monster_type*)  tolua_getusertype(tolua_S,1,0));
+  int m_idx = ((int)  tolua_getnumber(tolua_S,2,0));
+  object_type* q_ptr = ((object_type*)  tolua_getusertype(tolua_S,3,0));
+ {
+  monster_carry(m_ptr,m_idx,q_ptr);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'monster_carry'.");
+ return 0;
+}
+
+/* function: place_monster_aux */
+static int toluaI_monster_place_monster_aux00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,6,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,7)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+  int r_idx = ((int)  tolua_getnumber(tolua_S,3,0));
+  bool slp = ((bool)  tolua_getnumber(tolua_S,4,0));
+  bool grp = ((bool)  tolua_getnumber(tolua_S,5,0));
+  int status = ((int)  tolua_getnumber(tolua_S,6,0));
+ {
+  bool toluaI_ret = (bool)  place_monster_aux(y,x,r_idx,slp,grp,status);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'place_monster_aux'.");
+ return 0;
+}
+
+/* function: place_monster */
+static int toluaI_monster_place_monster00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+  bool slp = ((bool)  tolua_getnumber(tolua_S,3,0));
+  bool grp = ((bool)  tolua_getnumber(tolua_S,4,0));
+ {
+  bool toluaI_ret = (bool)  place_monster(y,x,slp,grp);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'place_monster'.");
+ return 0;
+}
+
+/* function: place_monster_one */
+static int toluaI_monster_place_monster_one00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,6,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,7)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+  int r_idx = ((int)  tolua_getnumber(tolua_S,3,0));
+  int ego = ((int)  tolua_getnumber(tolua_S,4,0));
+  bool slp = ((bool)  tolua_getnumber(tolua_S,5,0));
+  int status = ((int)  tolua_getnumber(tolua_S,6,0));
+ {
+  s16b toluaI_ret = (s16b)  place_monster_one(y,x,r_idx,ego,slp,status);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'place_monster_one'.");
+ return 0;
+}
+
+/* function: is_friend */
+static int toluaI_monster_is_friend00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"monster_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  monster_type* m_ptr = ((monster_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  int toluaI_ret = (int)  is_friend(m_ptr);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'is_friend'.");
+ return 0;
+}
+
+/* function: is_enemy */
+static int toluaI_monster_is_enemy00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"monster_type"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"monster_type"),0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  monster_type* m_ptr = ((monster_type*)  tolua_getusertype(tolua_S,1,0));
+  monster_type* t_ptr = ((monster_type*)  tolua_getusertype(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  is_enemy(m_ptr,t_ptr);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'is_enemy'.");
+ return 0;
+}
+
+/* function: change_side */
+static int toluaI_monster_change_side00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"monster_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  monster_type* m_ptr = ((monster_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  change_side(m_ptr);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'change_side'.");
+ return 0;
+}
+
+/* function: find_position */
+static int toluaI_monster_find_position00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,1) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+  int yy = ((int)  tolua_getnumber(tolua_S,3,0));
+  int xx = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  find_position(y,x,&yy,&xx);
+ tolua_pushnumber(tolua_S,(long)yy);
+ tolua_pushnumber(tolua_S,(long)xx);
+ }
+ }
+ return 2;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'find_position'.");
+ return 0;
+}
+
+/* get function: summon_specific_level */
+static int toluaI_get_monster_summon_specific_level(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)summon_specific_level);
+ return 1;
+}
+
+/* set function: summon_specific_level */
+static int toluaI_set_monster_summon_specific_level(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  summon_specific_level = ((int)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: summon_kin_type */
+static int toluaI_get_monster_summon_kin_type(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)summon_kin_type);
+ return 1;
+}
+
+/* set function: summon_kin_type */
+static int toluaI_set_monster_summon_kin_type(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  summon_kin_type = ((char)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* function: summon_specific */
+static int toluaI_monster_summon_specific00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y1 = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x1 = ((int)  tolua_getnumber(tolua_S,2,0));
+  int lev = ((int)  tolua_getnumber(tolua_S,3,0));
+  int type = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  bool toluaI_ret = (bool)  summon_specific(y1,x1,lev,type);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'summon_specific'.");
+ return 0;
+}
+
+/* function: summon_specific_friendly */
+static int toluaI_monster_summon_specific_friendly00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,6)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y1 = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x1 = ((int)  tolua_getnumber(tolua_S,2,0));
+  int lev = ((int)  tolua_getnumber(tolua_S,3,0));
+  int type = ((int)  tolua_getnumber(tolua_S,4,0));
+  bool Group_ok = ((bool)  tolua_getnumber(tolua_S,5,0));
+ {
+  bool toluaI_ret = (bool)  summon_specific_friendly(y1,x1,lev,type,Group_ok);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'summon_specific_friendly'.");
+ return 0;
+}
+
+/* function: lua_summon_monster */
+static int toluaI_monster_summon_monster_aux00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,6)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+  int lev = ((int)  tolua_getnumber(tolua_S,3,0));
+  bool friend = ((bool)  tolua_getnumber(tolua_S,4,0));
+  char* fct = ((char*)  tolua_getstring(tolua_S,5,0));
+ {
+  bool toluaI_ret = (bool)  lua_summon_monster(y,x,lev,friend,fct);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'summon_monster_aux'.");
+ return 0;
+}
+
+/* function: can_create_companion */
+static int toluaI_monster_can_create_companion00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  can_create_companion();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'can_create_companion'.");
+ return 0;
+}
+
+/* function: monster_set_level */
+static int toluaI_monster_monster_set_level00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int m_idx = ((int)  tolua_getnumber(tolua_S,1,0));
+  int level = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  monster_set_level(m_idx,level);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'monster_set_level'.");
+ return 0;
+}
+
+/* function: do_control_reconnect */
+static int toluaI_monster_do_control_reconnect00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  do_control_reconnect();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'do_control_reconnect'.");
+ return 0;
+}
+
+/* get function: m_max */
+static int toluaI_get_monster_m_max(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)m_max);
+ return 1;
+}
+
+/* set function: m_max */
+static int toluaI_set_monster_m_max(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  m_max = ((s16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* Open function */
+int tolua_monster_open (lua_State* tolua_S)
+{
+ tolua_open(tolua_S);
+ toluaI_reg_types(tolua_S);
+ tolua_globalvar(tolua_S,"monster_forge",toluaI_get_monster_monster_forge,toluaI_set_monster_monster_forge);
+ tolua_constant(tolua_S,NULL,"MSTATUS_ENEMY",MSTATUS_ENEMY);
+ tolua_constant(tolua_S,NULL,"MSTATUS_NEUTRAL_M",MSTATUS_NEUTRAL_M);
+ tolua_constant(tolua_S,NULL,"MSTATUS_NEUTRAL",MSTATUS_NEUTRAL);
+ tolua_constant(tolua_S,NULL,"MSTATUS_NEUTRAL_P",MSTATUS_NEUTRAL_P);
+ tolua_constant(tolua_S,NULL,"MSTATUS_FRIEND",MSTATUS_FRIEND);
+ tolua_constant(tolua_S,NULL,"MSTATUS_PET",MSTATUS_PET);
+ tolua_constant(tolua_S,NULL,"MSTATUS_COMPANION",MSTATUS_COMPANION);
+ tolua_constant(tolua_S,NULL,"RF1_UNIQUE",RF1_UNIQUE);
+ tolua_constant(tolua_S,NULL,"RF1_QUESTOR",RF1_QUESTOR);
+ tolua_constant(tolua_S,NULL,"RF1_MALE",RF1_MALE);
+ tolua_constant(tolua_S,NULL,"RF1_FEMALE",RF1_FEMALE);
+ tolua_constant(tolua_S,NULL,"RF1_CHAR_CLEAR",RF1_CHAR_CLEAR);
+ tolua_constant(tolua_S,NULL,"RF1_CHAR_MULTI",RF1_CHAR_MULTI);
+ tolua_constant(tolua_S,NULL,"RF1_ATTR_CLEAR",RF1_ATTR_CLEAR);
+ tolua_constant(tolua_S,NULL,"RF1_ATTR_MULTI",RF1_ATTR_MULTI);
+ tolua_constant(tolua_S,NULL,"RF1_FORCE_DEPTH",RF1_FORCE_DEPTH);
+ tolua_constant(tolua_S,NULL,"RF1_FORCE_MAXHP",RF1_FORCE_MAXHP);
+ tolua_constant(tolua_S,NULL,"RF1_FORCE_SLEEP",RF1_FORCE_SLEEP);
+ tolua_constant(tolua_S,NULL,"RF1_FORCE_EXTRA",RF1_FORCE_EXTRA);
+ tolua_constant(tolua_S,NULL,"RF1_FRIEND",RF1_FRIEND);
+ tolua_constant(tolua_S,NULL,"RF1_FRIENDS",RF1_FRIENDS);
+ tolua_constant(tolua_S,NULL,"RF1_ESCORT",RF1_ESCORT);
+ tolua_constant(tolua_S,NULL,"RF1_ESCORTS",RF1_ESCORTS);
+ tolua_constant(tolua_S,NULL,"RF1_NEVER_BLOW",RF1_NEVER_BLOW);
+ tolua_constant(tolua_S,NULL,"RF1_NEVER_MOVE",RF1_NEVER_MOVE);
+ tolua_constant(tolua_S,NULL,"RF1_RAND_25",RF1_RAND_25);
+ tolua_constant(tolua_S,NULL,"RF1_RAND_50",RF1_RAND_50);
+ tolua_constant(tolua_S,NULL,"RF1_ONLY_GOLD",RF1_ONLY_GOLD);
+ tolua_constant(tolua_S,NULL,"RF1_ONLY_ITEM",RF1_ONLY_ITEM);
+ tolua_constant(tolua_S,NULL,"RF1_DROP_60",RF1_DROP_60);
+ tolua_constant(tolua_S,NULL,"RF1_DROP_90",RF1_DROP_90);
+ tolua_constant(tolua_S,NULL,"RF1_DROP_1D2",RF1_DROP_1D2);
+ tolua_constant(tolua_S,NULL,"RF1_DROP_2D2",RF1_DROP_2D2);
+ tolua_constant(tolua_S,NULL,"RF1_DROP_3D2",RF1_DROP_3D2);
+ tolua_constant(tolua_S,NULL,"RF1_DROP_4D2",RF1_DROP_4D2);
+ tolua_constant(tolua_S,NULL,"RF1_DROP_GOOD",RF1_DROP_GOOD);
+ tolua_constant(tolua_S,NULL,"RF1_DROP_GREAT",RF1_DROP_GREAT);
+ tolua_constant(tolua_S,NULL,"RF1_DROP_USEFUL",RF1_DROP_USEFUL);
+ tolua_constant(tolua_S,NULL,"RF1_DROP_CHOSEN",RF1_DROP_CHOSEN);
+ tolua_constant(tolua_S,NULL,"RF2_STUPID",RF2_STUPID);
+ tolua_constant(tolua_S,NULL,"RF2_SMART",RF2_SMART);
+ tolua_constant(tolua_S,NULL,"RF2_CAN_SPEAK",RF2_CAN_SPEAK);
+ tolua_constant(tolua_S,NULL,"RF2_REFLECTING",RF2_REFLECTING);
+ tolua_constant(tolua_S,NULL,"RF2_INVISIBLE",RF2_INVISIBLE);
+ tolua_constant(tolua_S,NULL,"RF2_COLD_BLOOD",RF2_COLD_BLOOD);
+ tolua_constant(tolua_S,NULL,"RF2_EMPTY_MIND",RF2_EMPTY_MIND);
+ tolua_constant(tolua_S,NULL,"RF2_WEIRD_MIND",RF2_WEIRD_MIND);
+ tolua_constant(tolua_S,NULL,"RF2_DEATH_ORB",RF2_DEATH_ORB);
+ tolua_constant(tolua_S,NULL,"RF2_REGENERATE",RF2_REGENERATE);
+ tolua_constant(tolua_S,NULL,"RF2_SHAPECHANGER",RF2_SHAPECHANGER);
+ tolua_constant(tolua_S,NULL,"RF2_ATTR_ANY",RF2_ATTR_ANY);
+ tolua_constant(tolua_S,NULL,"RF2_POWERFUL",RF2_POWERFUL);
+ tolua_constant(tolua_S,NULL,"RF2_ELDRITCH_HORROR",RF2_ELDRITCH_HORROR);
+ tolua_constant(tolua_S,NULL,"RF2_AURA_FIRE",RF2_AURA_FIRE);
+ tolua_constant(tolua_S,NULL,"RF2_AURA_ELEC",RF2_AURA_ELEC);
+ tolua_constant(tolua_S,NULL,"RF2_OPEN_DOOR",RF2_OPEN_DOOR);
+ tolua_constant(tolua_S,NULL,"RF2_BASH_DOOR",RF2_BASH_DOOR);
+ tolua_constant(tolua_S,NULL,"RF2_PASS_WALL",RF2_PASS_WALL);
+ tolua_constant(tolua_S,NULL,"RF2_KILL_WALL",RF2_KILL_WALL);
+ tolua_constant(tolua_S,NULL,"RF2_MOVE_BODY",RF2_MOVE_BODY);
+ tolua_constant(tolua_S,NULL,"RF2_KILL_BODY",RF2_KILL_BODY);
+ tolua_constant(tolua_S,NULL,"RF2_TAKE_ITEM",RF2_TAKE_ITEM);
+ tolua_constant(tolua_S,NULL,"RF2_KILL_ITEM",RF2_KILL_ITEM);
+ tolua_constant(tolua_S,NULL,"RF2_BRAIN_1",RF2_BRAIN_1);
+ tolua_constant(tolua_S,NULL,"RF2_BRAIN_2",RF2_BRAIN_2);
+ tolua_constant(tolua_S,NULL,"RF2_BRAIN_3",RF2_BRAIN_3);
+ tolua_constant(tolua_S,NULL,"RF2_BRAIN_4",RF2_BRAIN_4);
+ tolua_constant(tolua_S,NULL,"RF2_BRAIN_5",RF2_BRAIN_5);
+ tolua_constant(tolua_S,NULL,"RF2_BRAIN_6",RF2_BRAIN_6);
+ tolua_constant(tolua_S,NULL,"RF2_BRAIN_7",RF2_BRAIN_7);
+ tolua_constant(tolua_S,NULL,"RF2_BRAIN_8",RF2_BRAIN_8);
+ tolua_constant(tolua_S,NULL,"RF3_ORC",RF3_ORC);
+ tolua_constant(tolua_S,NULL,"RF3_TROLL",RF3_TROLL);
+ tolua_constant(tolua_S,NULL,"RF3_GIANT",RF3_GIANT);
+ tolua_constant(tolua_S,NULL,"RF3_DRAGON",RF3_DRAGON);
+ tolua_constant(tolua_S,NULL,"RF3_DEMON",RF3_DEMON);
+ tolua_constant(tolua_S,NULL,"RF3_UNDEAD",RF3_UNDEAD);
+ tolua_constant(tolua_S,NULL,"RF3_EVIL",RF3_EVIL);
+ tolua_constant(tolua_S,NULL,"RF3_ANIMAL",RF3_ANIMAL);
+ tolua_constant(tolua_S,NULL,"RF3_THUNDERLORD",RF3_THUNDERLORD);
+ tolua_constant(tolua_S,NULL,"RF3_GOOD",RF3_GOOD);
+ tolua_constant(tolua_S,NULL,"RF3_AURA_COLD",RF3_AURA_COLD);
+ tolua_constant(tolua_S,NULL,"RF3_NONLIVING",RF3_NONLIVING);
+ tolua_constant(tolua_S,NULL,"RF3_HURT_LITE",RF3_HURT_LITE);
+ tolua_constant(tolua_S,NULL,"RF3_HURT_ROCK",RF3_HURT_ROCK);
+ tolua_constant(tolua_S,NULL,"RF3_SUSCEP_FIRE",RF3_SUSCEP_FIRE);
+ tolua_constant(tolua_S,NULL,"RF3_SUSCEP_COLD",RF3_SUSCEP_COLD);
+ tolua_constant(tolua_S,NULL,"RF3_IM_ACID",RF3_IM_ACID);
+ tolua_constant(tolua_S,NULL,"RF3_IM_ELEC",RF3_IM_ELEC);
+ tolua_constant(tolua_S,NULL,"RF3_IM_FIRE",RF3_IM_FIRE);
+ tolua_constant(tolua_S,NULL,"RF3_IM_COLD",RF3_IM_COLD);
+ tolua_constant(tolua_S,NULL,"RF3_IM_POIS",RF3_IM_POIS);
+ tolua_constant(tolua_S,NULL,"RF3_RES_TELE",RF3_RES_TELE);
+ tolua_constant(tolua_S,NULL,"RF3_RES_NETH",RF3_RES_NETH);
+ tolua_constant(tolua_S,NULL,"RF3_RES_WATE",RF3_RES_WATE);
+ tolua_constant(tolua_S,NULL,"RF3_RES_PLAS",RF3_RES_PLAS);
+ tolua_constant(tolua_S,NULL,"RF3_RES_NEXU",RF3_RES_NEXU);
+ tolua_constant(tolua_S,NULL,"RF3_RES_DISE",RF3_RES_DISE);
+ tolua_constant(tolua_S,NULL,"RF3_UNIQUE_4",RF3_UNIQUE_4);
+ tolua_constant(tolua_S,NULL,"RF3_NO_FEAR",RF3_NO_FEAR);
+ tolua_constant(tolua_S,NULL,"RF3_NO_STUN",RF3_NO_STUN);
+ tolua_constant(tolua_S,NULL,"RF3_NO_CONF",RF3_NO_CONF);
+ tolua_constant(tolua_S,NULL,"RF3_NO_SLEEP",RF3_NO_SLEEP);
+ tolua_constant(tolua_S,NULL,"RF4_SHRIEK",RF4_SHRIEK);
+ tolua_constant(tolua_S,NULL,"RF4_MULTIPLY",RF4_MULTIPLY);
+ tolua_constant(tolua_S,NULL,"RF4_S_ANIMAL",RF4_S_ANIMAL);
+ tolua_constant(tolua_S,NULL,"RF4_ROCKET",RF4_ROCKET);
+ tolua_constant(tolua_S,NULL,"RF4_ARROW_1",RF4_ARROW_1);
+ tolua_constant(tolua_S,NULL,"RF4_ARROW_2",RF4_ARROW_2);
+ tolua_constant(tolua_S,NULL,"RF4_ARROW_3",RF4_ARROW_3);
+ tolua_constant(tolua_S,NULL,"RF4_ARROW_4",RF4_ARROW_4);
+ tolua_constant(tolua_S,NULL,"RF4_BR_ACID",RF4_BR_ACID);
+ tolua_constant(tolua_S,NULL,"RF4_BR_ELEC",RF4_BR_ELEC);
+ tolua_constant(tolua_S,NULL,"RF4_BR_FIRE",RF4_BR_FIRE);
+ tolua_constant(tolua_S,NULL,"RF4_BR_COLD",RF4_BR_COLD);
+ tolua_constant(tolua_S,NULL,"RF4_BR_POIS",RF4_BR_POIS);
+ tolua_constant(tolua_S,NULL,"RF4_BR_NETH",RF4_BR_NETH);
+ tolua_constant(tolua_S,NULL,"RF4_BR_LITE",RF4_BR_LITE);
+ tolua_constant(tolua_S,NULL,"RF4_BR_DARK",RF4_BR_DARK);
+ tolua_constant(tolua_S,NULL,"RF4_BR_CONF",RF4_BR_CONF);
+ tolua_constant(tolua_S,NULL,"RF4_BR_SOUN",RF4_BR_SOUN);
+ tolua_constant(tolua_S,NULL,"RF4_BR_CHAO",RF4_BR_CHAO);
+ tolua_constant(tolua_S,NULL,"RF4_BR_DISE",RF4_BR_DISE);
+ tolua_constant(tolua_S,NULL,"RF4_BR_NEXU",RF4_BR_NEXU);
+ tolua_constant(tolua_S,NULL,"RF4_BR_TIME",RF4_BR_TIME);
+ tolua_constant(tolua_S,NULL,"RF4_BR_INER",RF4_BR_INER);
+ tolua_constant(tolua_S,NULL,"RF4_BR_GRAV",RF4_BR_GRAV);
+ tolua_constant(tolua_S,NULL,"RF4_BR_SHAR",RF4_BR_SHAR);
+ tolua_constant(tolua_S,NULL,"RF4_BR_PLAS",RF4_BR_PLAS);
+ tolua_constant(tolua_S,NULL,"RF4_BR_WALL",RF4_BR_WALL);
+ tolua_constant(tolua_S,NULL,"RF4_BR_MANA",RF4_BR_MANA);
+ tolua_constant(tolua_S,NULL,"RF4_BA_NUKE",RF4_BA_NUKE);
+ tolua_constant(tolua_S,NULL,"RF4_BR_NUKE",RF4_BR_NUKE);
+ tolua_constant(tolua_S,NULL,"RF4_BA_CHAO",RF4_BA_CHAO);
+ tolua_constant(tolua_S,NULL,"RF4_BR_DISI",RF4_BR_DISI);
+ tolua_constant(tolua_S,NULL,"RF5_BA_ACID",RF5_BA_ACID);
+ tolua_constant(tolua_S,NULL,"RF5_BA_ELEC",RF5_BA_ELEC);
+ tolua_constant(tolua_S,NULL,"RF5_BA_FIRE",RF5_BA_FIRE);
+ tolua_constant(tolua_S,NULL,"RF5_BA_COLD",RF5_BA_COLD);
+ tolua_constant(tolua_S,NULL,"RF5_BA_POIS",RF5_BA_POIS);
+ tolua_constant(tolua_S,NULL,"RF5_BA_NETH",RF5_BA_NETH);
+ tolua_constant(tolua_S,NULL,"RF5_BA_WATE",RF5_BA_WATE);
+ tolua_constant(tolua_S,NULL,"RF5_BA_MANA",RF5_BA_MANA);
+ tolua_constant(tolua_S,NULL,"RF5_BA_DARK",RF5_BA_DARK);
+ tolua_constant(tolua_S,NULL,"RF5_DRAIN_MANA",RF5_DRAIN_MANA);
+ tolua_constant(tolua_S,NULL,"RF5_MIND_BLAST",RF5_MIND_BLAST);
+ tolua_constant(tolua_S,NULL,"RF5_BRAIN_SMASH",RF5_BRAIN_SMASH);
+ tolua_constant(tolua_S,NULL,"RF5_CAUSE_1",RF5_CAUSE_1);
+ tolua_constant(tolua_S,NULL,"RF5_CAUSE_2",RF5_CAUSE_2);
+ tolua_constant(tolua_S,NULL,"RF5_CAUSE_3",RF5_CAUSE_3);
+ tolua_constant(tolua_S,NULL,"RF5_CAUSE_4",RF5_CAUSE_4);
+ tolua_constant(tolua_S,NULL,"RF5_BO_ACID",RF5_BO_ACID);
+ tolua_constant(tolua_S,NULL,"RF5_BO_ELEC",RF5_BO_ELEC);
+ tolua_constant(tolua_S,NULL,"RF5_BO_FIRE",RF5_BO_FIRE);
+ tolua_constant(tolua_S,NULL,"RF5_BO_COLD",RF5_BO_COLD);
+ tolua_constant(tolua_S,NULL,"RF5_BO_POIS",RF5_BO_POIS);
+ tolua_constant(tolua_S,NULL,"RF5_BO_NETH",RF5_BO_NETH);
+ tolua_constant(tolua_S,NULL,"RF5_BO_WATE",RF5_BO_WATE);
+ tolua_constant(tolua_S,NULL,"RF5_BO_MANA",RF5_BO_MANA);
+ tolua_constant(tolua_S,NULL,"RF5_BO_PLAS",RF5_BO_PLAS);
+ tolua_constant(tolua_S,NULL,"RF5_BO_ICEE",RF5_BO_ICEE);
+ tolua_constant(tolua_S,NULL,"RF5_MISSILE",RF5_MISSILE);
+ tolua_constant(tolua_S,NULL,"RF5_SCARE",RF5_SCARE);
+ tolua_constant(tolua_S,NULL,"RF5_BLIND",RF5_BLIND);
+ tolua_constant(tolua_S,NULL,"RF5_CONF",RF5_CONF);
+ tolua_constant(tolua_S,NULL,"RF5_SLOW",RF5_SLOW);
+ tolua_constant(tolua_S,NULL,"RF5_HOLD",RF5_HOLD);
+ tolua_constant(tolua_S,NULL,"RF6_HASTE",RF6_HASTE);
+ tolua_constant(tolua_S,NULL,"RF6_HAND_DOOM",RF6_HAND_DOOM);
+ tolua_constant(tolua_S,NULL,"RF6_HEAL",RF6_HEAL);
+ tolua_constant(tolua_S,NULL,"RF6_S_ANIMALS",RF6_S_ANIMALS);
+ tolua_constant(tolua_S,NULL,"RF6_BLINK",RF6_BLINK);
+ tolua_constant(tolua_S,NULL,"RF6_TPORT",RF6_TPORT);
+ tolua_constant(tolua_S,NULL,"RF6_TELE_TO",RF6_TELE_TO);
+ tolua_constant(tolua_S,NULL,"RF6_TELE_AWAY",RF6_TELE_AWAY);
+ tolua_constant(tolua_S,NULL,"RF6_TELE_LEVEL",RF6_TELE_LEVEL);
+ tolua_constant(tolua_S,NULL,"RF6_DARKNESS",RF6_DARKNESS);
+ tolua_constant(tolua_S,NULL,"RF6_TRAPS",RF6_TRAPS);
+ tolua_constant(tolua_S,NULL,"RF6_FORGET",RF6_FORGET);
+ tolua_constant(tolua_S,NULL,"RF6_RAISE_DEAD",RF6_RAISE_DEAD);
+ tolua_constant(tolua_S,NULL,"RF6_S_BUG",RF6_S_BUG);
+ tolua_constant(tolua_S,NULL,"RF6_S_RNG",RF6_S_RNG);
+ tolua_constant(tolua_S,NULL,"RF6_S_THUNDERLORD",RF6_S_THUNDERLORD);
+ tolua_constant(tolua_S,NULL,"RF6_S_KIN",RF6_S_KIN);
+ tolua_constant(tolua_S,NULL,"RF6_S_HI_DEMON",RF6_S_HI_DEMON);
+ tolua_constant(tolua_S,NULL,"RF6_S_MONSTER",RF6_S_MONSTER);
+ tolua_constant(tolua_S,NULL,"RF6_S_MONSTERS",RF6_S_MONSTERS);
+ tolua_constant(tolua_S,NULL,"RF6_S_ANT",RF6_S_ANT);
+ tolua_constant(tolua_S,NULL,"RF6_S_SPIDER",RF6_S_SPIDER);
+ tolua_constant(tolua_S,NULL,"RF6_S_HOUND",RF6_S_HOUND);
+ tolua_constant(tolua_S,NULL,"RF6_S_HYDRA",RF6_S_HYDRA);
+ tolua_constant(tolua_S,NULL,"RF6_S_ANGEL",RF6_S_ANGEL);
+ tolua_constant(tolua_S,NULL,"RF6_S_DEMON",RF6_S_DEMON);
+ tolua_constant(tolua_S,NULL,"RF6_S_UNDEAD",RF6_S_UNDEAD);
+ tolua_constant(tolua_S,NULL,"RF6_S_DRAGON",RF6_S_DRAGON);
+ tolua_constant(tolua_S,NULL,"RF6_S_HI_UNDEAD",RF6_S_HI_UNDEAD);
+ tolua_constant(tolua_S,NULL,"RF6_S_HI_DRAGON",RF6_S_HI_DRAGON);
+ tolua_constant(tolua_S,NULL,"RF6_S_WRAITH",RF6_S_WRAITH);
+ tolua_constant(tolua_S,NULL,"RF6_S_UNIQUE",RF6_S_UNIQUE);
+ tolua_constant(tolua_S,NULL,"RF7_AQUATIC",RF7_AQUATIC);
+ tolua_constant(tolua_S,NULL,"RF7_CAN_SWIM",RF7_CAN_SWIM);
+ tolua_constant(tolua_S,NULL,"RF7_CAN_FLY",RF7_CAN_FLY);
+ tolua_constant(tolua_S,NULL,"RF7_FRIENDLY",RF7_FRIENDLY);
+ tolua_constant(tolua_S,NULL,"RF7_PET",RF7_PET);
+ tolua_constant(tolua_S,NULL,"RF7_MORTAL",RF7_MORTAL);
+ tolua_constant(tolua_S,NULL,"RF7_SPIDER",RF7_SPIDER);
+ tolua_constant(tolua_S,NULL,"RF7_NAZGUL",RF7_NAZGUL);
+ tolua_constant(tolua_S,NULL,"RF7_DG_CURSE",RF7_DG_CURSE);
+ tolua_constant(tolua_S,NULL,"RF7_POSSESSOR",RF7_POSSESSOR);
+ tolua_constant(tolua_S,NULL,"RF7_NO_DEATH",RF7_NO_DEATH);
+ tolua_constant(tolua_S,NULL,"RF7_NO_TARGET",RF7_NO_TARGET);
+ tolua_constant(tolua_S,NULL,"RF7_AI_ANNOY",RF7_AI_ANNOY);
+ tolua_constant(tolua_S,NULL,"RF7_AI_SPECIAL",RF7_AI_SPECIAL);
+ tolua_constant(tolua_S,NULL,"RF7_NO_THEFT",RF7_NO_THEFT);
+ tolua_constant(tolua_S,NULL,"RF7_SPIRIT",RF7_SPIRIT);
+ tolua_constant(tolua_S,NULL,"RF7_IM_MELEE",RF7_IM_MELEE);
+ tolua_constant(tolua_S,NULL,"RF8_DUNGEON",RF8_DUNGEON);
+ tolua_constant(tolua_S,NULL,"RF8_WILD_TOWN",RF8_WILD_TOWN);
+ tolua_constant(tolua_S,NULL,"RF8_XXX8X02",RF8_XXX8X02);
+ tolua_constant(tolua_S,NULL,"RF8_WILD_SHORE",RF8_WILD_SHORE);
+ tolua_constant(tolua_S,NULL,"RF8_WILD_OCEAN",RF8_WILD_OCEAN);
+ tolua_constant(tolua_S,NULL,"RF8_WILD_WASTE",RF8_WILD_WASTE);
+ tolua_constant(tolua_S,NULL,"RF8_WILD_WOOD",RF8_WILD_WOOD);
+ tolua_constant(tolua_S,NULL,"RF8_WILD_VOLCANO",RF8_WILD_VOLCANO);
+ tolua_constant(tolua_S,NULL,"RF8_XXX8X08",RF8_XXX8X08);
+ tolua_constant(tolua_S,NULL,"RF8_WILD_MOUNTAIN",RF8_WILD_MOUNTAIN);
+ tolua_constant(tolua_S,NULL,"RF8_WILD_GRASS",RF8_WILD_GRASS);
+ tolua_constant(tolua_S,NULL,"RF8_CTHANGBAND",RF8_CTHANGBAND);
+ tolua_constant(tolua_S,NULL,"RF8_ZANGBAND",RF8_ZANGBAND);
+ tolua_constant(tolua_S,NULL,"RF8_JOKEANGBAND",RF8_JOKEANGBAND);
+ tolua_constant(tolua_S,NULL,"RF8_ANGBAND",RF8_ANGBAND);
+ tolua_constant(tolua_S,NULL,"RF8_WILD_TOO",RF8_WILD_TOO);
+ tolua_constant(tolua_S,NULL,"RF9_DROP_CORPSE",RF9_DROP_CORPSE);
+ tolua_constant(tolua_S,NULL,"RF9_DROP_SKELETON",RF9_DROP_SKELETON);
+ tolua_constant(tolua_S,NULL,"RF9_HAS_LITE",RF9_HAS_LITE);
+ tolua_constant(tolua_S,NULL,"RF9_MIMIC",RF9_MIMIC);
+ tolua_constant(tolua_S,NULL,"RF9_HAS_EGG",RF9_HAS_EGG);
+ tolua_constant(tolua_S,NULL,"RF9_IMPRESED",RF9_IMPRESED);
+ tolua_constant(tolua_S,NULL,"RF9_SUSCEP_ACID",RF9_SUSCEP_ACID);
+ tolua_constant(tolua_S,NULL,"RF9_SUSCEP_ELEC",RF9_SUSCEP_ELEC);
+ tolua_constant(tolua_S,NULL,"RF9_SUSCEP_POIS",RF9_SUSCEP_POIS);
+ tolua_constant(tolua_S,NULL,"RF9_KILL_TREES",RF9_KILL_TREES);
+ tolua_constant(tolua_S,NULL,"RF9_WYRM_PROTECT",RF9_WYRM_PROTECT);
+ tolua_constant(tolua_S,NULL,"RF9_DOPPLEGANGER",RF9_DOPPLEGANGER);
+ tolua_constant(tolua_S,NULL,"RF9_ONLY_DEPTH",RF9_ONLY_DEPTH);
+ tolua_constant(tolua_S,NULL,"RF9_SPECIAL_GENE",RF9_SPECIAL_GENE);
+ tolua_constant(tolua_S,NULL,"RF9_NEVER_GENE",RF9_NEVER_GENE);
+ tolua_constant(tolua_S,NULL,"MFLAG_VIEW",MFLAG_VIEW);
+ tolua_constant(tolua_S,NULL,"MFLAG_QUEST",MFLAG_QUEST);
+ tolua_constant(tolua_S,NULL,"MFLAG_PARTIAL",MFLAG_PARTIAL);
+ tolua_constant(tolua_S,NULL,"MFLAG_CONTROL",MFLAG_CONTROL);
+ tolua_constant(tolua_S,NULL,"MFLAG_BORN",MFLAG_BORN);
+ tolua_constant(tolua_S,NULL,"MFLAG_NICE",MFLAG_NICE);
+ tolua_constant(tolua_S,NULL,"MFLAG_SHOW",MFLAG_SHOW);
+ tolua_constant(tolua_S,NULL,"MFLAG_MARK",MFLAG_MARK);
+ tolua_constant(tolua_S,NULL,"MFLAG_NO_DROP",MFLAG_NO_DROP);
+ tolua_constant(tolua_S,NULL,"MFLAG_QUEST2",MFLAG_QUEST2);
+ tolua_cclass(tolua_S,"monster_blow","");
+ tolua_tablevar(tolua_S,"monster_blow","method",toluaI_get_monster_monster_blow_method,toluaI_set_monster_monster_blow_method);
+ tolua_tablevar(tolua_S,"monster_blow","effect",toluaI_get_monster_monster_blow_effect,toluaI_set_monster_monster_blow_effect);
+ tolua_tablevar(tolua_S,"monster_blow","d_dice",toluaI_get_monster_monster_blow_d_dice,toluaI_set_monster_monster_blow_d_dice);
+ tolua_tablevar(tolua_S,"monster_blow","d_side",toluaI_get_monster_monster_blow_d_side,toluaI_set_monster_monster_blow_d_side);
+ tolua_cclass(tolua_S,"monster_race","");
+ tolua_tablevar(tolua_S,"monster_race","name",toluaI_get_monster_monster_race_name,toluaI_set_monster_monster_race_name);
+ tolua_tablevar(tolua_S,"monster_race","text",toluaI_get_monster_monster_race_text,toluaI_set_monster_monster_race_text);
+ tolua_tablevar(tolua_S,"monster_race","hdice",toluaI_get_monster_monster_race_hdice,toluaI_set_monster_monster_race_hdice);
+ tolua_tablevar(tolua_S,"monster_race","hside",toluaI_get_monster_monster_race_hside,toluaI_set_monster_monster_race_hside);
+ tolua_tablevar(tolua_S,"monster_race","ac",toluaI_get_monster_monster_race_ac,toluaI_set_monster_monster_race_ac);
+ tolua_tablevar(tolua_S,"monster_race","sleep",toluaI_get_monster_monster_race_sleep,toluaI_set_monster_monster_race_sleep);
+ tolua_tablevar(tolua_S,"monster_race","aaf",toluaI_get_monster_monster_race_aaf,toluaI_set_monster_monster_race_aaf);
+ tolua_tablevar(tolua_S,"monster_race","speed",toluaI_get_monster_monster_race_speed,toluaI_set_monster_monster_race_speed);
+ tolua_tablevar(tolua_S,"monster_race","mexp",toluaI_get_monster_monster_race_mexp,toluaI_set_monster_monster_race_mexp);
+ tolua_tablevar(tolua_S,"monster_race","weight",toluaI_get_monster_monster_race_weight,toluaI_set_monster_monster_race_weight);
+ tolua_tablevar(tolua_S,"monster_race","freq_inate",toluaI_get_monster_monster_race_freq_inate,toluaI_set_monster_monster_race_freq_inate);
+ tolua_tablevar(tolua_S,"monster_race","freq_spell",toluaI_get_monster_monster_race_freq_spell,toluaI_set_monster_monster_race_freq_spell);
+ tolua_tablevar(tolua_S,"monster_race","flags1",toluaI_get_monster_monster_race_flags1,toluaI_set_monster_monster_race_flags1);
+ tolua_tablevar(tolua_S,"monster_race","flags2",toluaI_get_monster_monster_race_flags2,toluaI_set_monster_monster_race_flags2);
+ tolua_tablevar(tolua_S,"monster_race","flags3",toluaI_get_monster_monster_race_flags3,toluaI_set_monster_monster_race_flags3);
+ tolua_tablevar(tolua_S,"monster_race","flags4",toluaI_get_monster_monster_race_flags4,toluaI_set_monster_monster_race_flags4);
+ tolua_tablevar(tolua_S,"monster_race","flags5",toluaI_get_monster_monster_race_flags5,toluaI_set_monster_monster_race_flags5);
+ tolua_tablevar(tolua_S,"monster_race","flags6",toluaI_get_monster_monster_race_flags6,toluaI_set_monster_monster_race_flags6);
+ tolua_tablevar(tolua_S,"monster_race","flags7",toluaI_get_monster_monster_race_flags7,toluaI_set_monster_monster_race_flags7);
+ tolua_tablevar(tolua_S,"monster_race","flags8",toluaI_get_monster_monster_race_flags8,toluaI_set_monster_monster_race_flags8);
+ tolua_tablevar(tolua_S,"monster_race","flags9",toluaI_get_monster_monster_race_flags9,toluaI_set_monster_monster_race_flags9);
+ tolua_tablearray(tolua_S,"monster_race","blow",toluaI_get_monster_monster_race_blow,toluaI_set_monster_monster_race_blow);
+ tolua_tablearray(tolua_S,"monster_race","body_parts",toluaI_get_monster_monster_race_body_parts,toluaI_set_monster_monster_race_body_parts);
+ tolua_tablevar(tolua_S,"monster_race","level",toluaI_get_monster_monster_race_level,toluaI_set_monster_monster_race_level);
+ tolua_tablevar(tolua_S,"monster_race","rarity",toluaI_get_monster_monster_race_rarity,toluaI_set_monster_monster_race_rarity);
+ tolua_tablevar(tolua_S,"monster_race","d_attr",toluaI_get_monster_monster_race_d_attr,toluaI_set_monster_monster_race_d_attr);
+ tolua_tablevar(tolua_S,"monster_race","d_char",toluaI_get_monster_monster_race_d_char,toluaI_set_monster_monster_race_d_char);
+ tolua_tablevar(tolua_S,"monster_race","x_attr",toluaI_get_monster_monster_race_x_attr,toluaI_set_monster_monster_race_x_attr);
+ tolua_tablevar(tolua_S,"monster_race","x_char",toluaI_get_monster_monster_race_x_char,toluaI_set_monster_monster_race_x_char);
+ tolua_tablevar(tolua_S,"monster_race","max_num",toluaI_get_monster_monster_race_max_num,toluaI_set_monster_monster_race_max_num);
+ tolua_tablevar(tolua_S,"monster_race","cur_num",toluaI_get_monster_monster_race_cur_num,toluaI_set_monster_monster_race_cur_num);
+ tolua_tablevar(tolua_S,"monster_race","r_sights",toluaI_get_monster_monster_race_r_sights,toluaI_set_monster_monster_race_r_sights);
+ tolua_tablevar(tolua_S,"monster_race","r_deaths",toluaI_get_monster_monster_race_r_deaths,toluaI_set_monster_monster_race_r_deaths);
+ tolua_tablevar(tolua_S,"monster_race","r_pkills",toluaI_get_monster_monster_race_r_pkills,toluaI_set_monster_monster_race_r_pkills);
+ tolua_tablevar(tolua_S,"monster_race","r_tkills",toluaI_get_monster_monster_race_r_tkills,toluaI_set_monster_monster_race_r_tkills);
+ tolua_tablevar(tolua_S,"monster_race","r_wake",toluaI_get_monster_monster_race_r_wake,toluaI_set_monster_monster_race_r_wake);
+ tolua_tablevar(tolua_S,"monster_race","r_ignore",toluaI_get_monster_monster_race_r_ignore,toluaI_set_monster_monster_race_r_ignore);
+ tolua_tablevar(tolua_S,"monster_race","r_xtra1",toluaI_get_monster_monster_race_r_xtra1,toluaI_set_monster_monster_race_r_xtra1);
+ tolua_tablevar(tolua_S,"monster_race","r_xtra2",toluaI_get_monster_monster_race_r_xtra2,toluaI_set_monster_monster_race_r_xtra2);
+ tolua_tablevar(tolua_S,"monster_race","r_drop_gold",toluaI_get_monster_monster_race_r_drop_gold,toluaI_set_monster_monster_race_r_drop_gold);
+ tolua_tablevar(tolua_S,"monster_race","r_drop_item",toluaI_get_monster_monster_race_r_drop_item,toluaI_set_monster_monster_race_r_drop_item);
+ tolua_tablevar(tolua_S,"monster_race","r_cast_inate",toluaI_get_monster_monster_race_r_cast_inate,toluaI_set_monster_monster_race_r_cast_inate);
+ tolua_tablevar(tolua_S,"monster_race","r_cast_spell",toluaI_get_monster_monster_race_r_cast_spell,toluaI_set_monster_monster_race_r_cast_spell);
+ tolua_tablearray(tolua_S,"monster_race","r_blows",toluaI_get_monster_monster_race_r_blows,toluaI_set_monster_monster_race_r_blows);
+ tolua_tablevar(tolua_S,"monster_race","r_flags1",toluaI_get_monster_monster_race_r_flags1,toluaI_set_monster_monster_race_r_flags1);
+ tolua_tablevar(tolua_S,"monster_race","r_flags2",toluaI_get_monster_monster_race_r_flags2,toluaI_set_monster_monster_race_r_flags2);
+ tolua_tablevar(tolua_S,"monster_race","r_flags3",toluaI_get_monster_monster_race_r_flags3,toluaI_set_monster_monster_race_r_flags3);
+ tolua_tablevar(tolua_S,"monster_race","r_flags4",toluaI_get_monster_monster_race_r_flags4,toluaI_set_monster_monster_race_r_flags4);
+ tolua_tablevar(tolua_S,"monster_race","r_flags5",toluaI_get_monster_monster_race_r_flags5,toluaI_set_monster_monster_race_r_flags5);
+ tolua_tablevar(tolua_S,"monster_race","r_flags6",toluaI_get_monster_monster_race_r_flags6,toluaI_set_monster_monster_race_r_flags6);
+ tolua_tablevar(tolua_S,"monster_race","r_flags7",toluaI_get_monster_monster_race_r_flags7,toluaI_set_monster_monster_race_r_flags7);
+ tolua_tablevar(tolua_S,"monster_race","r_flags8",toluaI_get_monster_monster_race_r_flags8,toluaI_set_monster_monster_race_r_flags8);
+ tolua_tablevar(tolua_S,"monster_race","r_flags9",toluaI_get_monster_monster_race_r_flags9,toluaI_set_monster_monster_race_r_flags9);
+ tolua_tablevar(tolua_S,"monster_race","on_saved",toluaI_get_monster_monster_race_on_saved,toluaI_set_monster_monster_race_on_saved);
+ tolua_tablevar(tolua_S,"monster_race","total_visible",toluaI_get_monster_monster_race_total_visible,toluaI_set_monster_monster_race_total_visible);
+ tolua_tablevar(tolua_S,"monster_race","drops",toluaI_get_monster_monster_race_drops,toluaI_set_monster_monster_race_drops);
+ tolua_cclass(tolua_S,"monster_type","");
+ tolua_tablevar(tolua_S,"monster_type","r_idx",toluaI_get_monster_monster_type_r_idx,toluaI_set_monster_monster_type_r_idx);
+ tolua_tablevar(tolua_S,"monster_type","ego",toluaI_get_monster_monster_type_ego,toluaI_set_monster_monster_type_ego);
+ tolua_tablevar(tolua_S,"monster_type","fy",toluaI_get_monster_monster_type_fy,toluaI_set_monster_monster_type_fy);
+ tolua_tablevar(tolua_S,"monster_type","fx",toluaI_get_monster_monster_type_fx,toluaI_set_monster_monster_type_fx);
+ tolua_tablevar(tolua_S,"monster_type","hp",toluaI_get_monster_monster_type_hp,toluaI_set_monster_monster_type_hp);
+ tolua_tablevar(tolua_S,"monster_type","maxhp",toluaI_get_monster_monster_type_maxhp,toluaI_set_monster_monster_type_maxhp);
+ tolua_tablearray(tolua_S,"monster_type","blow",toluaI_get_monster_monster_type_blow,toluaI_set_monster_monster_type_blow);
+ tolua_tablevar(tolua_S,"monster_type","speed",toluaI_get_monster_monster_type_speed,toluaI_set_monster_monster_type_speed);
+ tolua_tablevar(tolua_S,"monster_type","level",toluaI_get_monster_monster_type_level,toluaI_set_monster_monster_type_level);
+ tolua_tablevar(tolua_S,"monster_type","ac",toluaI_get_monster_monster_type_ac,toluaI_set_monster_monster_type_ac);
+ tolua_tablevar(tolua_S,"monster_type","exp",toluaI_get_monster_monster_type_exp,toluaI_set_monster_monster_type_exp);
+ tolua_tablevar(tolua_S,"monster_type","csleep",toluaI_get_monster_monster_type_csleep,toluaI_set_monster_monster_type_csleep);
+ tolua_tablevar(tolua_S,"monster_type","mspeed",toluaI_get_monster_monster_type_mspeed,toluaI_set_monster_monster_type_mspeed);
+ tolua_tablevar(tolua_S,"monster_type","energy",toluaI_get_monster_monster_type_energy,toluaI_set_monster_monster_type_energy);
+ tolua_tablevar(tolua_S,"monster_type","stunned",toluaI_get_monster_monster_type_stunned,toluaI_set_monster_monster_type_stunned);
+ tolua_tablevar(tolua_S,"monster_type","confused",toluaI_get_monster_monster_type_confused,toluaI_set_monster_monster_type_confused);
+ tolua_tablevar(tolua_S,"monster_type","monfear",toluaI_get_monster_monster_type_monfear,toluaI_set_monster_monster_type_monfear);
+ tolua_tablevar(tolua_S,"monster_type","bleeding",toluaI_get_monster_monster_type_bleeding,toluaI_set_monster_monster_type_bleeding);
+ tolua_tablevar(tolua_S,"monster_type","poisoned",toluaI_get_monster_monster_type_poisoned,toluaI_set_monster_monster_type_poisoned);
+ tolua_tablevar(tolua_S,"monster_type","cdis",toluaI_get_monster_monster_type_cdis,toluaI_set_monster_monster_type_cdis);
+ tolua_tablevar(tolua_S,"monster_type","mflag",toluaI_get_monster_monster_type_mflag,toluaI_set_monster_monster_type_mflag);
+ tolua_tablevar(tolua_S,"monster_type","ml",toluaI_get_monster_monster_type_ml,toluaI_set_monster_monster_type_ml);
+ tolua_tablevar(tolua_S,"monster_type","hold_o_idx",toluaI_get_monster_monster_type_hold_o_idx,toluaI_set_monster_monster_type_hold_o_idx);
+ tolua_tablevar(tolua_S,"monster_type","smart",toluaI_get_monster_monster_type_smart,toluaI_set_monster_monster_type_smart);
+ tolua_tablevar(tolua_S,"monster_type","status",toluaI_get_monster_monster_type_status,toluaI_set_monster_monster_type_status);
+ tolua_tablevar(tolua_S,"monster_type","target",toluaI_get_monster_monster_type_target,toluaI_set_monster_monster_type_target);
+ tolua_tablevar(tolua_S,"monster_type","possessor",toluaI_get_monster_monster_type_possessor,toluaI_set_monster_monster_type_possessor);
+ tolua_function(tolua_S,NULL,"monster",toluaI_monster_monster00);
+ tolua_globalarray(tolua_S,"m_list",toluaI_get_monster_m_list,toluaI_set_monster_m_list);
+ tolua_function(tolua_S,NULL,"race_info_idx",toluaI_monster_race_info_idx00);
+ tolua_function(tolua_S,NULL,"delete_monster_idx",toluaI_monster_delete_monster_idx00);
+ tolua_function(tolua_S,NULL,"m_pop",toluaI_monster_m_pop00);
+ tolua_function(tolua_S,NULL,"get_mon_num_prep",toluaI_monster_get_mon_num_prep00);
+ tolua_function(tolua_S,NULL,"get_mon_num",toluaI_monster_get_mon_num00);
+ tolua_function(tolua_S,NULL,"monster_desc",toluaI_monster_monster_desc00);
+ tolua_function(tolua_S,NULL,"monster_race_desc",toluaI_monster_monster_race_desc00);
+ tolua_function(tolua_S,NULL,"monster_race_desc",toluaI_monster_monster_race_desc01);
+ tolua_function(tolua_S,NULL,"monster_carry",toluaI_monster_monster_carry00);
+ tolua_function(tolua_S,NULL,"place_monster_aux",toluaI_monster_place_monster_aux00);
+ tolua_function(tolua_S,NULL,"place_monster",toluaI_monster_place_monster00);
+ tolua_function(tolua_S,NULL,"place_monster_one",toluaI_monster_place_monster_one00);
+ tolua_function(tolua_S,NULL,"is_friend",toluaI_monster_is_friend00);
+ tolua_function(tolua_S,NULL,"is_enemy",toluaI_monster_is_enemy00);
+ tolua_function(tolua_S,NULL,"change_side",toluaI_monster_change_side00);
+ tolua_function(tolua_S,NULL,"find_position",toluaI_monster_find_position00);
+ tolua_globalvar(tolua_S,"summon_specific_level",toluaI_get_monster_summon_specific_level,toluaI_set_monster_summon_specific_level);
+ tolua_globalvar(tolua_S,"summon_kin_type",toluaI_get_monster_summon_kin_type,toluaI_set_monster_summon_kin_type);
+ tolua_function(tolua_S,NULL,"summon_specific",toluaI_monster_summon_specific00);
+ tolua_function(tolua_S,NULL,"summon_specific_friendly",toluaI_monster_summon_specific_friendly00);
+ tolua_function(tolua_S,NULL,"summon_monster_aux",toluaI_monster_summon_monster_aux00);
+ tolua_function(tolua_S,NULL,"can_create_companion",toluaI_monster_can_create_companion00);
+ tolua_function(tolua_S,NULL,"monster_set_level",toluaI_monster_monster_set_level00);
+ tolua_constant(tolua_S,NULL,"SUMMON_ANT",SUMMON_ANT);
+ tolua_constant(tolua_S,NULL,"SUMMON_SPIDER",SUMMON_SPIDER);
+ tolua_constant(tolua_S,NULL,"SUMMON_HOUND",SUMMON_HOUND);
+ tolua_constant(tolua_S,NULL,"SUMMON_HYDRA",SUMMON_HYDRA);
+ tolua_constant(tolua_S,NULL,"SUMMON_ANGEL",SUMMON_ANGEL);
+ tolua_constant(tolua_S,NULL,"SUMMON_DEMON",SUMMON_DEMON);
+ tolua_constant(tolua_S,NULL,"SUMMON_UNDEAD",SUMMON_UNDEAD);
+ tolua_constant(tolua_S,NULL,"SUMMON_DRAGON",SUMMON_DRAGON);
+ tolua_constant(tolua_S,NULL,"SUMMON_HI_UNDEAD",SUMMON_HI_UNDEAD);
+ tolua_constant(tolua_S,NULL,"SUMMON_HI_DRAGON",SUMMON_HI_DRAGON);
+ tolua_constant(tolua_S,NULL,"SUMMON_WRAITH",SUMMON_WRAITH);
+ tolua_constant(tolua_S,NULL,"SUMMON_UNIQUE",SUMMON_UNIQUE);
+ tolua_constant(tolua_S,NULL,"SUMMON_BIZARRE1",SUMMON_BIZARRE1);
+ tolua_constant(tolua_S,NULL,"SUMMON_BIZARRE2",SUMMON_BIZARRE2);
+ tolua_constant(tolua_S,NULL,"SUMMON_BIZARRE3",SUMMON_BIZARRE3);
+ tolua_constant(tolua_S,NULL,"SUMMON_BIZARRE4",SUMMON_BIZARRE4);
+ tolua_constant(tolua_S,NULL,"SUMMON_BIZARRE5",SUMMON_BIZARRE5);
+ tolua_constant(tolua_S,NULL,"SUMMON_BIZARRE6",SUMMON_BIZARRE6);
+ tolua_constant(tolua_S,NULL,"SUMMON_HI_DEMON",SUMMON_HI_DEMON);
+ tolua_constant(tolua_S,NULL,"SUMMON_KIN",SUMMON_KIN);
+ tolua_constant(tolua_S,NULL,"SUMMON_DAWN",SUMMON_DAWN);
+ tolua_constant(tolua_S,NULL,"SUMMON_ANIMAL",SUMMON_ANIMAL);
+ tolua_constant(tolua_S,NULL,"SUMMON_ANIMAL_RANGER",SUMMON_ANIMAL_RANGER);
+ tolua_constant(tolua_S,NULL,"SUMMON_HI_UNDEAD_NO_UNIQUES",SUMMON_HI_UNDEAD_NO_UNIQUES);
+ tolua_constant(tolua_S,NULL,"SUMMON_HI_DRAGON_NO_UNIQUES",SUMMON_HI_DRAGON_NO_UNIQUES);
+ tolua_constant(tolua_S,NULL,"SUMMON_NO_UNIQUES",SUMMON_NO_UNIQUES);
+ tolua_constant(tolua_S,NULL,"SUMMON_PHANTOM",SUMMON_PHANTOM);
+ tolua_constant(tolua_S,NULL,"SUMMON_ELEMENTAL",SUMMON_ELEMENTAL);
+ tolua_constant(tolua_S,NULL,"SUMMON_THUNDERLORD",SUMMON_THUNDERLORD);
+ tolua_constant(tolua_S,NULL,"SUMMON_BLUE_HORROR",SUMMON_BLUE_HORROR);
+ tolua_constant(tolua_S,NULL,"SUMMON_BUG",SUMMON_BUG);
+ tolua_constant(tolua_S,NULL,"SUMMON_RNG",SUMMON_RNG);
+ tolua_constant(tolua_S,NULL,"SUMMON_MINE",SUMMON_MINE);
+ tolua_constant(tolua_S,NULL,"SUMMON_HUMAN",SUMMON_HUMAN);
+ tolua_constant(tolua_S,NULL,"SUMMON_SHADOWS",SUMMON_SHADOWS);
+ tolua_constant(tolua_S,NULL,"SUMMON_GHOST",SUMMON_GHOST);
+ tolua_constant(tolua_S,NULL,"SUMMON_QUYLTHULG",SUMMON_QUYLTHULG);
+ tolua_constant(tolua_S,NULL,"SUMMON_LUA",SUMMON_LUA);
+ tolua_function(tolua_S,NULL,"do_control_reconnect",toluaI_monster_do_control_reconnect00);
+ tolua_globalvar(tolua_S,"m_max",toluaI_get_monster_m_max,toluaI_set_monster_m_max);
+ return 1;
+}
+/* Close function */
+void tolua_monster_close (lua_State* tolua_S)
+{
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"monster_forge"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MSTATUS_ENEMY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MSTATUS_NEUTRAL_M");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MSTATUS_NEUTRAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MSTATUS_NEUTRAL_P");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MSTATUS_FRIEND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MSTATUS_PET");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MSTATUS_COMPANION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_UNIQUE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_QUESTOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_MALE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_FEMALE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_CHAR_CLEAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_CHAR_MULTI");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_ATTR_CLEAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_ATTR_MULTI");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_FORCE_DEPTH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_FORCE_MAXHP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_FORCE_SLEEP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_FORCE_EXTRA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_FRIEND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_FRIENDS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_ESCORT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_ESCORTS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_NEVER_BLOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_NEVER_MOVE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_RAND_25");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_RAND_50");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_ONLY_GOLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_ONLY_ITEM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_DROP_60");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_DROP_90");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_DROP_1D2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_DROP_2D2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_DROP_3D2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_DROP_4D2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_DROP_GOOD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_DROP_GREAT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_DROP_USEFUL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF1_DROP_CHOSEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_STUPID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_SMART");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_CAN_SPEAK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_REFLECTING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_INVISIBLE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_COLD_BLOOD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_EMPTY_MIND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_WEIRD_MIND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_DEATH_ORB");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_REGENERATE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_SHAPECHANGER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_ATTR_ANY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_POWERFUL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_ELDRITCH_HORROR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_AURA_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_AURA_ELEC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_OPEN_DOOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_BASH_DOOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_PASS_WALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_KILL_WALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_MOVE_BODY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_KILL_BODY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_TAKE_ITEM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_KILL_ITEM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_BRAIN_1");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_BRAIN_2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_BRAIN_3");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_BRAIN_4");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_BRAIN_5");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_BRAIN_6");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_BRAIN_7");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF2_BRAIN_8");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_ORC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_TROLL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_GIANT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_DRAGON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_DEMON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_UNDEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_EVIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_ANIMAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_THUNDERLORD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_GOOD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_AURA_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_NONLIVING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_HURT_LITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_HURT_ROCK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_SUSCEP_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_SUSCEP_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_IM_ACID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_IM_ELEC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_IM_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_IM_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_IM_POIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_RES_TELE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_RES_NETH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_RES_WATE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_RES_PLAS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_RES_NEXU");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_RES_DISE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_UNIQUE_4");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_NO_FEAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_NO_STUN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_NO_CONF");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF3_NO_SLEEP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_SHRIEK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_MULTIPLY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_S_ANIMAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_ROCKET");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_ARROW_1");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_ARROW_2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_ARROW_3");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_ARROW_4");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_ACID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_ELEC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_POIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_NETH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_LITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_DARK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_CONF");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_SOUN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_CHAO");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_DISE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_NEXU");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_TIME");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_INER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_GRAV");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_SHAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_PLAS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_WALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_MANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BA_NUKE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_NUKE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BA_CHAO");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF4_BR_DISI");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BA_ACID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BA_ELEC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BA_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BA_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BA_POIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BA_NETH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BA_WATE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BA_MANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BA_DARK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_DRAIN_MANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_MIND_BLAST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BRAIN_SMASH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_CAUSE_1");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_CAUSE_2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_CAUSE_3");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_CAUSE_4");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BO_ACID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BO_ELEC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BO_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BO_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BO_POIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BO_NETH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BO_WATE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BO_MANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BO_PLAS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BO_ICEE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_MISSILE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_SCARE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_BLIND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_CONF");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_SLOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF5_HOLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_HASTE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_HAND_DOOM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_HEAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_ANIMALS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_BLINK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_TPORT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_TELE_TO");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_TELE_AWAY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_TELE_LEVEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_DARKNESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_TRAPS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_FORGET");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_RAISE_DEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_BUG");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_RNG");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_THUNDERLORD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_KIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_HI_DEMON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_MONSTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_MONSTERS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_ANT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_SPIDER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_HOUND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_HYDRA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_ANGEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_DEMON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_UNDEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_DRAGON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_HI_UNDEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_HI_DRAGON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_WRAITH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF6_S_UNIQUE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_AQUATIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_CAN_SWIM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_CAN_FLY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_FRIENDLY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_PET");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_MORTAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_SPIDER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_NAZGUL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_DG_CURSE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_POSSESSOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_NO_DEATH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_NO_TARGET");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_AI_ANNOY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_AI_SPECIAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_NO_THEFT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_SPIRIT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF7_IM_MELEE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_DUNGEON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_WILD_TOWN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_XXX8X02");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_WILD_SHORE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_WILD_OCEAN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_WILD_WASTE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_WILD_WOOD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_WILD_VOLCANO");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_XXX8X08");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_WILD_MOUNTAIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_WILD_GRASS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_CTHANGBAND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_ZANGBAND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_JOKEANGBAND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_ANGBAND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF8_WILD_TOO");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF9_DROP_CORPSE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF9_DROP_SKELETON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF9_HAS_LITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF9_MIMIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF9_HAS_EGG");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF9_IMPRESED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF9_SUSCEP_ACID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF9_SUSCEP_ELEC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF9_SUSCEP_POIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF9_KILL_TREES");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF9_WYRM_PROTECT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF9_DOPPLEGANGER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF9_ONLY_DEPTH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF9_SPECIAL_GENE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"RF9_NEVER_GENE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MFLAG_VIEW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MFLAG_QUEST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MFLAG_PARTIAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MFLAG_CONTROL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MFLAG_BORN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MFLAG_NICE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MFLAG_SHOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MFLAG_MARK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MFLAG_NO_DROP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MFLAG_QUEST2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"monster_blow");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"monster_race");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"monster_type");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"monster");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"m_list");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"race_info_idx");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"delete_monster_idx");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"m_pop");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_mon_num_prep");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_mon_num");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"monster_desc");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"monster_race_desc");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"monster_race_desc");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"monster_carry");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"place_monster_aux");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"place_monster");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"place_monster_one");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"is_friend");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"is_enemy");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"change_side");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"find_position");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"summon_specific_level"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"summon_kin_type"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"summon_specific");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"summon_specific_friendly");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"summon_monster_aux");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"can_create_companion");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"monster_set_level");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_ANT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_SPIDER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_HOUND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_HYDRA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_ANGEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_DEMON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_UNDEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_DRAGON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_HI_UNDEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_HI_DRAGON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_WRAITH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_UNIQUE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_BIZARRE1");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_BIZARRE2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_BIZARRE3");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_BIZARRE4");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_BIZARRE5");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_BIZARRE6");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_HI_DEMON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_KIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_DAWN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_ANIMAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_ANIMAL_RANGER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_HI_UNDEAD_NO_UNIQUES");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_HI_DRAGON_NO_UNIQUES");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_NO_UNIQUES");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_PHANTOM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_ELEMENTAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_THUNDERLORD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_BLUE_HORROR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_BUG");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_RNG");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_MINE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_HUMAN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_SHADOWS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_GHOST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_QUYLTHULG");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUMMON_LUA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"do_control_reconnect");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"m_max"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+}
diff -Nru --strip-trailing-cr tome-2.5.3/src/w_obj.c tome-2.5.3-lua.files/src/w_obj.c
--- tome-2.5.3/src/w_obj.c	1969-12-31 16:00:00.000000000 -0800
+++ tome-2.5.3-lua.files/src/w_obj.c	2010-09-26 07:36:59.000000000 -0700
@@ -0,0 +1,6015 @@
+/*
+** Lua binding: object
+** Generated automatically by tolua 4.0a - angband on Sun Sep 26 07:36:58 2010.
+*/
+
+#include "lua/tolua.h"
+
+/* Exported function */
+int tolua_object_open (lua_State* tolua_S);
+void tolua_object_close (lua_State* tolua_S);
+
+#include "angband.h"
+static object_type lua_obj_forge;
+static obj_theme lua_obj_theme;
+static bool lua_is_artifact(object_type *o_ptr) { return artifact_p(o_ptr); }
+static bool lua_is_aware(object_type *o_ptr) { return object_aware_p(o_ptr); }
+static bool lua_is_known(object_type *o_ptr) { return object_known_p(o_ptr); }
+static void lua_set_aware(object_type *o_ptr) { object_aware(o_ptr); }
+static void lua_set_known(object_type *o_ptr) { object_known(o_ptr); }
+
+/* function to register type */
+static void toluaI_reg_types (lua_State* tolua_S)
+{
+ tolua_usertype(tolua_S,"FILE");
+ tolua_usertype(tolua_S,"object_type");
+ tolua_usertype(tolua_S,"ego_item_type");
+ tolua_usertype(tolua_S,"header");
+ tolua_usertype(tolua_S,"obj_theme");
+ tolua_usertype(tolua_S,"artifact_type");
+ tolua_usertype(tolua_S,"object_kind");
+}
+
+/* error messages */
+#define TOLUA_ERR_SELF tolua_error(tolua_S,"invalid 'self'")
+#define TOLUA_ERR_ASSIGN tolua_error(tolua_S,"#vinvalid type in variable assignment.")
+
+/* get function: lua_obj_forge */
+static int toluaI_get_object_obj_forge(lua_State* tolua_S)
+{
+ tolua_pushusertype(tolua_S,(void*)&lua_obj_forge,tolua_tag(tolua_S,"object_type"));
+ return 1;
+}
+
+/* set function: lua_obj_forge */
+static int toluaI_set_object_obj_forge(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,2,tolua_tag(tolua_S,"object_type"),0))
+ TOLUA_ERR_ASSIGN;
+  lua_obj_forge = *((object_type*)  tolua_getusertype(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: lua_obj_theme */
+static int toluaI_get_object_theme_forge(lua_State* tolua_S)
+{
+ tolua_pushusertype(tolua_S,(void*)&lua_obj_theme,tolua_tag(tolua_S,"obj_theme"));
+ return 1;
+}
+
+/* set function: lua_obj_theme */
+static int toluaI_set_object_theme_forge(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,2,tolua_tag(tolua_S,"obj_theme"),0))
+ TOLUA_ERR_ASSIGN;
+  lua_obj_theme = *((obj_theme*)  tolua_getusertype(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: treasure of class  obj_theme */
+static int toluaI_get_object_obj_theme_treasure(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->treasure);
+ return 1;
+}
+
+/* set function: treasure of class  obj_theme */
+static int toluaI_set_object_obj_theme_treasure(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->treasure = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: combat of class  obj_theme */
+static int toluaI_get_object_obj_theme_combat(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->combat);
+ return 1;
+}
+
+/* set function: combat of class  obj_theme */
+static int toluaI_set_object_obj_theme_combat(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->combat = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: magic of class  obj_theme */
+static int toluaI_get_object_obj_theme_magic(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->magic);
+ return 1;
+}
+
+/* set function: magic of class  obj_theme */
+static int toluaI_set_object_obj_theme_magic(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->magic = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tools of class  obj_theme */
+static int toluaI_get_object_obj_theme_tools(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tools);
+ return 1;
+}
+
+/* set function: tools of class  obj_theme */
+static int toluaI_set_object_obj_theme_tools(lua_State* tolua_S)
+{
+  obj_theme* self = (obj_theme*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tools = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: name of class  object_kind */
+static int toluaI_get_object_object_kind_name(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->name);
+ return 1;
+}
+
+/* set function: name of class  object_kind */
+static int toluaI_set_object_object_kind_name(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->name = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: text of class  object_kind */
+static int toluaI_get_object_object_kind_text(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->text);
+ return 1;
+}
+
+/* set function: text of class  object_kind */
+static int toluaI_set_object_object_kind_text(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->text = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tval of class  object_kind */
+static int toluaI_get_object_object_kind_tval(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tval);
+ return 1;
+}
+
+/* set function: tval of class  object_kind */
+static int toluaI_set_object_object_kind_tval(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tval = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sval of class  object_kind */
+static int toluaI_get_object_object_kind_sval(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sval);
+ return 1;
+}
+
+/* set function: sval of class  object_kind */
+static int toluaI_set_object_object_kind_sval(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sval = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: pval of class  object_kind */
+static int toluaI_get_object_object_kind_pval(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->pval);
+ return 1;
+}
+
+/* set function: pval of class  object_kind */
+static int toluaI_set_object_object_kind_pval(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->pval = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: pval2 of class  object_kind */
+static int toluaI_get_object_object_kind_pval2(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->pval2);
+ return 1;
+}
+
+/* set function: pval2 of class  object_kind */
+static int toluaI_set_object_object_kind_pval2(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->pval2 = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_h of class  object_kind */
+static int toluaI_get_object_object_kind_to_h(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_h);
+ return 1;
+}
+
+/* set function: to_h of class  object_kind */
+static int toluaI_set_object_object_kind_to_h(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_h = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_d of class  object_kind */
+static int toluaI_get_object_object_kind_to_d(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_d);
+ return 1;
+}
+
+/* set function: to_d of class  object_kind */
+static int toluaI_set_object_object_kind_to_d(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_d = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_a of class  object_kind */
+static int toluaI_get_object_object_kind_to_a(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_a);
+ return 1;
+}
+
+/* set function: to_a of class  object_kind */
+static int toluaI_set_object_object_kind_to_a(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_a = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ac of class  object_kind */
+static int toluaI_get_object_object_kind_ac(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ac);
+ return 1;
+}
+
+/* set function: ac of class  object_kind */
+static int toluaI_set_object_object_kind_ac(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ac = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: dd of class  object_kind */
+static int toluaI_get_object_object_kind_dd(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->dd);
+ return 1;
+}
+
+/* set function: dd of class  object_kind */
+static int toluaI_set_object_object_kind_dd(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->dd = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ds of class  object_kind */
+static int toluaI_get_object_object_kind_ds(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ds);
+ return 1;
+}
+
+/* set function: ds of class  object_kind */
+static int toluaI_set_object_object_kind_ds(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ds = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: weight of class  object_kind */
+static int toluaI_get_object_object_kind_weight(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->weight);
+ return 1;
+}
+
+/* set function: weight of class  object_kind */
+static int toluaI_set_object_object_kind_weight(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->weight = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: cost of class  object_kind */
+static int toluaI_get_object_object_kind_cost(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->cost);
+ return 1;
+}
+
+/* set function: cost of class  object_kind */
+static int toluaI_set_object_object_kind_cost(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->cost = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags1 of class  object_kind */
+static int toluaI_get_object_object_kind_flags1(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags1);
+ return 1;
+}
+
+/* set function: flags1 of class  object_kind */
+static int toluaI_set_object_object_kind_flags1(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags1 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags2 of class  object_kind */
+static int toluaI_get_object_object_kind_flags2(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags2);
+ return 1;
+}
+
+/* set function: flags2 of class  object_kind */
+static int toluaI_set_object_object_kind_flags2(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags2 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags3 of class  object_kind */
+static int toluaI_get_object_object_kind_flags3(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags3);
+ return 1;
+}
+
+/* set function: flags3 of class  object_kind */
+static int toluaI_set_object_object_kind_flags3(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags3 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags4 of class  object_kind */
+static int toluaI_get_object_object_kind_flags4(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags4);
+ return 1;
+}
+
+/* set function: flags4 of class  object_kind */
+static int toluaI_set_object_object_kind_flags4(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags4 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags5 of class  object_kind */
+static int toluaI_get_object_object_kind_flags5(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags5);
+ return 1;
+}
+
+/* set function: flags5 of class  object_kind */
+static int toluaI_set_object_object_kind_flags5(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags5 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: locale of class  object_kind */
+static int toluaI_get_object_object_kind_locale(lua_State* tolua_S)
+{
+ int toluaI_index;
+  object_kind* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (object_kind*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->locale[toluaI_index]);
+ return 1;
+}
+
+/* set function: locale of class  object_kind */
+static int toluaI_set_object_object_kind_locale(lua_State* tolua_S)
+{
+ int toluaI_index;
+  object_kind* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (object_kind*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->locale[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: chance of class  object_kind */
+static int toluaI_get_object_object_kind_chance(lua_State* tolua_S)
+{
+ int toluaI_index;
+  object_kind* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (object_kind*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->chance[toluaI_index]);
+ return 1;
+}
+
+/* set function: chance of class  object_kind */
+static int toluaI_set_object_object_kind_chance(lua_State* tolua_S)
+{
+ int toluaI_index;
+  object_kind* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (object_kind*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->chance[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: level of class  object_kind */
+static int toluaI_get_object_object_kind_level(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->level);
+ return 1;
+}
+
+/* set function: level of class  object_kind */
+static int toluaI_set_object_object_kind_level(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->level = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: extra of class  object_kind */
+static int toluaI_get_object_object_kind_extra(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->extra);
+ return 1;
+}
+
+/* set function: extra of class  object_kind */
+static int toluaI_set_object_object_kind_extra(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->extra = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: d_attr of class  object_kind */
+static int toluaI_get_object_object_kind_d_attr(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->d_attr);
+ return 1;
+}
+
+/* set function: d_attr of class  object_kind */
+static int toluaI_set_object_object_kind_d_attr(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->d_attr = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: d_char of class  object_kind */
+static int toluaI_get_object_object_kind_d_char(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->d_char);
+ return 1;
+}
+
+/* set function: d_char of class  object_kind */
+static int toluaI_set_object_object_kind_d_char(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->d_char = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: x_attr of class  object_kind */
+static int toluaI_get_object_object_kind_x_attr(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->x_attr);
+ return 1;
+}
+
+/* set function: x_attr of class  object_kind */
+static int toluaI_set_object_object_kind_x_attr(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->x_attr = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: x_char of class  object_kind */
+static int toluaI_get_object_object_kind_x_char(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->x_char);
+ return 1;
+}
+
+/* set function: x_char of class  object_kind */
+static int toluaI_set_object_object_kind_x_char(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->x_char = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flavor of class  object_kind */
+static int toluaI_get_object_object_kind_flavor(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flavor);
+ return 1;
+}
+
+/* set function: flavor of class  object_kind */
+static int toluaI_set_object_object_kind_flavor(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flavor = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: easy_know of class  object_kind */
+static int toluaI_get_object_object_kind_easy_know(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->easy_know);
+ return 1;
+}
+
+/* set function: easy_know of class  object_kind */
+static int toluaI_set_object_object_kind_easy_know(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->easy_know = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: aware of class  object_kind */
+static int toluaI_get_object_object_kind_aware(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->aware);
+ return 1;
+}
+
+/* set function: aware of class  object_kind */
+static int toluaI_set_object_object_kind_aware(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->aware = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tried of class  object_kind */
+static int toluaI_get_object_object_kind_tried(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tried);
+ return 1;
+}
+
+/* set function: tried of class  object_kind */
+static int toluaI_set_object_object_kind_tried(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tried = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: know of class  object_kind */
+static int toluaI_get_object_object_kind_know(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->know);
+ return 1;
+}
+
+/* set function: know of class  object_kind */
+static int toluaI_set_object_object_kind_know(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->know = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: esp of class  object_kind */
+static int toluaI_get_object_object_kind_esp(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->esp);
+ return 1;
+}
+
+/* set function: esp of class  object_kind */
+static int toluaI_set_object_object_kind_esp(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->esp = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: btval of class  object_kind */
+static int toluaI_get_object_object_kind_btval(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->btval);
+ return 1;
+}
+
+/* set function: btval of class  object_kind */
+static int toluaI_set_object_object_kind_btval(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->btval = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: bsval of class  object_kind */
+static int toluaI_get_object_object_kind_bsval(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->bsval);
+ return 1;
+}
+
+/* set function: bsval of class  object_kind */
+static int toluaI_set_object_object_kind_bsval(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->bsval = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: artifact of class  object_kind */
+static int toluaI_get_object_object_kind_artifact(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->artifact);
+ return 1;
+}
+
+/* set function: artifact of class  object_kind */
+static int toluaI_set_object_object_kind_artifact(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->artifact = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: power of class  object_kind */
+static int toluaI_get_object_object_kind_power(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->power);
+ return 1;
+}
+
+/* set function: power of class  object_kind */
+static int toluaI_set_object_object_kind_power(lua_State* tolua_S)
+{
+  object_kind* self = (object_kind*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->power = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: name of class  artifact_type */
+static int toluaI_get_object_artifact_type_name(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->name);
+ return 1;
+}
+
+/* set function: name of class  artifact_type */
+static int toluaI_set_object_artifact_type_name(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->name = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: text of class  artifact_type */
+static int toluaI_get_object_artifact_type_text(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->text);
+ return 1;
+}
+
+/* set function: text of class  artifact_type */
+static int toluaI_set_object_artifact_type_text(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->text = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tval of class  artifact_type */
+static int toluaI_get_object_artifact_type_tval(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tval);
+ return 1;
+}
+
+/* set function: tval of class  artifact_type */
+static int toluaI_set_object_artifact_type_tval(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tval = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sval of class  artifact_type */
+static int toluaI_get_object_artifact_type_sval(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sval);
+ return 1;
+}
+
+/* set function: sval of class  artifact_type */
+static int toluaI_set_object_artifact_type_sval(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sval = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: pval of class  artifact_type */
+static int toluaI_get_object_artifact_type_pval(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->pval);
+ return 1;
+}
+
+/* set function: pval of class  artifact_type */
+static int toluaI_set_object_artifact_type_pval(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->pval = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_h of class  artifact_type */
+static int toluaI_get_object_artifact_type_to_h(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_h);
+ return 1;
+}
+
+/* set function: to_h of class  artifact_type */
+static int toluaI_set_object_artifact_type_to_h(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_h = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_d of class  artifact_type */
+static int toluaI_get_object_artifact_type_to_d(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_d);
+ return 1;
+}
+
+/* set function: to_d of class  artifact_type */
+static int toluaI_set_object_artifact_type_to_d(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_d = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_a of class  artifact_type */
+static int toluaI_get_object_artifact_type_to_a(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_a);
+ return 1;
+}
+
+/* set function: to_a of class  artifact_type */
+static int toluaI_set_object_artifact_type_to_a(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_a = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ac of class  artifact_type */
+static int toluaI_get_object_artifact_type_ac(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ac);
+ return 1;
+}
+
+/* set function: ac of class  artifact_type */
+static int toluaI_set_object_artifact_type_ac(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ac = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: dd of class  artifact_type */
+static int toluaI_get_object_artifact_type_dd(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->dd);
+ return 1;
+}
+
+/* set function: dd of class  artifact_type */
+static int toluaI_set_object_artifact_type_dd(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->dd = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ds of class  artifact_type */
+static int toluaI_get_object_artifact_type_ds(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ds);
+ return 1;
+}
+
+/* set function: ds of class  artifact_type */
+static int toluaI_set_object_artifact_type_ds(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ds = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: weight of class  artifact_type */
+static int toluaI_get_object_artifact_type_weight(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->weight);
+ return 1;
+}
+
+/* set function: weight of class  artifact_type */
+static int toluaI_set_object_artifact_type_weight(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->weight = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: cost of class  artifact_type */
+static int toluaI_get_object_artifact_type_cost(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->cost);
+ return 1;
+}
+
+/* set function: cost of class  artifact_type */
+static int toluaI_set_object_artifact_type_cost(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->cost = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags1 of class  artifact_type */
+static int toluaI_get_object_artifact_type_flags1(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags1);
+ return 1;
+}
+
+/* set function: flags1 of class  artifact_type */
+static int toluaI_set_object_artifact_type_flags1(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags1 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags2 of class  artifact_type */
+static int toluaI_get_object_artifact_type_flags2(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags2);
+ return 1;
+}
+
+/* set function: flags2 of class  artifact_type */
+static int toluaI_set_object_artifact_type_flags2(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags2 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags3 of class  artifact_type */
+static int toluaI_get_object_artifact_type_flags3(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags3);
+ return 1;
+}
+
+/* set function: flags3 of class  artifact_type */
+static int toluaI_set_object_artifact_type_flags3(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags3 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags4 of class  artifact_type */
+static int toluaI_get_object_artifact_type_flags4(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags4);
+ return 1;
+}
+
+/* set function: flags4 of class  artifact_type */
+static int toluaI_set_object_artifact_type_flags4(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags4 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags5 of class  artifact_type */
+static int toluaI_get_object_artifact_type_flags5(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags5);
+ return 1;
+}
+
+/* set function: flags5 of class  artifact_type */
+static int toluaI_set_object_artifact_type_flags5(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags5 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: level of class  artifact_type */
+static int toluaI_get_object_artifact_type_level(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->level);
+ return 1;
+}
+
+/* set function: level of class  artifact_type */
+static int toluaI_set_object_artifact_type_level(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->level = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: rarity of class  artifact_type */
+static int toluaI_get_object_artifact_type_rarity(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->rarity);
+ return 1;
+}
+
+/* set function: rarity of class  artifact_type */
+static int toluaI_set_object_artifact_type_rarity(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->rarity = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: cur_num of class  artifact_type */
+static int toluaI_get_object_artifact_type_cur_num(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->cur_num);
+ return 1;
+}
+
+/* set function: cur_num of class  artifact_type */
+static int toluaI_set_object_artifact_type_cur_num(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->cur_num = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: max_num of class  artifact_type */
+static int toluaI_get_object_artifact_type_max_num(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->max_num);
+ return 1;
+}
+
+/* set function: max_num of class  artifact_type */
+static int toluaI_set_object_artifact_type_max_num(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->max_num = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: esp of class  artifact_type */
+static int toluaI_get_object_artifact_type_esp(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->esp);
+ return 1;
+}
+
+/* set function: esp of class  artifact_type */
+static int toluaI_set_object_artifact_type_esp(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->esp = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: power of class  artifact_type */
+static int toluaI_get_object_artifact_type_power(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->power);
+ return 1;
+}
+
+/* set function: power of class  artifact_type */
+static int toluaI_set_object_artifact_type_power(lua_State* tolua_S)
+{
+  artifact_type* self = (artifact_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->power = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: name of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_name(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->name);
+ return 1;
+}
+
+/* set function: name of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_name(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->name = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: text of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_text(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->text);
+ return 1;
+}
+
+/* set function: text of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_text(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->text = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: before of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_before(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->before);
+ return 1;
+}
+
+/* set function: before of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_before(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->before = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tval of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_tval(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->tval[toluaI_index]);
+ return 1;
+}
+
+/* set function: tval of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_tval(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->tval[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: min_sval of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_min_sval(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->min_sval[toluaI_index]);
+ return 1;
+}
+
+/* set function: min_sval of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_min_sval(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->min_sval[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: max_sval of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_max_sval(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->max_sval[toluaI_index]);
+ return 1;
+}
+
+/* set function: max_sval of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_max_sval(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->max_sval[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: rating of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_rating(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->rating);
+ return 1;
+}
+
+/* set function: rating of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_rating(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->rating = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: level of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_level(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->level);
+ return 1;
+}
+
+/* set function: level of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_level(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->level = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: rarity of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_rarity(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->rarity);
+ return 1;
+}
+
+/* set function: rarity of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_rarity(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->rarity = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mrarity of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_mrarity(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mrarity);
+ return 1;
+}
+
+/* set function: mrarity of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_mrarity(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mrarity = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: max_to_h of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_max_to_h(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->max_to_h);
+ return 1;
+}
+
+/* set function: max_to_h of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_max_to_h(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->max_to_h = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: max_to_d of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_max_to_d(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->max_to_d);
+ return 1;
+}
+
+/* set function: max_to_d of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_max_to_d(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->max_to_d = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: max_to_a of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_max_to_a(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->max_to_a);
+ return 1;
+}
+
+/* set function: max_to_a of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_max_to_a(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->max_to_a = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: max_pval of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_max_pval(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->max_pval);
+ return 1;
+}
+
+/* set function: max_pval of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_max_pval(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->max_pval = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: cost of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_cost(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->cost);
+ return 1;
+}
+
+/* set function: cost of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_cost(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->cost = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: rar of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_rar(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->rar[toluaI_index]);
+ return 1;
+}
+
+/* set function: rar of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_rar(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->rar[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: flags1 of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_flags1(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->flags1[toluaI_index]);
+ return 1;
+}
+
+/* set function: flags1 of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_flags1(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->flags1[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: flags2 of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_flags2(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->flags2[toluaI_index]);
+ return 1;
+}
+
+/* set function: flags2 of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_flags2(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->flags2[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: flags3 of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_flags3(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->flags3[toluaI_index]);
+ return 1;
+}
+
+/* set function: flags3 of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_flags3(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->flags3[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: flags4 of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_flags4(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->flags4[toluaI_index]);
+ return 1;
+}
+
+/* set function: flags4 of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_flags4(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->flags4[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: flags5 of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_flags5(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->flags5[toluaI_index]);
+ return 1;
+}
+
+/* set function: flags5 of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_flags5(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->flags5[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: esp of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_esp(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->esp[toluaI_index]);
+ return 1;
+}
+
+/* set function: esp of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_esp(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->esp[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: fego of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_fego(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->fego[toluaI_index]);
+ return 1;
+}
+
+/* set function: fego of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_fego(lua_State* tolua_S)
+{
+ int toluaI_index;
+  ego_item_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (ego_item_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=5)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->fego[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: power of class  ego_item_type */
+static int toluaI_get_object_ego_item_type_power(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->power);
+ return 1;
+}
+
+/* set function: power of class  ego_item_type */
+static int toluaI_set_object_ego_item_type_power(lua_State* tolua_S)
+{
+  ego_item_type* self = (ego_item_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->power = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: k_idx of class  object_type */
+static int toluaI_get_object_object_type_k_idx(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->k_idx);
+ return 1;
+}
+
+/* set function: k_idx of class  object_type */
+static int toluaI_set_object_object_type_k_idx(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->k_idx = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: iy of class  object_type */
+static int toluaI_get_object_object_type_iy(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->iy);
+ return 1;
+}
+
+/* set function: iy of class  object_type */
+static int toluaI_set_object_object_type_iy(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->iy = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ix of class  object_type */
+static int toluaI_get_object_object_type_ix(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ix);
+ return 1;
+}
+
+/* set function: ix of class  object_type */
+static int toluaI_set_object_object_type_ix(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ix = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tval of class  object_type */
+static int toluaI_get_object_object_type_tval(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tval);
+ return 1;
+}
+
+/* set function: tval of class  object_type */
+static int toluaI_set_object_object_type_tval(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tval = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sval of class  object_type */
+static int toluaI_get_object_object_type_sval(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sval);
+ return 1;
+}
+
+/* set function: sval of class  object_type */
+static int toluaI_set_object_object_type_sval(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sval = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: pval of class  object_type */
+static int toluaI_get_object_object_type_pval(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->pval);
+ return 1;
+}
+
+/* set function: pval of class  object_type */
+static int toluaI_set_object_object_type_pval(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->pval = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: pval2 of class  object_type */
+static int toluaI_get_object_object_type_pval2(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->pval2);
+ return 1;
+}
+
+/* set function: pval2 of class  object_type */
+static int toluaI_set_object_object_type_pval2(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->pval2 = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: pval3 of class  object_type */
+static int toluaI_get_object_object_type_pval3(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->pval3);
+ return 1;
+}
+
+/* set function: pval3 of class  object_type */
+static int toluaI_set_object_object_type_pval3(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->pval3 = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: discount of class  object_type */
+static int toluaI_get_object_object_type_discount(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->discount);
+ return 1;
+}
+
+/* set function: discount of class  object_type */
+static int toluaI_set_object_object_type_discount(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->discount = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: number of class  object_type */
+static int toluaI_get_object_object_type_number(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->number);
+ return 1;
+}
+
+/* set function: number of class  object_type */
+static int toluaI_set_object_object_type_number(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->number = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: weight of class  object_type */
+static int toluaI_get_object_object_type_weight(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->weight);
+ return 1;
+}
+
+/* set function: weight of class  object_type */
+static int toluaI_set_object_object_type_weight(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->weight = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: elevel of class  object_type */
+static int toluaI_get_object_object_type_elevel(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->elevel);
+ return 1;
+}
+
+/* set function: elevel of class  object_type */
+static int toluaI_set_object_object_type_elevel(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->elevel = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: exp of class  object_type */
+static int toluaI_get_object_object_type_exp(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->exp);
+ return 1;
+}
+
+/* set function: exp of class  object_type */
+static int toluaI_set_object_object_type_exp(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->exp = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: name1 of class  object_type */
+static int toluaI_get_object_object_type_name1(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->name1);
+ return 1;
+}
+
+/* set function: name1 of class  object_type */
+static int toluaI_set_object_object_type_name1(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->name1 = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: name2 of class  object_type */
+static int toluaI_get_object_object_type_name2(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->name2);
+ return 1;
+}
+
+/* set function: name2 of class  object_type */
+static int toluaI_set_object_object_type_name2(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->name2 = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: name2b of class  object_type */
+static int toluaI_get_object_object_type_name2b(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->name2b);
+ return 1;
+}
+
+/* set function: name2b of class  object_type */
+static int toluaI_set_object_object_type_name2b(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->name2b = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: xtra1 of class  object_type */
+static int toluaI_get_object_object_type_xtra1(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->xtra1);
+ return 1;
+}
+
+/* set function: xtra1 of class  object_type */
+static int toluaI_set_object_object_type_xtra1(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->xtra1 = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: xtra2 of class  object_type */
+static int toluaI_get_object_object_type_xtra2(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->xtra2);
+ return 1;
+}
+
+/* set function: xtra2 of class  object_type */
+static int toluaI_set_object_object_type_xtra2(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->xtra2 = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_h of class  object_type */
+static int toluaI_get_object_object_type_to_h(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_h);
+ return 1;
+}
+
+/* set function: to_h of class  object_type */
+static int toluaI_set_object_object_type_to_h(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_h = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_d of class  object_type */
+static int toluaI_get_object_object_type_to_d(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_d);
+ return 1;
+}
+
+/* set function: to_d of class  object_type */
+static int toluaI_set_object_object_type_to_d(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_d = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_a of class  object_type */
+static int toluaI_get_object_object_type_to_a(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_a);
+ return 1;
+}
+
+/* set function: to_a of class  object_type */
+static int toluaI_set_object_object_type_to_a(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_a = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ac of class  object_type */
+static int toluaI_get_object_object_type_ac(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ac);
+ return 1;
+}
+
+/* set function: ac of class  object_type */
+static int toluaI_set_object_object_type_ac(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ac = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: dd of class  object_type */
+static int toluaI_get_object_object_type_dd(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->dd);
+ return 1;
+}
+
+/* set function: dd of class  object_type */
+static int toluaI_set_object_object_type_dd(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->dd = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ds of class  object_type */
+static int toluaI_get_object_object_type_ds(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ds);
+ return 1;
+}
+
+/* set function: ds of class  object_type */
+static int toluaI_set_object_object_type_ds(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ds = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: timeout of class  object_type */
+static int toluaI_get_object_object_type_timeout(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->timeout);
+ return 1;
+}
+
+/* set function: timeout of class  object_type */
+static int toluaI_set_object_object_type_timeout(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->timeout = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ident of class  object_type */
+static int toluaI_get_object_object_type_ident(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ident);
+ return 1;
+}
+
+/* set function: ident of class  object_type */
+static int toluaI_set_object_object_type_ident(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ident = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: marked of class  object_type */
+static int toluaI_get_object_object_type_marked(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->marked);
+ return 1;
+}
+
+/* set function: marked of class  object_type */
+static int toluaI_set_object_object_type_marked(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->marked = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: note of class  object_type */
+static int toluaI_get_object_object_type_note(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->note);
+ return 1;
+}
+
+/* set function: note of class  object_type */
+static int toluaI_set_object_object_type_note(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->note = ((u16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: art_name of class  object_type */
+static int toluaI_get_object_object_type_art_name(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->art_name);
+ return 1;
+}
+
+/* set function: art_name of class  object_type */
+static int toluaI_set_object_object_type_art_name(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->art_name = ((u16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: art_flags1 of class  object_type */
+static int toluaI_get_object_object_type_art_flags1(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->art_flags1);
+ return 1;
+}
+
+/* set function: art_flags1 of class  object_type */
+static int toluaI_set_object_object_type_art_flags1(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->art_flags1 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: art_flags2 of class  object_type */
+static int toluaI_get_object_object_type_art_flags2(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->art_flags2);
+ return 1;
+}
+
+/* set function: art_flags2 of class  object_type */
+static int toluaI_set_object_object_type_art_flags2(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->art_flags2 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: art_flags3 of class  object_type */
+static int toluaI_get_object_object_type_art_flags3(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->art_flags3);
+ return 1;
+}
+
+/* set function: art_flags3 of class  object_type */
+static int toluaI_set_object_object_type_art_flags3(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->art_flags3 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: art_flags4 of class  object_type */
+static int toluaI_get_object_object_type_art_flags4(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->art_flags4);
+ return 1;
+}
+
+/* set function: art_flags4 of class  object_type */
+static int toluaI_set_object_object_type_art_flags4(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->art_flags4 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: art_flags5 of class  object_type */
+static int toluaI_get_object_object_type_art_flags5(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->art_flags5);
+ return 1;
+}
+
+/* set function: art_flags5 of class  object_type */
+static int toluaI_set_object_object_type_art_flags5(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->art_flags5 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: art_esp of class  object_type */
+static int toluaI_get_object_object_type_art_esp(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->art_esp);
+ return 1;
+}
+
+/* set function: art_esp of class  object_type */
+static int toluaI_set_object_object_type_art_esp(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->art_esp = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: next_o_idx of class  object_type */
+static int toluaI_get_object_object_type_next_o_idx(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->next_o_idx);
+ return 1;
+}
+
+/* set function: next_o_idx of class  object_type */
+static int toluaI_set_object_object_type_next_o_idx(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->next_o_idx = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: held_m_idx of class  object_type */
+static int toluaI_get_object_object_type_held_m_idx(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->held_m_idx);
+ return 1;
+}
+
+/* set function: held_m_idx of class  object_type */
+static int toluaI_set_object_object_type_held_m_idx(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->held_m_idx = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sense of class  object_type */
+static int toluaI_get_object_object_type_sense(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sense);
+ return 1;
+}
+
+/* set function: sense of class  object_type */
+static int toluaI_set_object_object_type_sense(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sense = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: found of class  object_type */
+static int toluaI_get_object_object_type_found(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->found);
+ return 1;
+}
+
+/* set function: found of class  object_type */
+static int toluaI_set_object_object_type_found(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->found = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: found_aux1 of class  object_type */
+static int toluaI_get_object_object_type_found_aux1(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->found_aux1);
+ return 1;
+}
+
+/* set function: found_aux1 of class  object_type */
+static int toluaI_set_object_object_type_found_aux1(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->found_aux1 = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: found_aux2 of class  object_type */
+static int toluaI_get_object_object_type_found_aux2(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->found_aux2);
+ return 1;
+}
+
+/* set function: found_aux2 of class  object_type */
+static int toluaI_set_object_object_type_found_aux2(lua_State* tolua_S)
+{
+  object_type* self = (object_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->found_aux2 = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: o_list */
+static int toluaI_get_object_o_list(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_o_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&o_list[toluaI_index],tolua_tag(tolua_S,"object_type"));
+ return 1;
+}
+
+/* set function: o_list */
+static int toluaI_set_object_o_list(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_o_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  o_list[toluaI_index] = *((object_type*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: k_info */
+static int toluaI_get_object_k_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_k_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&k_info[toluaI_index],tolua_tag(tolua_S,"object_kind"));
+ return 1;
+}
+
+/* set function: k_info */
+static int toluaI_set_object_k_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_k_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  k_info[toluaI_index] = *((object_kind*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: k_name */
+static int toluaI_get_object_k_name(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)k_name);
+ return 1;
+}
+
+/* set function: k_name */
+static int toluaI_set_object_k_name(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  k_name = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: k_text */
+static int toluaI_get_object_k_text(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)k_text);
+ return 1;
+}
+
+/* set function: k_text */
+static int toluaI_set_object_k_text(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  k_text = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: a_info */
+static int toluaI_get_object_a_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_a_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&a_info[toluaI_index],tolua_tag(tolua_S,"artifact_type"));
+ return 1;
+}
+
+/* set function: a_info */
+static int toluaI_set_object_a_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_a_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  a_info[toluaI_index] = *((artifact_type*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: a_name */
+static int toluaI_get_object_a_name(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)a_name);
+ return 1;
+}
+
+/* set function: a_name */
+static int toluaI_set_object_a_name(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  a_name = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: a_text */
+static int toluaI_get_object_a_text(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)a_text);
+ return 1;
+}
+
+/* set function: a_text */
+static int toluaI_set_object_a_text(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  a_text = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: e_head */
+static int toluaI_get_object_e_head(lua_State* tolua_S)
+{
+ tolua_pushusertype(tolua_S,(void*)e_head,tolua_tag(tolua_S,"header"));
+ return 1;
+}
+
+/* set function: e_head */
+static int toluaI_set_object_e_head(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,tolua_tag(tolua_S,"header"),0))
+ TOLUA_ERR_ASSIGN;
+  e_head = ((header*)  tolua_getusertype(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: e_info */
+static int toluaI_get_object_e_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_e_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&e_info[toluaI_index],tolua_tag(tolua_S,"ego_item_type"));
+ return 1;
+}
+
+/* set function: e_info */
+static int toluaI_set_object_e_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_e_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  e_info[toluaI_index] = *((ego_item_type*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: e_name */
+static int toluaI_get_object_e_name(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)e_name);
+ return 1;
+}
+
+/* set function: e_name */
+static int toluaI_set_object_e_name(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  e_name = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: e_text */
+static int toluaI_get_object_e_text(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)e_text);
+ return 1;
+}
+
+/* set function: e_text */
+static int toluaI_set_object_e_text(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  e_text = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* function: m_bonus */
+static int toluaI_object_m_bonus00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int max = ((int)  tolua_getnumber(tolua_S,1,0));
+  int level = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  s16b toluaI_ret = (s16b)  m_bonus(max,level);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'm_bonus'.");
+ return 0;
+}
+
+/* function: wield_slot_ideal */
+static int toluaI_object_wield_slot_ideal00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+  bool ideal = ((bool)  tolua_getnumber(tolua_S,2,0));
+ {
+  s16b toluaI_ret = (s16b)  wield_slot_ideal(o_ptr,ideal);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'wield_slot_ideal'.");
+ return 0;
+}
+
+/* function: wield_slot */
+static int toluaI_object_wield_slot00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  s16b toluaI_ret = (s16b)  wield_slot(o_ptr);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'wield_slot'.");
+ return 0;
+}
+
+/* function: object_flags */
+static int toluaI_object_object_flags00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,6,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,7,LUA_TNUMBER,1) ||
+ !tolua_isnoobj(tolua_S,8)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+  u32b f1 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+  u32b f2 = ((u32b)  tolua_getnumber(tolua_S,3,0));
+  u32b f3 = ((u32b)  tolua_getnumber(tolua_S,4,0));
+  u32b f4 = ((u32b)  tolua_getnumber(tolua_S,5,0));
+  u32b f5 = ((u32b)  tolua_getnumber(tolua_S,6,0));
+  u32b esp = ((u32b)  tolua_getnumber(tolua_S,7,0));
+ {
+  object_flags(o_ptr,&f1,&f2,&f3,&f4,&f5,&esp);
+ tolua_pushnumber(tolua_S,(long)f1);
+ tolua_pushnumber(tolua_S,(long)f2);
+ tolua_pushnumber(tolua_S,(long)f3);
+ tolua_pushnumber(tolua_S,(long)f4);
+ tolua_pushnumber(tolua_S,(long)f5);
+ tolua_pushnumber(tolua_S,(long)esp);
+ }
+ }
+ return 6;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'object_flags'.");
+ return 0;
+}
+
+/* function: lua_object_desc */
+static int toluaI_object_object_desc00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+  int pref = ((int)  tolua_getnumber(tolua_S,2,0));
+  int mode = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  char* toluaI_ret = (char*)  lua_object_desc(o_ptr,pref,mode);
+ tolua_pushstring(tolua_S,(const char*)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'object_desc'.");
+ return 0;
+}
+
+/* function: object_out_desc */
+static int toluaI_object_object_out_desc00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"FILE"),0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+  FILE* fff = ((FILE*)  tolua_getusertype(tolua_S,2,0));
+  bool trim_down = ((bool)  tolua_getnumber(tolua_S,3,0));
+  bool wait_for_it = ((bool)  tolua_getnumber(tolua_S,4,0));
+ {
+  bool toluaI_ret = (bool)  object_out_desc(o_ptr,fff,trim_down,wait_for_it);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'object_out_desc'.");
+ return 0;
+}
+
+/* function: inven_item_describe */
+static int toluaI_object_inven_item_describe00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int item = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  inven_item_describe(item);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'inven_item_describe'.");
+ return 0;
+}
+
+/* function: inven_item_increase */
+static int toluaI_object_inven_item_increase00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int item = ((int)  tolua_getnumber(tolua_S,1,0));
+  int num = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  inven_item_increase(item,num);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'inven_item_increase'.");
+ return 0;
+}
+
+/* function: inven_item_optimize */
+static int toluaI_object_inven_item_optimize00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int item = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  inven_item_optimize(item);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'inven_item_optimize'.");
+ return 0;
+}
+
+/* function: floor_item_describe */
+static int toluaI_object_floor_item_describe00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int item = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  floor_item_describe(item);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'floor_item_describe'.");
+ return 0;
+}
+
+/* function: floor_item_increase */
+static int toluaI_object_floor_item_increase00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int item = ((int)  tolua_getnumber(tolua_S,1,0));
+  int num = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  floor_item_increase(item,num);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'floor_item_increase'.");
+ return 0;
+}
+
+/* function: floor_item_optimize */
+static int toluaI_object_floor_item_optimize00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int item = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  floor_item_optimize(item);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'floor_item_optimize'.");
+ return 0;
+}
+
+/* function: delete_object_idx */
+static int toluaI_object_delete_object_idx00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int o_idx = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  delete_object_idx(o_idx);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'delete_object_idx'.");
+ return 0;
+}
+
+/* function: o_pop */
+static int toluaI_object_o_pop00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  s16b toluaI_ret = (s16b)  o_pop();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'o_pop'.");
+ return 0;
+}
+
+/* function: get_obj_num_prep */
+static int toluaI_object_get_obj_num_prep00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  errr toluaI_ret = (errr)  get_obj_num_prep();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_obj_num_prep'.");
+ return 0;
+}
+
+/* function: ident_all */
+static int toluaI_object_ident_all00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  ident_all();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'ident_all'.");
+ return 0;
+}
+
+/* function: get_obj_num */
+static int toluaI_object_get_obj_num00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int level = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  s16b toluaI_ret = (s16b)  get_obj_num(level);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_obj_num'.");
+ return 0;
+}
+
+/* function: lookup_kind */
+static int toluaI_object_lookup_kind00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int tval = ((int)  tolua_getnumber(tolua_S,1,0));
+  int sval = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  s16b toluaI_ret = (s16b)  lookup_kind(tval,sval);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'lookup_kind'.");
+ return 0;
+}
+
+/* function: object_wipe */
+static int toluaI_object_object_wipe00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  object_wipe(o_ptr);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'object_wipe'.");
+ return 0;
+}
+
+/* function: object_prep */
+static int toluaI_object_object_prep00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+  int k_idx = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  object_prep(o_ptr,k_idx);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'object_prep'.");
+ return 0;
+}
+
+/* function: object_copy */
+static int toluaI_object_object_copy00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+  object_type* j_ptr = ((object_type*)  tolua_getusertype(tolua_S,2,0));
+ {
+  object_copy(o_ptr,j_ptr);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'object_copy'.");
+ return 0;
+}
+
+/* function: inven_carry_okay */
+static int toluaI_object_inven_carry_okay00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  inven_carry_okay(o_ptr);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'inven_carry_okay'.");
+ return 0;
+}
+
+/* function: apply_magic */
+static int toluaI_object_apply_magic00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,6)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+  int lev = ((int)  tolua_getnumber(tolua_S,2,0));
+  bool okay = ((bool)  tolua_getnumber(tolua_S,3,0));
+  bool good = ((bool)  tolua_getnumber(tolua_S,4,0));
+  bool great = ((bool)  tolua_getnumber(tolua_S,5,0));
+ {
+  apply_magic(o_ptr,lev,okay,good,great);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'apply_magic'.");
+ return 0;
+}
+
+/* function: make_object */
+static int toluaI_object_make_object00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,tolua_tag(tolua_S,"obj_theme"),0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* j_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+  bool good = ((bool)  tolua_getnumber(tolua_S,2,0));
+  bool great = ((bool)  tolua_getnumber(tolua_S,3,0));
+  obj_theme theme = *((obj_theme*)  tolua_getusertype(tolua_S,4,0));
+ {
+  bool toluaI_ret = (bool)  make_object(j_ptr,good,great,theme);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'make_object'.");
+ return 0;
+}
+
+/* function: drop_near */
+static int toluaI_object_drop_near00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+  int chance = ((int)  tolua_getnumber(tolua_S,2,0));
+  int y = ((int)  tolua_getnumber(tolua_S,3,0));
+  int x = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  s16b toluaI_ret = (s16b)  drop_near(o_ptr,chance,y,x);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'drop_near'.");
+ return 0;
+}
+
+/* function: get_object */
+static int toluaI_object_get_object00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int item = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  object_type* toluaI_ret = (object_type*)  get_object(item);
+ tolua_pushusertype(tolua_S,(void*)toluaI_ret,tolua_tag(tolua_S,"object_type"));
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_object'.");
+ return 0;
+}
+
+/* function: new_object */
+static int toluaI_object_new_object00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  object_type* toluaI_ret = (object_type*)  new_object();
+ tolua_pushusertype(tolua_S,(void*)toluaI_ret,tolua_tag(tolua_S,"object_type"));
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'new_object'.");
+ return 0;
+}
+
+/* function: end_object */
+static int toluaI_object_end_object00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  end_object(o_ptr);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'end_object'.");
+ return 0;
+}
+
+/* function: get_item */
+static int toluaI_object_get_item_aux00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,3,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int cp = ((int)  tolua_getnumber(tolua_S,1,0));
+  cptr pmt = ((cptr)  tolua_getstring(tolua_S,2,0));
+  cptr str = ((cptr)  tolua_getstring(tolua_S,3,0));
+  int mode = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  bool toluaI_ret = (bool)  get_item(&cp,pmt,str,mode);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ tolua_pushnumber(tolua_S,(long)cp);
+ }
+ }
+ return 2;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_item_aux'.");
+ return 0;
+}
+
+/* function: lua_set_item_tester */
+static int toluaI_object_lua_set_item_tester00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int tval = ((int)  tolua_getnumber(tolua_S,1,0));
+  char* fct = ((char*)  tolua_getstring(tolua_S,2,0));
+ {
+  lua_set_item_tester(tval,fct);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'lua_set_item_tester'.");
+ return 0;
+}
+
+/* function: is_magestaff */
+static int toluaI_object_is_magestaff00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  is_magestaff();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'is_magestaff'.");
+ return 0;
+}
+
+/* function: identify_pack_fully */
+static int toluaI_object_identify_pack_fully00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  identify_pack_fully();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'identify_pack_fully'.");
+ return 0;
+}
+
+/* function: inven_carry */
+static int toluaI_object_inven_carry00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+  bool final = ((bool)  tolua_getnumber(tolua_S,2,0));
+ {
+  s16b toluaI_ret = (s16b)  inven_carry(o_ptr,final);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'inven_carry'.");
+ return 0;
+}
+
+/* function: calc_total_weight */
+static int toluaI_object_calc_total_weight00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  s32b toluaI_ret = (s32b)  calc_total_weight();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'calc_total_weight'.");
+ return 0;
+}
+
+/* function: get_slot */
+static int toluaI_object_get_slot00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int slot = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  int toluaI_ret = (int)  get_slot(slot);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_slot'.");
+ return 0;
+}
+
+/* function: is_blessed */
+static int toluaI_object_is_blessed00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  is_blessed(o_ptr);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'is_blessed'.");
+ return 0;
+}
+
+/* get function: sense_desc */
+static int toluaI_get_object_sense_desc(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=1000)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushstring(tolua_S,(const char*)sense_desc[toluaI_index]);
+ return 1;
+}
+
+/* set function: sense_desc */
+static int toluaI_set_object_sense_desc(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=1000)
+ tolua_error(tolua_S,"array indexing out of range.");
+  sense_desc[toluaI_index] = ((cptr)  tolua_getstring(tolua_S,3,0));
+ return 0;
+}
+
+/* function: object_pickup */
+static int toluaI_object_object_pickup00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int this_o_idx = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  object_pickup(this_o_idx);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'object_pickup'.");
+ return 0;
+}
+
+/* function: lua_is_artifact */
+static int toluaI_object_is_artifact00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  lua_is_artifact(o_ptr);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'is_artifact'.");
+ return 0;
+}
+
+/* function: lua_is_aware */
+static int toluaI_object_is_aware00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  lua_is_aware(o_ptr);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'is_aware'.");
+ return 0;
+}
+
+/* function: lua_is_known */
+static int toluaI_object_is_known00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  lua_is_known(o_ptr);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'is_known'.");
+ return 0;
+}
+
+/* function: lua_set_aware */
+static int toluaI_object_set_aware00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  lua_set_aware(o_ptr);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_aware'.");
+ return 0;
+}
+
+/* function: lua_set_known */
+static int toluaI_object_set_known00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  lua_set_known(o_ptr);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_known'.");
+ return 0;
+}
+
+/* function: value_check_aux1 */
+static int toluaI_object_value_check_aux100(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  byte toluaI_ret = (byte)  value_check_aux1(o_ptr);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'value_check_aux1'.");
+ return 0;
+}
+
+/* function: value_check_aux1_magic */
+static int toluaI_object_value_check_aux1_magic00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  byte toluaI_ret = (byte)  value_check_aux1_magic(o_ptr);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'value_check_aux1_magic'.");
+ return 0;
+}
+
+/* function: value_check_aux2 */
+static int toluaI_object_value_check_aux200(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  byte toluaI_ret = (byte)  value_check_aux2(o_ptr);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'value_check_aux2'.");
+ return 0;
+}
+
+/* function: value_check_aux2_magic */
+static int toluaI_object_value_check_aux2_magic00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  byte toluaI_ret = (byte)  value_check_aux2_magic(o_ptr);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'value_check_aux2_magic'.");
+ return 0;
+}
+
+/* function: select_sense */
+static int toluaI_object_select_sense00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+  bool ok_combat = ((bool)  tolua_getnumber(tolua_S,2,0));
+  bool ok_magic = ((bool)  tolua_getnumber(tolua_S,3,0));
+ {
+  byte toluaI_ret = (byte)  select_sense(o_ptr,ok_combat,ok_magic);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'select_sense'.");
+ return 0;
+}
+
+/* function: psychometry */
+static int toluaI_object_psychometry00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  psychometry();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'psychometry'.");
+ return 0;
+}
+
+/* function: remove_curse_object */
+static int toluaI_object_remove_curse_object00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+  bool all = ((bool)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  remove_curse_object(o_ptr,all);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'remove_curse_object'.");
+ return 0;
+}
+
+/* Open function */
+int tolua_object_open (lua_State* tolua_S)
+{
+ tolua_open(tolua_S);
+ toluaI_reg_types(tolua_S);
+ tolua_globalvar(tolua_S,"obj_forge",toluaI_get_object_obj_forge,toluaI_set_object_obj_forge);
+ tolua_globalvar(tolua_S,"theme_forge",toluaI_get_object_theme_forge,toluaI_set_object_theme_forge);
+ tolua_constant(tolua_S,NULL,"TR1_STR",TR1_STR);
+ tolua_constant(tolua_S,NULL,"TR1_INT",TR1_INT);
+ tolua_constant(tolua_S,NULL,"TR1_WIS",TR1_WIS);
+ tolua_constant(tolua_S,NULL,"TR1_DEX",TR1_DEX);
+ tolua_constant(tolua_S,NULL,"TR1_CON",TR1_CON);
+ tolua_constant(tolua_S,NULL,"TR1_CHR",TR1_CHR);
+ tolua_constant(tolua_S,NULL,"TR1_MANA",TR1_MANA);
+ tolua_constant(tolua_S,NULL,"TR1_SPELL",TR1_SPELL);
+ tolua_constant(tolua_S,NULL,"TR1_STEALTH",TR1_STEALTH);
+ tolua_constant(tolua_S,NULL,"TR1_SEARCH",TR1_SEARCH);
+ tolua_constant(tolua_S,NULL,"TR1_INFRA",TR1_INFRA);
+ tolua_constant(tolua_S,NULL,"TR1_TUNNEL",TR1_TUNNEL);
+ tolua_constant(tolua_S,NULL,"TR1_SPEED",TR1_SPEED);
+ tolua_constant(tolua_S,NULL,"TR1_BLOWS",TR1_BLOWS);
+ tolua_constant(tolua_S,NULL,"TR1_CHAOTIC",TR1_CHAOTIC);
+ tolua_constant(tolua_S,NULL,"TR1_VAMPIRIC",TR1_VAMPIRIC);
+ tolua_constant(tolua_S,NULL,"TR1_SLAY_ANIMAL",TR1_SLAY_ANIMAL);
+ tolua_constant(tolua_S,NULL,"TR1_SLAY_EVIL",TR1_SLAY_EVIL);
+ tolua_constant(tolua_S,NULL,"TR1_SLAY_UNDEAD",TR1_SLAY_UNDEAD);
+ tolua_constant(tolua_S,NULL,"TR1_SLAY_DEMON",TR1_SLAY_DEMON);
+ tolua_constant(tolua_S,NULL,"TR1_SLAY_ORC",TR1_SLAY_ORC);
+ tolua_constant(tolua_S,NULL,"TR1_SLAY_TROLL",TR1_SLAY_TROLL);
+ tolua_constant(tolua_S,NULL,"TR1_SLAY_GIANT",TR1_SLAY_GIANT);
+ tolua_constant(tolua_S,NULL,"TR1_SLAY_DRAGON",TR1_SLAY_DRAGON);
+ tolua_constant(tolua_S,NULL,"TR1_KILL_DRAGON",TR1_KILL_DRAGON);
+ tolua_constant(tolua_S,NULL,"TR1_VORPAL",TR1_VORPAL);
+ tolua_constant(tolua_S,NULL,"TR1_IMPACT",TR1_IMPACT);
+ tolua_constant(tolua_S,NULL,"TR1_BRAND_POIS",TR1_BRAND_POIS);
+ tolua_constant(tolua_S,NULL,"TR1_BRAND_ACID",TR1_BRAND_ACID);
+ tolua_constant(tolua_S,NULL,"TR1_BRAND_ELEC",TR1_BRAND_ELEC);
+ tolua_constant(tolua_S,NULL,"TR1_BRAND_FIRE",TR1_BRAND_FIRE);
+ tolua_constant(tolua_S,NULL,"TR1_BRAND_COLD",TR1_BRAND_COLD);
+ tolua_constant(tolua_S,NULL,"TR1_NULL_MASK",TR1_NULL_MASK);
+ tolua_constant(tolua_S,NULL,"TR2_SUST_STR",TR2_SUST_STR);
+ tolua_constant(tolua_S,NULL,"TR2_SUST_INT",TR2_SUST_INT);
+ tolua_constant(tolua_S,NULL,"TR2_SUST_WIS",TR2_SUST_WIS);
+ tolua_constant(tolua_S,NULL,"TR2_SUST_DEX",TR2_SUST_DEX);
+ tolua_constant(tolua_S,NULL,"TR2_SUST_CON",TR2_SUST_CON);
+ tolua_constant(tolua_S,NULL,"TR2_SUST_CHR",TR2_SUST_CHR);
+ tolua_constant(tolua_S,NULL,"TR2_INVIS",TR2_INVIS);
+ tolua_constant(tolua_S,NULL,"TR2_LIFE",TR2_LIFE);
+ tolua_constant(tolua_S,NULL,"TR2_IM_ACID",TR2_IM_ACID);
+ tolua_constant(tolua_S,NULL,"TR2_IM_ELEC",TR2_IM_ELEC);
+ tolua_constant(tolua_S,NULL,"TR2_IM_FIRE",TR2_IM_FIRE);
+ tolua_constant(tolua_S,NULL,"TR2_IM_COLD",TR2_IM_COLD);
+ tolua_constant(tolua_S,NULL,"TR2_SENS_FIRE",TR2_SENS_FIRE);
+ tolua_constant(tolua_S,NULL,"TR2_REFLECT",TR2_REFLECT);
+ tolua_constant(tolua_S,NULL,"TR2_FREE_ACT",TR2_FREE_ACT);
+ tolua_constant(tolua_S,NULL,"TR2_HOLD_LIFE",TR2_HOLD_LIFE);
+ tolua_constant(tolua_S,NULL,"TR2_RES_ACID",TR2_RES_ACID);
+ tolua_constant(tolua_S,NULL,"TR2_RES_ELEC",TR2_RES_ELEC);
+ tolua_constant(tolua_S,NULL,"TR2_RES_FIRE",TR2_RES_FIRE);
+ tolua_constant(tolua_S,NULL,"TR2_RES_COLD",TR2_RES_COLD);
+ tolua_constant(tolua_S,NULL,"TR2_RES_POIS",TR2_RES_POIS);
+ tolua_constant(tolua_S,NULL,"TR2_RES_FEAR",TR2_RES_FEAR);
+ tolua_constant(tolua_S,NULL,"TR2_RES_LITE",TR2_RES_LITE);
+ tolua_constant(tolua_S,NULL,"TR2_RES_DARK",TR2_RES_DARK);
+ tolua_constant(tolua_S,NULL,"TR2_RES_BLIND",TR2_RES_BLIND);
+ tolua_constant(tolua_S,NULL,"TR2_RES_CONF",TR2_RES_CONF);
+ tolua_constant(tolua_S,NULL,"TR2_RES_SOUND",TR2_RES_SOUND);
+ tolua_constant(tolua_S,NULL,"TR2_RES_SHARDS",TR2_RES_SHARDS);
+ tolua_constant(tolua_S,NULL,"TR2_RES_NETHER",TR2_RES_NETHER);
+ tolua_constant(tolua_S,NULL,"TR2_RES_NEXUS",TR2_RES_NEXUS);
+ tolua_constant(tolua_S,NULL,"TR2_RES_CHAOS",TR2_RES_CHAOS);
+ tolua_constant(tolua_S,NULL,"TR2_RES_DISEN",TR2_RES_DISEN);
+ tolua_constant(tolua_S,NULL,"TR2_NULL_MASK",TR2_NULL_MASK);
+ tolua_constant(tolua_S,NULL,"TR3_SH_FIRE",TR3_SH_FIRE);
+ tolua_constant(tolua_S,NULL,"TR3_SH_ELEC",TR3_SH_ELEC);
+ tolua_constant(tolua_S,NULL,"TR3_AUTO_CURSE",TR3_AUTO_CURSE);
+ tolua_constant(tolua_S,NULL,"TR3_DECAY",TR3_DECAY);
+ tolua_constant(tolua_S,NULL,"TR3_NO_TELE",TR3_NO_TELE);
+ tolua_constant(tolua_S,NULL,"TR3_NO_MAGIC",TR3_NO_MAGIC);
+ tolua_constant(tolua_S,NULL,"TR3_WRAITH",TR3_WRAITH);
+ tolua_constant(tolua_S,NULL,"TR3_TY_CURSE",TR3_TY_CURSE);
+ tolua_constant(tolua_S,NULL,"TR3_EASY_KNOW",TR3_EASY_KNOW);
+ tolua_constant(tolua_S,NULL,"TR3_HIDE_TYPE",TR3_HIDE_TYPE);
+ tolua_constant(tolua_S,NULL,"TR3_SHOW_MODS",TR3_SHOW_MODS);
+ tolua_constant(tolua_S,NULL,"TR3_INSTA_ART",TR3_INSTA_ART);
+ tolua_constant(tolua_S,NULL,"TR3_FEATHER",TR3_FEATHER);
+ tolua_constant(tolua_S,NULL,"TR3_LITE1",TR3_LITE1);
+ tolua_constant(tolua_S,NULL,"TR3_SEE_INVIS",TR3_SEE_INVIS);
+ tolua_constant(tolua_S,NULL,"TR3_NORM_ART",TR3_NORM_ART);
+ tolua_constant(tolua_S,NULL,"TR3_SLOW_DIGEST",TR3_SLOW_DIGEST);
+ tolua_constant(tolua_S,NULL,"TR3_REGEN",TR3_REGEN);
+ tolua_constant(tolua_S,NULL,"TR3_XTRA_MIGHT",TR3_XTRA_MIGHT);
+ tolua_constant(tolua_S,NULL,"TR3_XTRA_SHOTS",TR3_XTRA_SHOTS);
+ tolua_constant(tolua_S,NULL,"TR3_IGNORE_ACID",TR3_IGNORE_ACID);
+ tolua_constant(tolua_S,NULL,"TR3_IGNORE_ELEC",TR3_IGNORE_ELEC);
+ tolua_constant(tolua_S,NULL,"TR3_IGNORE_FIRE",TR3_IGNORE_FIRE);
+ tolua_constant(tolua_S,NULL,"TR3_IGNORE_COLD",TR3_IGNORE_COLD);
+ tolua_constant(tolua_S,NULL,"TR3_ACTIVATE",TR3_ACTIVATE);
+ tolua_constant(tolua_S,NULL,"TR3_DRAIN_EXP",TR3_DRAIN_EXP);
+ tolua_constant(tolua_S,NULL,"TR3_TELEPORT",TR3_TELEPORT);
+ tolua_constant(tolua_S,NULL,"TR3_AGGRAVATE",TR3_AGGRAVATE);
+ tolua_constant(tolua_S,NULL,"TR3_BLESSED",TR3_BLESSED);
+ tolua_constant(tolua_S,NULL,"TR3_CURSED",TR3_CURSED);
+ tolua_constant(tolua_S,NULL,"TR3_HEAVY_CURSE",TR3_HEAVY_CURSE);
+ tolua_constant(tolua_S,NULL,"TR3_PERMA_CURSE",TR3_PERMA_CURSE);
+ tolua_constant(tolua_S,NULL,"TR3_NULL_MASK",TR3_NULL_MASK);
+ tolua_constant(tolua_S,NULL,"TR4_NEVER_BLOW",TR4_NEVER_BLOW);
+ tolua_constant(tolua_S,NULL,"TR4_PRECOGNITION",TR4_PRECOGNITION);
+ tolua_constant(tolua_S,NULL,"TR4_BLACK_BREATH",TR4_BLACK_BREATH);
+ tolua_constant(tolua_S,NULL,"TR4_RECHARGE",TR4_RECHARGE);
+ tolua_constant(tolua_S,NULL,"TR4_FLY",TR4_FLY);
+ tolua_constant(tolua_S,NULL,"TR4_DG_CURSE",TR4_DG_CURSE);
+ tolua_constant(tolua_S,NULL,"TR4_COULD2H",TR4_COULD2H);
+ tolua_constant(tolua_S,NULL,"TR4_MUST2H",TR4_MUST2H);
+ tolua_constant(tolua_S,NULL,"TR4_LEVELS",TR4_LEVELS);
+ tolua_constant(tolua_S,NULL,"TR4_CLONE",TR4_CLONE);
+ tolua_constant(tolua_S,NULL,"TR4_SPECIAL_GENE",TR4_SPECIAL_GENE);
+ tolua_constant(tolua_S,NULL,"TR4_CLIMB",TR4_CLIMB);
+ tolua_constant(tolua_S,NULL,"TR4_FAST_CAST",TR4_FAST_CAST);
+ tolua_constant(tolua_S,NULL,"TR4_CAPACITY",TR4_CAPACITY);
+ tolua_constant(tolua_S,NULL,"TR4_CHARGING",TR4_CHARGING);
+ tolua_constant(tolua_S,NULL,"TR4_CHEAPNESS",TR4_CHEAPNESS);
+ tolua_constant(tolua_S,NULL,"TR4_FOUNTAIN",TR4_FOUNTAIN);
+ tolua_constant(tolua_S,NULL,"TR4_ANTIMAGIC_50",TR4_ANTIMAGIC_50);
+ tolua_constant(tolua_S,NULL,"TR4_ANTIMAGIC_30",TR4_ANTIMAGIC_30);
+ tolua_constant(tolua_S,NULL,"TR4_ANTIMAGIC_20",TR4_ANTIMAGIC_20);
+ tolua_constant(tolua_S,NULL,"TR4_ANTIMAGIC_10",TR4_ANTIMAGIC_10);
+ tolua_constant(tolua_S,NULL,"TR4_EASY_USE",TR4_EASY_USE);
+ tolua_constant(tolua_S,NULL,"TR4_IM_NETHER",TR4_IM_NETHER);
+ tolua_constant(tolua_S,NULL,"TR4_RECHARGED",TR4_RECHARGED);
+ tolua_constant(tolua_S,NULL,"TR4_ULTIMATE",TR4_ULTIMATE);
+ tolua_constant(tolua_S,NULL,"TR4_AUTO_ID",TR4_AUTO_ID);
+ tolua_constant(tolua_S,NULL,"TR4_LITE2",TR4_LITE2);
+ tolua_constant(tolua_S,NULL,"TR4_LITE3",TR4_LITE3);
+ tolua_constant(tolua_S,NULL,"TR4_FUEL_LITE",TR4_FUEL_LITE);
+ tolua_constant(tolua_S,NULL,"TR4_ART_EXP",TR4_ART_EXP);
+ tolua_constant(tolua_S,NULL,"TR4_CURSE_NO_DROP",TR4_CURSE_NO_DROP);
+ tolua_constant(tolua_S,NULL,"TR4_NO_RECHARGE",TR4_NO_RECHARGE);
+ tolua_constant(tolua_S,NULL,"TR4_NULL_MASK",TR4_NULL_MASK);
+ tolua_constant(tolua_S,NULL,"TR5_TEMPORARY",TR5_TEMPORARY);
+ tolua_constant(tolua_S,NULL,"TR5_DRAIN_MANA",TR5_DRAIN_MANA);
+ tolua_constant(tolua_S,NULL,"TR5_DRAIN_HP",TR5_DRAIN_HP);
+ tolua_constant(tolua_S,NULL,"TR5_KILL_DEMON",TR5_KILL_DEMON);
+ tolua_constant(tolua_S,NULL,"TR5_KILL_UNDEAD",TR5_KILL_UNDEAD);
+ tolua_constant(tolua_S,NULL,"TR5_CRIT",TR5_CRIT);
+ tolua_constant(tolua_S,NULL,"TR5_ATTR_MULTI",TR5_ATTR_MULTI);
+ tolua_constant(tolua_S,NULL,"TR5_WOUNDING",TR5_WOUNDING);
+ tolua_constant(tolua_S,NULL,"TR5_FULL_NAME",TR5_FULL_NAME);
+ tolua_constant(tolua_S,NULL,"TR5_LUCK",TR5_LUCK);
+ tolua_constant(tolua_S,NULL,"TR5_IMMOVABLE",TR5_IMMOVABLE);
+ tolua_constant(tolua_S,NULL,"TR5_SPELL_CONTAIN",TR5_SPELL_CONTAIN);
+ tolua_constant(tolua_S,NULL,"TR5_RES_MORGUL",TR5_RES_MORGUL);
+ tolua_constant(tolua_S,NULL,"TR5_ACTIVATE_NO_WIELD",TR5_ACTIVATE_NO_WIELD);
+ tolua_constant(tolua_S,NULL,"TR5_MAGIC_BREATH",TR5_MAGIC_BREATH);
+ tolua_constant(tolua_S,NULL,"TR5_WATER_BREATH",TR5_WATER_BREATH);
+ tolua_constant(tolua_S,NULL,"TR5_WIELD_CAST",TR5_WIELD_CAST);
+ tolua_constant(tolua_S,NULL,"ESP_ORC",ESP_ORC);
+ tolua_constant(tolua_S,NULL,"ESP_TROLL",ESP_TROLL);
+ tolua_constant(tolua_S,NULL,"ESP_DRAGON",ESP_DRAGON);
+ tolua_constant(tolua_S,NULL,"ESP_GIANT",ESP_GIANT);
+ tolua_constant(tolua_S,NULL,"ESP_DEMON",ESP_DEMON);
+ tolua_constant(tolua_S,NULL,"ESP_UNDEAD",ESP_UNDEAD);
+ tolua_constant(tolua_S,NULL,"ESP_EVIL",ESP_EVIL);
+ tolua_constant(tolua_S,NULL,"ESP_ANIMAL",ESP_ANIMAL);
+ tolua_constant(tolua_S,NULL,"ESP_THUNDERLORD",ESP_THUNDERLORD);
+ tolua_constant(tolua_S,NULL,"ESP_GOOD",ESP_GOOD);
+ tolua_constant(tolua_S,NULL,"ESP_NONLIVING",ESP_NONLIVING);
+ tolua_constant(tolua_S,NULL,"ESP_UNIQUE",ESP_UNIQUE);
+ tolua_constant(tolua_S,NULL,"ESP_SPIDER",ESP_SPIDER);
+ tolua_constant(tolua_S,NULL,"ESP_ALL",ESP_ALL);
+ tolua_constant(tolua_S,NULL,"USE_EQUIP",USE_EQUIP);
+ tolua_constant(tolua_S,NULL,"USE_INVEN",USE_INVEN);
+ tolua_constant(tolua_S,NULL,"USE_FLOOR",USE_FLOOR);
+ tolua_constant(tolua_S,NULL,"USE_EXTRA",USE_EXTRA);
+ tolua_constant(tolua_S,NULL,"INVEN_WIELD",INVEN_WIELD);
+ tolua_constant(tolua_S,NULL,"INVEN_BOW",INVEN_BOW);
+ tolua_constant(tolua_S,NULL,"INVEN_RING",INVEN_RING);
+ tolua_constant(tolua_S,NULL,"INVEN_NECK",INVEN_NECK);
+ tolua_constant(tolua_S,NULL,"INVEN_LITE",INVEN_LITE);
+ tolua_constant(tolua_S,NULL,"INVEN_BODY",INVEN_BODY);
+ tolua_constant(tolua_S,NULL,"INVEN_OUTER",INVEN_OUTER);
+ tolua_constant(tolua_S,NULL,"INVEN_ARM",INVEN_ARM);
+ tolua_constant(tolua_S,NULL,"INVEN_HEAD",INVEN_HEAD);
+ tolua_constant(tolua_S,NULL,"INVEN_HANDS",INVEN_HANDS);
+ tolua_constant(tolua_S,NULL,"INVEN_FEET",INVEN_FEET);
+ tolua_constant(tolua_S,NULL,"INVEN_CARRY",INVEN_CARRY);
+ tolua_constant(tolua_S,NULL,"INVEN_AMMO",INVEN_AMMO);
+ tolua_constant(tolua_S,NULL,"INVEN_TOOL",INVEN_TOOL);
+ tolua_constant(tolua_S,NULL,"INVEN_TOTAL",INVEN_TOTAL);
+ tolua_constant(tolua_S,NULL,"INVEN_EQ",INVEN_EQ);
+ tolua_constant(tolua_S,NULL,"TV_SKELETON",TV_SKELETON);
+ tolua_constant(tolua_S,NULL,"TV_BOTTLE",TV_BOTTLE);
+ tolua_constant(tolua_S,NULL,"TV_BATERIE",TV_BATERIE);
+ tolua_constant(tolua_S,NULL,"TV_SPIKE",TV_SPIKE);
+ tolua_constant(tolua_S,NULL,"TV_MSTAFF",TV_MSTAFF);
+ tolua_constant(tolua_S,NULL,"TV_CHEST",TV_CHEST);
+ tolua_constant(tolua_S,NULL,"TV_PARCHMENT",TV_PARCHMENT);
+ tolua_constant(tolua_S,NULL,"TV_PARCHEMENT",TV_PARCHEMENT);
+ tolua_constant(tolua_S,NULL,"TV_CORPSE",TV_CORPSE);
+ tolua_constant(tolua_S,NULL,"TV_EGG",TV_EGG);
+ tolua_constant(tolua_S,NULL,"TV_JUNK",TV_JUNK);
+ tolua_constant(tolua_S,NULL,"TV_TOOL",TV_TOOL);
+ tolua_constant(tolua_S,NULL,"TV_INSTRUMENT",TV_INSTRUMENT);
+ tolua_constant(tolua_S,NULL,"TV_BOOMERANG",TV_BOOMERANG);
+ tolua_constant(tolua_S,NULL,"TV_SHOT",TV_SHOT);
+ tolua_constant(tolua_S,NULL,"TV_ARROW",TV_ARROW);
+ tolua_constant(tolua_S,NULL,"TV_BOLT",TV_BOLT);
+ tolua_constant(tolua_S,NULL,"TV_BOW",TV_BOW);
+ tolua_constant(tolua_S,NULL,"TV_DIGGING",TV_DIGGING);
+ tolua_constant(tolua_S,NULL,"TV_HAFTED",TV_HAFTED);
+ tolua_constant(tolua_S,NULL,"TV_POLEARM",TV_POLEARM);
+ tolua_constant(tolua_S,NULL,"TV_SWORD",TV_SWORD);
+ tolua_constant(tolua_S,NULL,"TV_AXE",TV_AXE);
+ tolua_constant(tolua_S,NULL,"TV_BOOTS",TV_BOOTS);
+ tolua_constant(tolua_S,NULL,"TV_GLOVES",TV_GLOVES);
+ tolua_constant(tolua_S,NULL,"TV_HELM",TV_HELM);
+ tolua_constant(tolua_S,NULL,"TV_CROWN",TV_CROWN);
+ tolua_constant(tolua_S,NULL,"TV_SHIELD",TV_SHIELD);
+ tolua_constant(tolua_S,NULL,"TV_CLOAK",TV_CLOAK);
+ tolua_constant(tolua_S,NULL,"TV_SOFT_ARMOR",TV_SOFT_ARMOR);
+ tolua_constant(tolua_S,NULL,"TV_HARD_ARMOR",TV_HARD_ARMOR);
+ tolua_constant(tolua_S,NULL,"TV_DRAG_ARMOR",TV_DRAG_ARMOR);
+ tolua_constant(tolua_S,NULL,"TV_LITE",TV_LITE);
+ tolua_constant(tolua_S,NULL,"TV_AMULET",TV_AMULET);
+ tolua_constant(tolua_S,NULL,"TV_RING",TV_RING);
+ tolua_constant(tolua_S,NULL,"TV_TRAPKIT",TV_TRAPKIT);
+ tolua_constant(tolua_S,NULL,"TV_TOTEM",TV_TOTEM);
+ tolua_constant(tolua_S,NULL,"TV_STAFF",TV_STAFF);
+ tolua_constant(tolua_S,NULL,"TV_WAND",TV_WAND);
+ tolua_constant(tolua_S,NULL,"TV_ROD",TV_ROD);
+ tolua_constant(tolua_S,NULL,"TV_ROD_MAIN",TV_ROD_MAIN);
+ tolua_constant(tolua_S,NULL,"TV_SCROLL",TV_SCROLL);
+ tolua_constant(tolua_S,NULL,"TV_POTION",TV_POTION);
+ tolua_constant(tolua_S,NULL,"TV_POTION2",TV_POTION2);
+ tolua_constant(tolua_S,NULL,"TV_FLASK",TV_FLASK);
+ tolua_constant(tolua_S,NULL,"TV_FOOD",TV_FOOD);
+ tolua_constant(tolua_S,NULL,"TV_HYPNOS",TV_HYPNOS);
+ tolua_constant(tolua_S,NULL,"TV_GOLD",TV_GOLD);
+ tolua_constant(tolua_S,NULL,"TV_RANDART",TV_RANDART);
+ tolua_constant(tolua_S,NULL,"TV_RUNE1",TV_RUNE1);
+ tolua_constant(tolua_S,NULL,"TV_RUNE2",TV_RUNE2);
+ tolua_constant(tolua_S,NULL,"TV_BOOK",TV_BOOK);
+ tolua_constant(tolua_S,NULL,"TV_SYMBIOTIC_BOOK",TV_SYMBIOTIC_BOOK);
+ tolua_constant(tolua_S,NULL,"TV_MUSIC_BOOK",TV_MUSIC_BOOK);
+ tolua_constant(tolua_S,NULL,"TV_DRUID_BOOK",TV_DRUID_BOOK);
+ tolua_constant(tolua_S,NULL,"TV_DAEMON_BOOK",TV_DAEMON_BOOK);
+ tolua_constant(tolua_S,NULL,"SV_TOOL_CLIMB",SV_TOOL_CLIMB);
+ tolua_constant(tolua_S,NULL,"SV_PORTABLE_HOLE",SV_PORTABLE_HOLE);
+ tolua_constant(tolua_S,NULL,"SV_MSTAFF",SV_MSTAFF);
+ tolua_constant(tolua_S,NULL,"SV_AMMO_LIGHT",SV_AMMO_LIGHT);
+ tolua_constant(tolua_S,NULL,"SV_AMMO_NORMAL",SV_AMMO_NORMAL);
+ tolua_constant(tolua_S,NULL,"SV_AMMO_HEAVY",SV_AMMO_HEAVY);
+ tolua_constant(tolua_S,NULL,"SV_DRUM",SV_DRUM);
+ tolua_constant(tolua_S,NULL,"SV_HARP",SV_HARP);
+ tolua_constant(tolua_S,NULL,"SV_HORN",SV_HORN);
+ tolua_constant(tolua_S,NULL,"SV_TRAPKIT_SLING",SV_TRAPKIT_SLING);
+ tolua_constant(tolua_S,NULL,"SV_TRAPKIT_BOW",SV_TRAPKIT_BOW);
+ tolua_constant(tolua_S,NULL,"SV_TRAPKIT_XBOW",SV_TRAPKIT_XBOW);
+ tolua_constant(tolua_S,NULL,"SV_TRAPKIT_POTION",SV_TRAPKIT_POTION);
+ tolua_constant(tolua_S,NULL,"SV_TRAPKIT_SCROLL",SV_TRAPKIT_SCROLL);
+ tolua_constant(tolua_S,NULL,"SV_TRAPKIT_DEVICE",SV_TRAPKIT_DEVICE);
+ tolua_constant(tolua_S,NULL,"SV_BOOM_S_WOOD",SV_BOOM_S_WOOD);
+ tolua_constant(tolua_S,NULL,"SV_BOOM_WOOD",SV_BOOM_WOOD);
+ tolua_constant(tolua_S,NULL,"SV_BOOM_S_METAL",SV_BOOM_S_METAL);
+ tolua_constant(tolua_S,NULL,"SV_BOOM_METAL",SV_BOOM_METAL);
+ tolua_constant(tolua_S,NULL,"SV_SLING",SV_SLING);
+ tolua_constant(tolua_S,NULL,"SV_SHORT_BOW",SV_SHORT_BOW);
+ tolua_constant(tolua_S,NULL,"SV_LONG_BOW",SV_LONG_BOW);
+ tolua_constant(tolua_S,NULL,"SV_LIGHT_XBOW",SV_LIGHT_XBOW);
+ tolua_constant(tolua_S,NULL,"SV_HEAVY_XBOW",SV_HEAVY_XBOW);
+ tolua_constant(tolua_S,NULL,"SV_SHOVEL",SV_SHOVEL);
+ tolua_constant(tolua_S,NULL,"SV_GNOMISH_SHOVEL",SV_GNOMISH_SHOVEL);
+ tolua_constant(tolua_S,NULL,"SV_DWARVEN_SHOVEL",SV_DWARVEN_SHOVEL);
+ tolua_constant(tolua_S,NULL,"SV_PICK",SV_PICK);
+ tolua_constant(tolua_S,NULL,"SV_ORCISH_PICK",SV_ORCISH_PICK);
+ tolua_constant(tolua_S,NULL,"SV_DWARVEN_PICK",SV_DWARVEN_PICK);
+ tolua_constant(tolua_S,NULL,"SV_MATTOCK",SV_MATTOCK);
+ tolua_constant(tolua_S,NULL,"SV_CLUB",SV_CLUB);
+ tolua_constant(tolua_S,NULL,"SV_WHIP",SV_WHIP);
+ tolua_constant(tolua_S,NULL,"SV_QUARTERSTAFF",SV_QUARTERSTAFF);
+ tolua_constant(tolua_S,NULL,"SV_NUNCHAKU",SV_NUNCHAKU);
+ tolua_constant(tolua_S,NULL,"SV_MACE",SV_MACE);
+ tolua_constant(tolua_S,NULL,"SV_BALL_AND_CHAIN",SV_BALL_AND_CHAIN);
+ tolua_constant(tolua_S,NULL,"SV_WAR_HAMMER",SV_WAR_HAMMER);
+ tolua_constant(tolua_S,NULL,"SV_LUCERN_HAMMER",SV_LUCERN_HAMMER);
+ tolua_constant(tolua_S,NULL,"SV_THREE_PIECE_ROD",SV_THREE_PIECE_ROD);
+ tolua_constant(tolua_S,NULL,"SV_MORNING_STAR",SV_MORNING_STAR);
+ tolua_constant(tolua_S,NULL,"SV_FLAIL",SV_FLAIL);
+ tolua_constant(tolua_S,NULL,"SV_LEAD_FILLED_MACE",SV_LEAD_FILLED_MACE);
+ tolua_constant(tolua_S,NULL,"SV_TWO_HANDED_FLAIL",SV_TWO_HANDED_FLAIL);
+ tolua_constant(tolua_S,NULL,"SV_GREAT_HAMMER",SV_GREAT_HAMMER);
+ tolua_constant(tolua_S,NULL,"SV_MACE_OF_DISRUPTION",SV_MACE_OF_DISRUPTION);
+ tolua_constant(tolua_S,NULL,"SV_GROND",SV_GROND);
+ tolua_constant(tolua_S,NULL,"SV_HATCHET",SV_HATCHET);
+ tolua_constant(tolua_S,NULL,"SV_CLEAVER",SV_CLEAVER);
+ tolua_constant(tolua_S,NULL,"SV_LIGHT_WAR_AXE",SV_LIGHT_WAR_AXE);
+ tolua_constant(tolua_S,NULL,"SV_BEAKED_AXE",SV_BEAKED_AXE);
+ tolua_constant(tolua_S,NULL,"SV_BROAD_AXE",SV_BROAD_AXE);
+ tolua_constant(tolua_S,NULL,"SV_BATTLE_AXE",SV_BATTLE_AXE);
+ tolua_constant(tolua_S,NULL,"SV_GREAT_AXE",SV_GREAT_AXE);
+ tolua_constant(tolua_S,NULL,"SV_LOCHABER_AXE",SV_LOCHABER_AXE);
+ tolua_constant(tolua_S,NULL,"SV_SLAUGHTER_AXE",SV_SLAUGHTER_AXE);
+ tolua_constant(tolua_S,NULL,"SV_SPEAR",SV_SPEAR);
+ tolua_constant(tolua_S,NULL,"SV_SICKLE",SV_SICKLE);
+ tolua_constant(tolua_S,NULL,"SV_AWL_PIKE",SV_AWL_PIKE);
+ tolua_constant(tolua_S,NULL,"SV_TRIDENT",SV_TRIDENT);
+ tolua_constant(tolua_S,NULL,"SV_FAUCHARD",SV_FAUCHARD);
+ tolua_constant(tolua_S,NULL,"SV_BROAD_SPEAR",SV_BROAD_SPEAR);
+ tolua_constant(tolua_S,NULL,"SV_PIKE",SV_PIKE);
+ tolua_constant(tolua_S,NULL,"SV_GLAIVE",SV_GLAIVE);
+ tolua_constant(tolua_S,NULL,"SV_HALBERD",SV_HALBERD);
+ tolua_constant(tolua_S,NULL,"SV_GUISARME",SV_GUISARME);
+ tolua_constant(tolua_S,NULL,"SV_SCYTHE",SV_SCYTHE);
+ tolua_constant(tolua_S,NULL,"SV_LANCE",SV_LANCE);
+ tolua_constant(tolua_S,NULL,"SV_TRIFURCATE_SPEAR",SV_TRIFURCATE_SPEAR);
+ tolua_constant(tolua_S,NULL,"SV_HEAVY_LANCE",SV_HEAVY_LANCE);
+ tolua_constant(tolua_S,NULL,"SV_SCYTHE_OF_SLICING",SV_SCYTHE_OF_SLICING);
+ tolua_constant(tolua_S,NULL,"SV_BROKEN_DAGGER",SV_BROKEN_DAGGER);
+ tolua_constant(tolua_S,NULL,"SV_BROKEN_SWORD",SV_BROKEN_SWORD);
+ tolua_constant(tolua_S,NULL,"SV_DAGGER",SV_DAGGER);
+ tolua_constant(tolua_S,NULL,"SV_MAIN_GAUCHE",SV_MAIN_GAUCHE);
+ tolua_constant(tolua_S,NULL,"SV_RAPIER",SV_RAPIER);
+ tolua_constant(tolua_S,NULL,"SV_SMALL_SWORD",SV_SMALL_SWORD);
+ tolua_constant(tolua_S,NULL,"SV_BASILLARD",SV_BASILLARD);
+ tolua_constant(tolua_S,NULL,"SV_SHORT_SWORD",SV_SHORT_SWORD);
+ tolua_constant(tolua_S,NULL,"SV_SABRE",SV_SABRE);
+ tolua_constant(tolua_S,NULL,"SV_CUTLASS",SV_CUTLASS);
+ tolua_constant(tolua_S,NULL,"SV_KHOPESH",SV_KHOPESH);
+ tolua_constant(tolua_S,NULL,"SV_TULWAR",SV_TULWAR);
+ tolua_constant(tolua_S,NULL,"SV_BROAD_SWORD",SV_BROAD_SWORD);
+ tolua_constant(tolua_S,NULL,"SV_LONG_SWORD",SV_LONG_SWORD);
+ tolua_constant(tolua_S,NULL,"SV_SCIMITAR",SV_SCIMITAR);
+ tolua_constant(tolua_S,NULL,"SV_KATANA",SV_KATANA);
+ tolua_constant(tolua_S,NULL,"SV_BASTARD_SWORD",SV_BASTARD_SWORD);
+ tolua_constant(tolua_S,NULL,"SV_GREAT_SCIMITAR",SV_GREAT_SCIMITAR);
+ tolua_constant(tolua_S,NULL,"SV_CLAYMORE",SV_CLAYMORE);
+ tolua_constant(tolua_S,NULL,"SV_ESPADON",SV_ESPADON);
+ tolua_constant(tolua_S,NULL,"SV_TWO_HANDED_SWORD",SV_TWO_HANDED_SWORD);
+ tolua_constant(tolua_S,NULL,"SV_FLAMBERGE",SV_FLAMBERGE);
+ tolua_constant(tolua_S,NULL,"SV_EXECUTIONERS_SWORD",SV_EXECUTIONERS_SWORD);
+ tolua_constant(tolua_S,NULL,"SV_ZWEIHANDER",SV_ZWEIHANDER);
+ tolua_constant(tolua_S,NULL,"SV_BLADE_OF_CHAOS",SV_BLADE_OF_CHAOS);
+ tolua_constant(tolua_S,NULL,"SV_BLUESTEEL_BLADE",SV_BLUESTEEL_BLADE);
+ tolua_constant(tolua_S,NULL,"SV_SHADOW_BLADE",SV_SHADOW_BLADE);
+ tolua_constant(tolua_S,NULL,"SV_DARK_SWORD",SV_DARK_SWORD);
+ tolua_constant(tolua_S,NULL,"SV_SMALL_LEATHER_SHIELD",SV_SMALL_LEATHER_SHIELD);
+ tolua_constant(tolua_S,NULL,"SV_SMALL_METAL_SHIELD",SV_SMALL_METAL_SHIELD);
+ tolua_constant(tolua_S,NULL,"SV_LARGE_LEATHER_SHIELD",SV_LARGE_LEATHER_SHIELD);
+ tolua_constant(tolua_S,NULL,"SV_LARGE_METAL_SHIELD",SV_LARGE_METAL_SHIELD);
+ tolua_constant(tolua_S,NULL,"SV_DRAGON_SHIELD",SV_DRAGON_SHIELD);
+ tolua_constant(tolua_S,NULL,"SV_SHIELD_OF_DEFLECTION",SV_SHIELD_OF_DEFLECTION);
+ tolua_constant(tolua_S,NULL,"SV_HARD_LEATHER_CAP",SV_HARD_LEATHER_CAP);
+ tolua_constant(tolua_S,NULL,"SV_METAL_CAP",SV_METAL_CAP);
+ tolua_constant(tolua_S,NULL,"SV_IRON_HELM",SV_IRON_HELM);
+ tolua_constant(tolua_S,NULL,"SV_STEEL_HELM",SV_STEEL_HELM);
+ tolua_constant(tolua_S,NULL,"SV_DRAGON_HELM",SV_DRAGON_HELM);
+ tolua_constant(tolua_S,NULL,"SV_IRON_CROWN",SV_IRON_CROWN);
+ tolua_constant(tolua_S,NULL,"SV_GOLDEN_CROWN",SV_GOLDEN_CROWN);
+ tolua_constant(tolua_S,NULL,"SV_JEWELED_CROWN",SV_JEWELED_CROWN);
+ tolua_constant(tolua_S,NULL,"SV_MORGOTH",SV_MORGOTH);
+ tolua_constant(tolua_S,NULL,"SV_PAIR_OF_SOFT_LEATHER_BOOTS",SV_PAIR_OF_SOFT_LEATHER_BOOTS);
+ tolua_constant(tolua_S,NULL,"SV_PAIR_OF_HARD_LEATHER_BOOTS",SV_PAIR_OF_HARD_LEATHER_BOOTS);
+ tolua_constant(tolua_S,NULL,"SV_PAIR_OF_METAL_SHOD_BOOTS",SV_PAIR_OF_METAL_SHOD_BOOTS);
+ tolua_constant(tolua_S,NULL,"SV_CLOAK",SV_CLOAK);
+ tolua_constant(tolua_S,NULL,"SV_ELVEN_CLOAK",SV_ELVEN_CLOAK);
+ tolua_constant(tolua_S,NULL,"SV_FUR_CLOAK",SV_FUR_CLOAK);
+ tolua_constant(tolua_S,NULL,"SV_SHADOW_CLOAK",SV_SHADOW_CLOAK);
+ tolua_constant(tolua_S,NULL,"SV_SET_OF_LEATHER_GLOVES",SV_SET_OF_LEATHER_GLOVES);
+ tolua_constant(tolua_S,NULL,"SV_SET_OF_GAUNTLETS",SV_SET_OF_GAUNTLETS);
+ tolua_constant(tolua_S,NULL,"SV_SET_OF_CESTI",SV_SET_OF_CESTI);
+ tolua_constant(tolua_S,NULL,"SV_FILTHY_RAG",SV_FILTHY_RAG);
+ tolua_constant(tolua_S,NULL,"SV_ROBE",SV_ROBE);
+ tolua_constant(tolua_S,NULL,"SV_PAPER_ARMOR",SV_PAPER_ARMOR);
+ tolua_constant(tolua_S,NULL,"SV_SOFT_LEATHER_ARMOR",SV_SOFT_LEATHER_ARMOR);
+ tolua_constant(tolua_S,NULL,"SV_SOFT_STUDDED_LEATHER",SV_SOFT_STUDDED_LEATHER);
+ tolua_constant(tolua_S,NULL,"SV_HARD_LEATHER_ARMOR",SV_HARD_LEATHER_ARMOR);
+ tolua_constant(tolua_S,NULL,"SV_HARD_STUDDED_LEATHER",SV_HARD_STUDDED_LEATHER);
+ tolua_constant(tolua_S,NULL,"SV_RHINO_HIDE_ARMOR",SV_RHINO_HIDE_ARMOR);
+ tolua_constant(tolua_S,NULL,"SV_CORD_ARMOR",SV_CORD_ARMOR);
+ tolua_constant(tolua_S,NULL,"SV_PADDED_ARMOR",SV_PADDED_ARMOR);
+ tolua_constant(tolua_S,NULL,"SV_LEATHER_SCALE_MAIL",SV_LEATHER_SCALE_MAIL);
+ tolua_constant(tolua_S,NULL,"SV_LEATHER_JACK",SV_LEATHER_JACK);
+ tolua_constant(tolua_S,NULL,"SV_STONE_AND_HIDE_ARMOR",SV_STONE_AND_HIDE_ARMOR);
+ tolua_constant(tolua_S,NULL,"SV_THUNDERLORD_SUIT",SV_THUNDERLORD_SUIT);
+ tolua_constant(tolua_S,NULL,"SV_RUSTY_CHAIN_MAIL",SV_RUSTY_CHAIN_MAIL);
+ tolua_constant(tolua_S,NULL,"SV_RING_MAIL",SV_RING_MAIL);
+ tolua_constant(tolua_S,NULL,"SV_METAL_SCALE_MAIL",SV_METAL_SCALE_MAIL);
+ tolua_constant(tolua_S,NULL,"SV_CHAIN_MAIL",SV_CHAIN_MAIL);
+ tolua_constant(tolua_S,NULL,"SV_DOUBLE_RING_MAIL",SV_DOUBLE_RING_MAIL);
+ tolua_constant(tolua_S,NULL,"SV_AUGMENTED_CHAIN_MAIL",SV_AUGMENTED_CHAIN_MAIL);
+ tolua_constant(tolua_S,NULL,"SV_DOUBLE_CHAIN_MAIL",SV_DOUBLE_CHAIN_MAIL);
+ tolua_constant(tolua_S,NULL,"SV_BAR_CHAIN_MAIL",SV_BAR_CHAIN_MAIL);
+ tolua_constant(tolua_S,NULL,"SV_METAL_BRIGANDINE_ARMOUR",SV_METAL_BRIGANDINE_ARMOUR);
+ tolua_constant(tolua_S,NULL,"SV_SPLINT_MAIL",SV_SPLINT_MAIL);
+ tolua_constant(tolua_S,NULL,"SV_PARTIAL_PLATE_ARMOUR",SV_PARTIAL_PLATE_ARMOUR);
+ tolua_constant(tolua_S,NULL,"SV_METAL_LAMELLAR_ARMOUR",SV_METAL_LAMELLAR_ARMOUR);
+ tolua_constant(tolua_S,NULL,"SV_FULL_PLATE_ARMOUR",SV_FULL_PLATE_ARMOUR);
+ tolua_constant(tolua_S,NULL,"SV_RIBBED_PLATE_ARMOUR",SV_RIBBED_PLATE_ARMOUR);
+ tolua_constant(tolua_S,NULL,"SV_MITHRIL_CHAIN_MAIL",SV_MITHRIL_CHAIN_MAIL);
+ tolua_constant(tolua_S,NULL,"SV_MITHRIL_PLATE_MAIL",SV_MITHRIL_PLATE_MAIL);
+ tolua_constant(tolua_S,NULL,"SV_ADAMANTITE_PLATE_MAIL",SV_ADAMANTITE_PLATE_MAIL);
+ tolua_constant(tolua_S,NULL,"SV_DRAGON_BLACK",SV_DRAGON_BLACK);
+ tolua_constant(tolua_S,NULL,"SV_DRAGON_BLUE",SV_DRAGON_BLUE);
+ tolua_constant(tolua_S,NULL,"SV_DRAGON_WHITE",SV_DRAGON_WHITE);
+ tolua_constant(tolua_S,NULL,"SV_DRAGON_RED",SV_DRAGON_RED);
+ tolua_constant(tolua_S,NULL,"SV_DRAGON_GREEN",SV_DRAGON_GREEN);
+ tolua_constant(tolua_S,NULL,"SV_DRAGON_MULTIHUED",SV_DRAGON_MULTIHUED);
+ tolua_constant(tolua_S,NULL,"SV_DRAGON_SHINING",SV_DRAGON_SHINING);
+ tolua_constant(tolua_S,NULL,"SV_DRAGON_LAW",SV_DRAGON_LAW);
+ tolua_constant(tolua_S,NULL,"SV_DRAGON_BRONZE",SV_DRAGON_BRONZE);
+ tolua_constant(tolua_S,NULL,"SV_DRAGON_GOLD",SV_DRAGON_GOLD);
+ tolua_constant(tolua_S,NULL,"SV_DRAGON_CHAOS",SV_DRAGON_CHAOS);
+ tolua_constant(tolua_S,NULL,"SV_DRAGON_BALANCE",SV_DRAGON_BALANCE);
+ tolua_constant(tolua_S,NULL,"SV_DRAGON_POWER",SV_DRAGON_POWER);
+ tolua_constant(tolua_S,NULL,"SV_LITE_TORCH",SV_LITE_TORCH);
+ tolua_constant(tolua_S,NULL,"SV_LITE_LANTERN",SV_LITE_LANTERN);
+ tolua_constant(tolua_S,NULL,"SV_LITE_TORCH_EVER",SV_LITE_TORCH_EVER);
+ tolua_constant(tolua_S,NULL,"SV_LITE_DWARVEN",SV_LITE_DWARVEN);
+ tolua_constant(tolua_S,NULL,"SV_LITE_FEANORIAN",SV_LITE_FEANORIAN);
+ tolua_constant(tolua_S,NULL,"SV_LITE_GALADRIEL",SV_LITE_GALADRIEL);
+ tolua_constant(tolua_S,NULL,"SV_LITE_ELENDIL",SV_LITE_ELENDIL);
+ tolua_constant(tolua_S,NULL,"SV_LITE_THRAIN",SV_LITE_THRAIN);
+ tolua_constant(tolua_S,NULL,"SV_LITE_UNDEATH",SV_LITE_UNDEATH);
+ tolua_constant(tolua_S,NULL,"SV_LITE_PALANTIR",SV_LITE_PALANTIR);
+ tolua_constant(tolua_S,NULL,"SV_ANCHOR_SPACETIME",SV_ANCHOR_SPACETIME);
+ tolua_constant(tolua_S,NULL,"SV_STONE_LORE",SV_STONE_LORE);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_DOOM",SV_AMULET_DOOM);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_TELEPORT",SV_AMULET_TELEPORT);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_ADORNMENT",SV_AMULET_ADORNMENT);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_SLOW_DIGEST",SV_AMULET_SLOW_DIGEST);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_RESIST_ACID",SV_AMULET_RESIST_ACID);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_SEARCHING",SV_AMULET_SEARCHING);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_BRILLANCE",SV_AMULET_BRILLANCE);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_CHARISMA",SV_AMULET_CHARISMA);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_THE_MAGI",SV_AMULET_THE_MAGI);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_REFLECTION",SV_AMULET_REFLECTION);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_CARLAMMAS",SV_AMULET_CARLAMMAS);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_INGWE",SV_AMULET_INGWE);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_DWARVES",SV_AMULET_DWARVES);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_NO_MAGIC",SV_AMULET_NO_MAGIC);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_NO_TELE",SV_AMULET_NO_TELE);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_RESISTANCE",SV_AMULET_RESISTANCE);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_NOTHING",SV_AMULET_NOTHING);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_SERPENT",SV_AMULET_SERPENT);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_TORIS_MEJISTOS",SV_AMULET_TORIS_MEJISTOS);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_TRICKERY",SV_AMULET_TRICKERY);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_DEVOTION",SV_AMULET_DEVOTION);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_WEAPONMASTERY",SV_AMULET_WEAPONMASTERY);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_WISDOM",SV_AMULET_WISDOM);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_INFRA",SV_AMULET_INFRA);
+ tolua_constant(tolua_S,NULL,"SV_AMULET_SPELL",SV_AMULET_SPELL);
+ tolua_constant(tolua_S,NULL,"SV_RING_WOE",SV_RING_WOE);
+ tolua_constant(tolua_S,NULL,"SV_RING_AGGRAVATION",SV_RING_AGGRAVATION);
+ tolua_constant(tolua_S,NULL,"SV_RING_WEAKNESS",SV_RING_WEAKNESS);
+ tolua_constant(tolua_S,NULL,"SV_RING_STUPIDITY",SV_RING_STUPIDITY);
+ tolua_constant(tolua_S,NULL,"SV_RING_TELEPORTATION",SV_RING_TELEPORTATION);
+ tolua_constant(tolua_S,NULL,"SV_RING_SPECIAL",SV_RING_SPECIAL);
+ tolua_constant(tolua_S,NULL,"SV_RING_SLOW_DIGESTION",SV_RING_SLOW_DIGESTION);
+ tolua_constant(tolua_S,NULL,"SV_RING_FEATHER_FALL",SV_RING_FEATHER_FALL);
+ tolua_constant(tolua_S,NULL,"SV_RING_RESIST_FIRE",SV_RING_RESIST_FIRE);
+ tolua_constant(tolua_S,NULL,"SV_RING_RESIST_COLD",SV_RING_RESIST_COLD);
+ tolua_constant(tolua_S,NULL,"SV_RING_SUSTAIN_STR",SV_RING_SUSTAIN_STR);
+ tolua_constant(tolua_S,NULL,"SV_RING_SUSTAIN_INT",SV_RING_SUSTAIN_INT);
+ tolua_constant(tolua_S,NULL,"SV_RING_SUSTAIN_WIS",SV_RING_SUSTAIN_WIS);
+ tolua_constant(tolua_S,NULL,"SV_RING_SUSTAIN_DEX",SV_RING_SUSTAIN_DEX);
+ tolua_constant(tolua_S,NULL,"SV_RING_SUSTAIN_CON",SV_RING_SUSTAIN_CON);
+ tolua_constant(tolua_S,NULL,"SV_RING_SUSTAIN_CHR",SV_RING_SUSTAIN_CHR);
+ tolua_constant(tolua_S,NULL,"SV_RING_PROTECTION",SV_RING_PROTECTION);
+ tolua_constant(tolua_S,NULL,"SV_RING_ACID",SV_RING_ACID);
+ tolua_constant(tolua_S,NULL,"SV_RING_FLAMES",SV_RING_FLAMES);
+ tolua_constant(tolua_S,NULL,"SV_RING_ICE",SV_RING_ICE);
+ tolua_constant(tolua_S,NULL,"SV_RING_RESIST_POIS",SV_RING_RESIST_POIS);
+ tolua_constant(tolua_S,NULL,"SV_RING_FREE_ACTION",SV_RING_FREE_ACTION);
+ tolua_constant(tolua_S,NULL,"SV_RING_SEE_INVIS",SV_RING_SEE_INVIS);
+ tolua_constant(tolua_S,NULL,"SV_RING_SEARCHING",SV_RING_SEARCHING);
+ tolua_constant(tolua_S,NULL,"SV_RING_STR",SV_RING_STR);
+ tolua_constant(tolua_S,NULL,"SV_RING_INT",SV_RING_INT);
+ tolua_constant(tolua_S,NULL,"SV_RING_DEX",SV_RING_DEX);
+ tolua_constant(tolua_S,NULL,"SV_RING_CON",SV_RING_CON);
+ tolua_constant(tolua_S,NULL,"SV_RING_ACCURACY",SV_RING_ACCURACY);
+ tolua_constant(tolua_S,NULL,"SV_RING_DAMAGE",SV_RING_DAMAGE);
+ tolua_constant(tolua_S,NULL,"SV_RING_SLAYING",SV_RING_SLAYING);
+ tolua_constant(tolua_S,NULL,"SV_RING_SPEED",SV_RING_SPEED);
+ tolua_constant(tolua_S,NULL,"SV_RING_BARAHIR",SV_RING_BARAHIR);
+ tolua_constant(tolua_S,NULL,"SV_RING_TULKAS",SV_RING_TULKAS);
+ tolua_constant(tolua_S,NULL,"SV_RING_NARYA",SV_RING_NARYA);
+ tolua_constant(tolua_S,NULL,"SV_RING_NENYA",SV_RING_NENYA);
+ tolua_constant(tolua_S,NULL,"SV_RING_VILYA",SV_RING_VILYA);
+ tolua_constant(tolua_S,NULL,"SV_RING_POWER",SV_RING_POWER);
+ tolua_constant(tolua_S,NULL,"SV_RING_RES_FEAR",SV_RING_RES_FEAR);
+ tolua_constant(tolua_S,NULL,"SV_RING_RES_LD",SV_RING_RES_LD);
+ tolua_constant(tolua_S,NULL,"SV_RING_RES_NETHER",SV_RING_RES_NETHER);
+ tolua_constant(tolua_S,NULL,"SV_RING_RES_NEXUS",SV_RING_RES_NEXUS);
+ tolua_constant(tolua_S,NULL,"SV_RING_RES_SOUND",SV_RING_RES_SOUND);
+ tolua_constant(tolua_S,NULL,"SV_RING_RES_CONFUSION",SV_RING_RES_CONFUSION);
+ tolua_constant(tolua_S,NULL,"SV_RING_RES_SHARDS",SV_RING_RES_SHARDS);
+ tolua_constant(tolua_S,NULL,"SV_RING_RES_DISENCHANT",SV_RING_RES_DISENCHANT);
+ tolua_constant(tolua_S,NULL,"SV_RING_RES_CHAOS",SV_RING_RES_CHAOS);
+ tolua_constant(tolua_S,NULL,"SV_RING_RES_BLINDNESS",SV_RING_RES_BLINDNESS);
+ tolua_constant(tolua_S,NULL,"SV_RING_LORDLY",SV_RING_LORDLY);
+ tolua_constant(tolua_S,NULL,"SV_RING_ATTACKS",SV_RING_ATTACKS);
+ tolua_constant(tolua_S,NULL,"SV_RING_NOTHING",SV_RING_NOTHING);
+ tolua_constant(tolua_S,NULL,"SV_RING_PRECONITION",SV_RING_PRECONITION);
+ tolua_constant(tolua_S,NULL,"SV_RING_FLAR",SV_RING_FLAR);
+ tolua_constant(tolua_S,NULL,"SV_RING_INVIS",SV_RING_INVIS);
+ tolua_constant(tolua_S,NULL,"SV_RING_FLYING",SV_RING_FLYING);
+ tolua_constant(tolua_S,NULL,"SV_RING_WRAITH",SV_RING_WRAITH);
+ tolua_constant(tolua_S,NULL,"SV_RING_ELEC",SV_RING_ELEC);
+ tolua_constant(tolua_S,NULL,"SV_RING_CRIT",SV_RING_CRIT);
+ tolua_constant(tolua_S,NULL,"SV_RING_SPELL",SV_RING_SPELL);
+ tolua_constant(tolua_S,NULL,"SV_STAFF_SCHOOL",SV_STAFF_SCHOOL);
+ tolua_constant(tolua_S,NULL,"SV_STAFF_NOTHING",SV_STAFF_NOTHING);
+ tolua_constant(tolua_S,NULL,"SV_WAND_SCHOOL",SV_WAND_SCHOOL);
+ tolua_constant(tolua_S,NULL,"SV_WAND_NOTHING",SV_WAND_NOTHING);
+ tolua_constant(tolua_S,NULL,"SV_ROD_NOTHING",SV_ROD_NOTHING);
+ tolua_constant(tolua_S,NULL,"SV_ROD_DETECT_DOOR",SV_ROD_DETECT_DOOR);
+ tolua_constant(tolua_S,NULL,"SV_ROD_IDENTIFY",SV_ROD_IDENTIFY);
+ tolua_constant(tolua_S,NULL,"SV_ROD_RECALL",SV_ROD_RECALL);
+ tolua_constant(tolua_S,NULL,"SV_ROD_ILLUMINATION",SV_ROD_ILLUMINATION);
+ tolua_constant(tolua_S,NULL,"SV_ROD_MAPPING",SV_ROD_MAPPING);
+ tolua_constant(tolua_S,NULL,"SV_ROD_DETECTION",SV_ROD_DETECTION);
+ tolua_constant(tolua_S,NULL,"SV_ROD_PROBING",SV_ROD_PROBING);
+ tolua_constant(tolua_S,NULL,"SV_ROD_CURING",SV_ROD_CURING);
+ tolua_constant(tolua_S,NULL,"SV_ROD_HEALING",SV_ROD_HEALING);
+ tolua_constant(tolua_S,NULL,"SV_ROD_RESTORATION",SV_ROD_RESTORATION);
+ tolua_constant(tolua_S,NULL,"SV_ROD_SPEED",SV_ROD_SPEED);
+ tolua_constant(tolua_S,NULL,"SV_ROD_TELEPORT_AWAY",SV_ROD_TELEPORT_AWAY);
+ tolua_constant(tolua_S,NULL,"SV_ROD_DISARMING",SV_ROD_DISARMING);
+ tolua_constant(tolua_S,NULL,"SV_ROD_LITE",SV_ROD_LITE);
+ tolua_constant(tolua_S,NULL,"SV_ROD_SLEEP_MONSTER",SV_ROD_SLEEP_MONSTER);
+ tolua_constant(tolua_S,NULL,"SV_ROD_SLOW_MONSTER",SV_ROD_SLOW_MONSTER);
+ tolua_constant(tolua_S,NULL,"SV_ROD_DRAIN_LIFE",SV_ROD_DRAIN_LIFE);
+ tolua_constant(tolua_S,NULL,"SV_ROD_POLYMORPH",SV_ROD_POLYMORPH);
+ tolua_constant(tolua_S,NULL,"SV_ROD_ACID_BOLT",SV_ROD_ACID_BOLT);
+ tolua_constant(tolua_S,NULL,"SV_ROD_ELEC_BOLT",SV_ROD_ELEC_BOLT);
+ tolua_constant(tolua_S,NULL,"SV_ROD_FIRE_BOLT",SV_ROD_FIRE_BOLT);
+ tolua_constant(tolua_S,NULL,"SV_ROD_COLD_BOLT",SV_ROD_COLD_BOLT);
+ tolua_constant(tolua_S,NULL,"SV_ROD_ACID_BALL",SV_ROD_ACID_BALL);
+ tolua_constant(tolua_S,NULL,"SV_ROD_ELEC_BALL",SV_ROD_ELEC_BALL);
+ tolua_constant(tolua_S,NULL,"SV_ROD_FIRE_BALL",SV_ROD_FIRE_BALL);
+ tolua_constant(tolua_S,NULL,"SV_ROD_COLD_BALL",SV_ROD_COLD_BALL);
+ tolua_constant(tolua_S,NULL,"SV_ROD_HAVOC",SV_ROD_HAVOC);
+ tolua_constant(tolua_S,NULL,"SV_ROD_DETECT_TRAP",SV_ROD_DETECT_TRAP);
+ tolua_constant(tolua_S,NULL,"SV_ROD_HOME",SV_ROD_HOME);
+ tolua_constant(tolua_S,NULL,"SV_ROD_WOODEN",SV_ROD_WOODEN);
+ tolua_constant(tolua_S,NULL,"SV_ROD_COPPER",SV_ROD_COPPER);
+ tolua_constant(tolua_S,NULL,"SV_ROD_IRON",SV_ROD_IRON);
+ tolua_constant(tolua_S,NULL,"SV_ROD_ALUMINIUM",SV_ROD_ALUMINIUM);
+ tolua_constant(tolua_S,NULL,"SV_ROD_SILVER",SV_ROD_SILVER);
+ tolua_constant(tolua_S,NULL,"SV_ROD_GOLDEN",SV_ROD_GOLDEN);
+ tolua_constant(tolua_S,NULL,"SV_ROD_MITHRIL",SV_ROD_MITHRIL);
+ tolua_constant(tolua_S,NULL,"SV_ROD_ADMANTITE",SV_ROD_ADMANTITE);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_DARKNESS",SV_SCROLL_DARKNESS);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_AGGRAVATE_MONSTER",SV_SCROLL_AGGRAVATE_MONSTER);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_CURSE_ARMOR",SV_SCROLL_CURSE_ARMOR);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_CURSE_WEAPON",SV_SCROLL_CURSE_WEAPON);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_SUMMON_MONSTER",SV_SCROLL_SUMMON_MONSTER);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_SUMMON_UNDEAD",SV_SCROLL_SUMMON_UNDEAD);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_SUMMON_MINE",SV_SCROLL_SUMMON_MINE);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_TRAP_CREATION",SV_SCROLL_TRAP_CREATION);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_PHASE_DOOR",SV_SCROLL_PHASE_DOOR);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_TELEPORT",SV_SCROLL_TELEPORT);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_TELEPORT_LEVEL",SV_SCROLL_TELEPORT_LEVEL);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_WORD_OF_RECALL",SV_SCROLL_WORD_OF_RECALL);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_IDENTIFY",SV_SCROLL_IDENTIFY);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_STAR_IDENTIFY",SV_SCROLL_STAR_IDENTIFY);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_REMOVE_CURSE",SV_SCROLL_REMOVE_CURSE);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_STAR_REMOVE_CURSE",SV_SCROLL_STAR_REMOVE_CURSE);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_ENCHANT_ARMOR",SV_SCROLL_ENCHANT_ARMOR);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_ENCHANT_WEAPON_TO_HIT",SV_SCROLL_ENCHANT_WEAPON_TO_HIT);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_ENCHANT_WEAPON_TO_DAM",SV_SCROLL_ENCHANT_WEAPON_TO_DAM);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_ENCHANT_WEAPON_PVAL",SV_SCROLL_ENCHANT_WEAPON_PVAL);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_STAR_ENCHANT_ARMOR",SV_SCROLL_STAR_ENCHANT_ARMOR);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_STAR_ENCHANT_WEAPON",SV_SCROLL_STAR_ENCHANT_WEAPON);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_RECHARGING",SV_SCROLL_RECHARGING);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_RESET_RECALL",SV_SCROLL_RESET_RECALL);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_LIGHT",SV_SCROLL_LIGHT);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_MAPPING",SV_SCROLL_MAPPING);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_DETECT_GOLD",SV_SCROLL_DETECT_GOLD);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_DETECT_ITEM",SV_SCROLL_DETECT_ITEM);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_DETECT_TRAP",SV_SCROLL_DETECT_TRAP);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_DETECT_DOOR",SV_SCROLL_DETECT_DOOR);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_DETECT_INVIS",SV_SCROLL_DETECT_INVIS);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_DIVINATION",SV_SCROLL_DIVINATION);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_SATISFY_HUNGER",SV_SCROLL_SATISFY_HUNGER);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_BLESSING",SV_SCROLL_BLESSING);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_HOLY_CHANT",SV_SCROLL_HOLY_CHANT);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_HOLY_PRAYER",SV_SCROLL_HOLY_PRAYER);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_MONSTER_CONFUSION",SV_SCROLL_MONSTER_CONFUSION);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_PROTECTION_FROM_EVIL",SV_SCROLL_PROTECTION_FROM_EVIL);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_RUNE_OF_PROTECTION",SV_SCROLL_RUNE_OF_PROTECTION);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_TRAP_DOOR_DESTRUCTION",SV_SCROLL_TRAP_DOOR_DESTRUCTION);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_DEINCARNATION",SV_SCROLL_DEINCARNATION);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_STAR_DESTRUCTION",SV_SCROLL_STAR_DESTRUCTION);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_DISPEL_UNDEAD",SV_SCROLL_DISPEL_UNDEAD);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_MASS_RESURECTION",SV_SCROLL_MASS_RESURECTION);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_GENOCIDE",SV_SCROLL_GENOCIDE);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_MASS_GENOCIDE",SV_SCROLL_MASS_GENOCIDE);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_ACQUIREMENT",SV_SCROLL_ACQUIREMENT);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_STAR_ACQUIREMENT",SV_SCROLL_STAR_ACQUIREMENT);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_FIRE",SV_SCROLL_FIRE);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_ICE",SV_SCROLL_ICE);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_CHAOS",SV_SCROLL_CHAOS);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_RUMOR",SV_SCROLL_RUMOR);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_ARTIFACT",SV_SCROLL_ARTIFACT);
+ tolua_constant(tolua_S,NULL,"SV_SCROLL_NOTHING",SV_SCROLL_NOTHING);
+ tolua_constant(tolua_S,NULL,"SV_POTION_WATER",SV_POTION_WATER);
+ tolua_constant(tolua_S,NULL,"SV_POTION_APPLE_JUICE",SV_POTION_APPLE_JUICE);
+ tolua_constant(tolua_S,NULL,"SV_POTION_SLIME_MOLD",SV_POTION_SLIME_MOLD);
+ tolua_constant(tolua_S,NULL,"SV_POTION_BLOOD",SV_POTION_BLOOD);
+ tolua_constant(tolua_S,NULL,"SV_POTION_SLOWNESS",SV_POTION_SLOWNESS);
+ tolua_constant(tolua_S,NULL,"SV_POTION_SALT_WATER",SV_POTION_SALT_WATER);
+ tolua_constant(tolua_S,NULL,"SV_POTION_POISON",SV_POTION_POISON);
+ tolua_constant(tolua_S,NULL,"SV_POTION_BLINDNESS",SV_POTION_BLINDNESS);
+ tolua_constant(tolua_S,NULL,"SV_POTION_INVIS",SV_POTION_INVIS);
+ tolua_constant(tolua_S,NULL,"SV_POTION_CONFUSION",SV_POTION_CONFUSION);
+ tolua_constant(tolua_S,NULL,"SV_POTION_MUTATION",SV_POTION_MUTATION);
+ tolua_constant(tolua_S,NULL,"SV_POTION_SLEEP",SV_POTION_SLEEP);
+ tolua_constant(tolua_S,NULL,"SV_POTION_LEARNING",SV_POTION_LEARNING);
+ tolua_constant(tolua_S,NULL,"SV_POTION_LOSE_MEMORIES",SV_POTION_LOSE_MEMORIES);
+ tolua_constant(tolua_S,NULL,"SV_POTION_RUINATION",SV_POTION_RUINATION);
+ tolua_constant(tolua_S,NULL,"SV_POTION_DEC_STR",SV_POTION_DEC_STR);
+ tolua_constant(tolua_S,NULL,"SV_POTION_DEC_INT",SV_POTION_DEC_INT);
+ tolua_constant(tolua_S,NULL,"SV_POTION_DEC_WIS",SV_POTION_DEC_WIS);
+ tolua_constant(tolua_S,NULL,"SV_POTION_DEC_DEX",SV_POTION_DEC_DEX);
+ tolua_constant(tolua_S,NULL,"SV_POTION_DEC_CON",SV_POTION_DEC_CON);
+ tolua_constant(tolua_S,NULL,"SV_POTION_DEC_CHR",SV_POTION_DEC_CHR);
+ tolua_constant(tolua_S,NULL,"SV_POTION_DETONATIONS",SV_POTION_DETONATIONS);
+ tolua_constant(tolua_S,NULL,"SV_POTION_DEATH",SV_POTION_DEATH);
+ tolua_constant(tolua_S,NULL,"SV_POTION_INFRAVISION",SV_POTION_INFRAVISION);
+ tolua_constant(tolua_S,NULL,"SV_POTION_DETECT_INVIS",SV_POTION_DETECT_INVIS);
+ tolua_constant(tolua_S,NULL,"SV_POTION_SLOW_POISON",SV_POTION_SLOW_POISON);
+ tolua_constant(tolua_S,NULL,"SV_POTION_CURE_POISON",SV_POTION_CURE_POISON);
+ tolua_constant(tolua_S,NULL,"SV_POTION_BOLDNESS",SV_POTION_BOLDNESS);
+ tolua_constant(tolua_S,NULL,"SV_POTION_SPEED",SV_POTION_SPEED);
+ tolua_constant(tolua_S,NULL,"SV_POTION_RESIST_HEAT",SV_POTION_RESIST_HEAT);
+ tolua_constant(tolua_S,NULL,"SV_POTION_RESIST_COLD",SV_POTION_RESIST_COLD);
+ tolua_constant(tolua_S,NULL,"SV_POTION_HEROISM",SV_POTION_HEROISM);
+ tolua_constant(tolua_S,NULL,"SV_POTION_BESERK_STRENGTH",SV_POTION_BESERK_STRENGTH);
+ tolua_constant(tolua_S,NULL,"SV_POTION_CURE_LIGHT",SV_POTION_CURE_LIGHT);
+ tolua_constant(tolua_S,NULL,"SV_POTION_CURE_SERIOUS",SV_POTION_CURE_SERIOUS);
+ tolua_constant(tolua_S,NULL,"SV_POTION_CURE_CRITICAL",SV_POTION_CURE_CRITICAL);
+ tolua_constant(tolua_S,NULL,"SV_POTION_HEALING",SV_POTION_HEALING);
+ tolua_constant(tolua_S,NULL,"SV_POTION_STAR_HEALING",SV_POTION_STAR_HEALING);
+ tolua_constant(tolua_S,NULL,"SV_POTION_LIFE",SV_POTION_LIFE);
+ tolua_constant(tolua_S,NULL,"SV_POTION_RESTORE_MANA",SV_POTION_RESTORE_MANA);
+ tolua_constant(tolua_S,NULL,"SV_POTION_RESTORE_EXP",SV_POTION_RESTORE_EXP);
+ tolua_constant(tolua_S,NULL,"SV_POTION_RES_STR",SV_POTION_RES_STR);
+ tolua_constant(tolua_S,NULL,"SV_POTION_RES_INT",SV_POTION_RES_INT);
+ tolua_constant(tolua_S,NULL,"SV_POTION_RES_WIS",SV_POTION_RES_WIS);
+ tolua_constant(tolua_S,NULL,"SV_POTION_RES_DEX",SV_POTION_RES_DEX);
+ tolua_constant(tolua_S,NULL,"SV_POTION_RES_CON",SV_POTION_RES_CON);
+ tolua_constant(tolua_S,NULL,"SV_POTION_RES_CHR",SV_POTION_RES_CHR);
+ tolua_constant(tolua_S,NULL,"SV_POTION_INC_STR",SV_POTION_INC_STR);
+ tolua_constant(tolua_S,NULL,"SV_POTION_INC_INT",SV_POTION_INC_INT);
+ tolua_constant(tolua_S,NULL,"SV_POTION_INC_WIS",SV_POTION_INC_WIS);
+ tolua_constant(tolua_S,NULL,"SV_POTION_INC_DEX",SV_POTION_INC_DEX);
+ tolua_constant(tolua_S,NULL,"SV_POTION_INC_CON",SV_POTION_INC_CON);
+ tolua_constant(tolua_S,NULL,"SV_POTION_INC_CHR",SV_POTION_INC_CHR);
+ tolua_constant(tolua_S,NULL,"SV_POTION_AUGMENTATION",SV_POTION_AUGMENTATION);
+ tolua_constant(tolua_S,NULL,"SV_POTION_ENLIGHTENMENT",SV_POTION_ENLIGHTENMENT);
+ tolua_constant(tolua_S,NULL,"SV_POTION_STAR_ENLIGHTENMENT",SV_POTION_STAR_ENLIGHTENMENT);
+ tolua_constant(tolua_S,NULL,"SV_POTION_SELF_KNOWLEDGE",SV_POTION_SELF_KNOWLEDGE);
+ tolua_constant(tolua_S,NULL,"SV_POTION_EXPERIENCE",SV_POTION_EXPERIENCE);
+ tolua_constant(tolua_S,NULL,"SV_POTION_RESISTANCE",SV_POTION_RESISTANCE);
+ tolua_constant(tolua_S,NULL,"SV_POTION_CURING",SV_POTION_CURING);
+ tolua_constant(tolua_S,NULL,"SV_POTION_INVULNERABILITY",SV_POTION_INVULNERABILITY);
+ tolua_constant(tolua_S,NULL,"SV_POTION_NEW_LIFE",SV_POTION_NEW_LIFE);
+ tolua_constant(tolua_S,NULL,"SV_POTION_LAST",SV_POTION_LAST);
+ tolua_constant(tolua_S,NULL,"SV_POTION2_MIMIC",SV_POTION2_MIMIC);
+ tolua_constant(tolua_S,NULL,"SV_POTION2_CURE_LIGHT_SANITY",SV_POTION2_CURE_LIGHT_SANITY);
+ tolua_constant(tolua_S,NULL,"SV_POTION2_CURE_SERIOUS_SANITY",SV_POTION2_CURE_SERIOUS_SANITY);
+ tolua_constant(tolua_S,NULL,"SV_POTION2_CURE_CRITICAL_SANITY",SV_POTION2_CURE_CRITICAL_SANITY);
+ tolua_constant(tolua_S,NULL,"SV_POTION2_CURE_SANITY",SV_POTION2_CURE_SANITY);
+ tolua_constant(tolua_S,NULL,"SV_POTION2_CURE_WATER",SV_POTION2_CURE_WATER);
+ tolua_constant(tolua_S,NULL,"SV_POTION2_LAST",SV_POTION2_LAST);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_POISON",SV_FOOD_POISON);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_BLINDNESS",SV_FOOD_BLINDNESS);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_PARANOIA",SV_FOOD_PARANOIA);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_CONFUSION",SV_FOOD_CONFUSION);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_HALLUCINATION",SV_FOOD_HALLUCINATION);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_PARALYSIS",SV_FOOD_PARALYSIS);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_WEAKNESS",SV_FOOD_WEAKNESS);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_SICKNESS",SV_FOOD_SICKNESS);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_STUPIDITY",SV_FOOD_STUPIDITY);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_NAIVETY",SV_FOOD_NAIVETY);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_UNHEALTH",SV_FOOD_UNHEALTH);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_DISEASE",SV_FOOD_DISEASE);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_CURE_POISON",SV_FOOD_CURE_POISON);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_CURE_BLINDNESS",SV_FOOD_CURE_BLINDNESS);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_CURE_PARANOIA",SV_FOOD_CURE_PARANOIA);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_CURE_CONFUSION",SV_FOOD_CURE_CONFUSION);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_CURE_SERIOUS",SV_FOOD_CURE_SERIOUS);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_RESTORE_STR",SV_FOOD_RESTORE_STR);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_RESTORE_CON",SV_FOOD_RESTORE_CON);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_RESTORING",SV_FOOD_RESTORING);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_BISCUIT",SV_FOOD_BISCUIT);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_JERKY",SV_FOOD_JERKY);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_RATION",SV_FOOD_RATION);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_SLIME_MOLD",SV_FOOD_SLIME_MOLD);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_WAYBREAD",SV_FOOD_WAYBREAD);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_PINT_OF_ALE",SV_FOOD_PINT_OF_ALE);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_PINT_OF_WINE",SV_FOOD_PINT_OF_WINE);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_ATHELAS",SV_FOOD_ATHELAS);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_GREAT_HEALTH",SV_FOOD_GREAT_HEALTH);
+ tolua_constant(tolua_S,NULL,"SV_FOOD_FORTUNE_COOKIE",SV_FOOD_FORTUNE_COOKIE);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_POISON",SV_BATERIE_POISON);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_EXPLOSION",SV_BATERIE_EXPLOSION);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_TELEPORT",SV_BATERIE_TELEPORT);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_COLD",SV_BATERIE_COLD);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_FIRE",SV_BATERIE_FIRE);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_ACID",SV_BATERIE_ACID);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_LIFE",SV_BATERIE_LIFE);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_CONFUSION",SV_BATERIE_CONFUSION);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_LITE",SV_BATERIE_LITE);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_CHAOS",SV_BATERIE_CHAOS);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_TIME",SV_BATERIE_TIME);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_MAGIC",SV_BATERIE_MAGIC);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_XTRA_LIFE",SV_BATERIE_XTRA_LIFE);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_DARKNESS",SV_BATERIE_DARKNESS);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_KNOWLEDGE",SV_BATERIE_KNOWLEDGE);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_FORCE",SV_BATERIE_FORCE);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_LIGHTNING",SV_BATERIE_LIGHTNING);
+ tolua_constant(tolua_S,NULL,"SV_BATERIE_MANA",SV_BATERIE_MANA);
+ tolua_constant(tolua_S,NULL,"SV_CORPSE_CORPSE",SV_CORPSE_CORPSE);
+ tolua_constant(tolua_S,NULL,"SV_CORPSE_SKELETON",SV_CORPSE_SKELETON);
+ tolua_constant(tolua_S,NULL,"SV_CORPSE_HEAD",SV_CORPSE_HEAD);
+ tolua_constant(tolua_S,NULL,"SV_CORPSE_SKULL",SV_CORPSE_SKULL);
+ tolua_constant(tolua_S,NULL,"SV_CORPSE_MEAT",SV_CORPSE_MEAT);
+ tolua_constant(tolua_S,NULL,"SV_DEMONBLADE",SV_DEMONBLADE);
+ tolua_constant(tolua_S,NULL,"SV_DEMONSHIELD",SV_DEMONSHIELD);
+ tolua_constant(tolua_S,NULL,"SV_DEMONHORN",SV_DEMONHORN);
+ tolua_constant(tolua_S,NULL,"IDENT_SENSE",IDENT_SENSE);
+ tolua_constant(tolua_S,NULL,"IDENT_FIXED",IDENT_FIXED);
+ tolua_constant(tolua_S,NULL,"IDENT_EMPTY",IDENT_EMPTY);
+ tolua_constant(tolua_S,NULL,"IDENT_KNOWN",IDENT_KNOWN);
+ tolua_constant(tolua_S,NULL,"IDENT_STOREB",IDENT_STOREB);
+ tolua_constant(tolua_S,NULL,"IDENT_MENTAL",IDENT_MENTAL);
+ tolua_constant(tolua_S,NULL,"IDENT_CURSED",IDENT_CURSED);
+ tolua_constant(tolua_S,NULL,"OBJ_FOUND_MONSTER",OBJ_FOUND_MONSTER);
+ tolua_constant(tolua_S,NULL,"OBJ_FOUND_FLOOR",OBJ_FOUND_FLOOR);
+ tolua_constant(tolua_S,NULL,"OBJ_FOUND_VAULT",OBJ_FOUND_VAULT);
+ tolua_constant(tolua_S,NULL,"OBJ_FOUND_SPECIAL",OBJ_FOUND_SPECIAL);
+ tolua_constant(tolua_S,NULL,"OBJ_FOUND_RUBBLE",OBJ_FOUND_RUBBLE);
+ tolua_constant(tolua_S,NULL,"OBJ_FOUND_REWARD",OBJ_FOUND_REWARD);
+ tolua_constant(tolua_S,NULL,"OBJ_FOUND_STORE",OBJ_FOUND_STORE);
+ tolua_constant(tolua_S,NULL,"OBJ_FOUND_STOLEN",OBJ_FOUND_STOLEN);
+ tolua_constant(tolua_S,NULL,"OBJ_FOUND_SELFMADE",OBJ_FOUND_SELFMADE);
+ tolua_cclass(tolua_S,"obj_theme","");
+ tolua_tablevar(tolua_S,"obj_theme","treasure",toluaI_get_object_obj_theme_treasure,toluaI_set_object_obj_theme_treasure);
+ tolua_tablevar(tolua_S,"obj_theme","combat",toluaI_get_object_obj_theme_combat,toluaI_set_object_obj_theme_combat);
+ tolua_tablevar(tolua_S,"obj_theme","magic",toluaI_get_object_obj_theme_magic,toluaI_set_object_obj_theme_magic);
+ tolua_tablevar(tolua_S,"obj_theme","tools",toluaI_get_object_obj_theme_tools,toluaI_set_object_obj_theme_tools);
+ tolua_cclass(tolua_S,"object_kind","");
+ tolua_tablevar(tolua_S,"object_kind","name",toluaI_get_object_object_kind_name,toluaI_set_object_object_kind_name);
+ tolua_tablevar(tolua_S,"object_kind","text",toluaI_get_object_object_kind_text,toluaI_set_object_object_kind_text);
+ tolua_tablevar(tolua_S,"object_kind","tval",toluaI_get_object_object_kind_tval,toluaI_set_object_object_kind_tval);
+ tolua_tablevar(tolua_S,"object_kind","sval",toluaI_get_object_object_kind_sval,toluaI_set_object_object_kind_sval);
+ tolua_tablevar(tolua_S,"object_kind","pval",toluaI_get_object_object_kind_pval,toluaI_set_object_object_kind_pval);
+ tolua_tablevar(tolua_S,"object_kind","pval2",toluaI_get_object_object_kind_pval2,toluaI_set_object_object_kind_pval2);
+ tolua_tablevar(tolua_S,"object_kind","to_h",toluaI_get_object_object_kind_to_h,toluaI_set_object_object_kind_to_h);
+ tolua_tablevar(tolua_S,"object_kind","to_d",toluaI_get_object_object_kind_to_d,toluaI_set_object_object_kind_to_d);
+ tolua_tablevar(tolua_S,"object_kind","to_a",toluaI_get_object_object_kind_to_a,toluaI_set_object_object_kind_to_a);
+ tolua_tablevar(tolua_S,"object_kind","ac",toluaI_get_object_object_kind_ac,toluaI_set_object_object_kind_ac);
+ tolua_tablevar(tolua_S,"object_kind","dd",toluaI_get_object_object_kind_dd,toluaI_set_object_object_kind_dd);
+ tolua_tablevar(tolua_S,"object_kind","ds",toluaI_get_object_object_kind_ds,toluaI_set_object_object_kind_ds);
+ tolua_tablevar(tolua_S,"object_kind","weight",toluaI_get_object_object_kind_weight,toluaI_set_object_object_kind_weight);
+ tolua_tablevar(tolua_S,"object_kind","cost",toluaI_get_object_object_kind_cost,toluaI_set_object_object_kind_cost);
+ tolua_tablevar(tolua_S,"object_kind","flags1",toluaI_get_object_object_kind_flags1,toluaI_set_object_object_kind_flags1);
+ tolua_tablevar(tolua_S,"object_kind","flags2",toluaI_get_object_object_kind_flags2,toluaI_set_object_object_kind_flags2);
+ tolua_tablevar(tolua_S,"object_kind","flags3",toluaI_get_object_object_kind_flags3,toluaI_set_object_object_kind_flags3);
+ tolua_tablevar(tolua_S,"object_kind","flags4",toluaI_get_object_object_kind_flags4,toluaI_set_object_object_kind_flags4);
+ tolua_tablevar(tolua_S,"object_kind","flags5",toluaI_get_object_object_kind_flags5,toluaI_set_object_object_kind_flags5);
+ tolua_tablearray(tolua_S,"object_kind","locale",toluaI_get_object_object_kind_locale,toluaI_set_object_object_kind_locale);
+ tolua_tablearray(tolua_S,"object_kind","chance",toluaI_get_object_object_kind_chance,toluaI_set_object_object_kind_chance);
+ tolua_tablevar(tolua_S,"object_kind","level",toluaI_get_object_object_kind_level,toluaI_set_object_object_kind_level);
+ tolua_tablevar(tolua_S,"object_kind","extra",toluaI_get_object_object_kind_extra,toluaI_set_object_object_kind_extra);
+ tolua_tablevar(tolua_S,"object_kind","d_attr",toluaI_get_object_object_kind_d_attr,toluaI_set_object_object_kind_d_attr);
+ tolua_tablevar(tolua_S,"object_kind","d_char",toluaI_get_object_object_kind_d_char,toluaI_set_object_object_kind_d_char);
+ tolua_tablevar(tolua_S,"object_kind","x_attr",toluaI_get_object_object_kind_x_attr,toluaI_set_object_object_kind_x_attr);
+ tolua_tablevar(tolua_S,"object_kind","x_char",toluaI_get_object_object_kind_x_char,toluaI_set_object_object_kind_x_char);
+ tolua_tablevar(tolua_S,"object_kind","flavor",toluaI_get_object_object_kind_flavor,toluaI_set_object_object_kind_flavor);
+ tolua_tablevar(tolua_S,"object_kind","easy_know",toluaI_get_object_object_kind_easy_know,toluaI_set_object_object_kind_easy_know);
+ tolua_tablevar(tolua_S,"object_kind","aware",toluaI_get_object_object_kind_aware,toluaI_set_object_object_kind_aware);
+ tolua_tablevar(tolua_S,"object_kind","tried",toluaI_get_object_object_kind_tried,toluaI_set_object_object_kind_tried);
+ tolua_tablevar(tolua_S,"object_kind","know",toluaI_get_object_object_kind_know,toluaI_set_object_object_kind_know);
+ tolua_tablevar(tolua_S,"object_kind","esp",toluaI_get_object_object_kind_esp,toluaI_set_object_object_kind_esp);
+ tolua_tablevar(tolua_S,"object_kind","btval",toluaI_get_object_object_kind_btval,toluaI_set_object_object_kind_btval);
+ tolua_tablevar(tolua_S,"object_kind","bsval",toluaI_get_object_object_kind_bsval,toluaI_set_object_object_kind_bsval);
+ tolua_tablevar(tolua_S,"object_kind","artifact",toluaI_get_object_object_kind_artifact,toluaI_set_object_object_kind_artifact);
+ tolua_tablevar(tolua_S,"object_kind","power",toluaI_get_object_object_kind_power,toluaI_set_object_object_kind_power);
+ tolua_cclass(tolua_S,"artifact_type","");
+ tolua_tablevar(tolua_S,"artifact_type","name",toluaI_get_object_artifact_type_name,toluaI_set_object_artifact_type_name);
+ tolua_tablevar(tolua_S,"artifact_type","text",toluaI_get_object_artifact_type_text,toluaI_set_object_artifact_type_text);
+ tolua_tablevar(tolua_S,"artifact_type","tval",toluaI_get_object_artifact_type_tval,toluaI_set_object_artifact_type_tval);
+ tolua_tablevar(tolua_S,"artifact_type","sval",toluaI_get_object_artifact_type_sval,toluaI_set_object_artifact_type_sval);
+ tolua_tablevar(tolua_S,"artifact_type","pval",toluaI_get_object_artifact_type_pval,toluaI_set_object_artifact_type_pval);
+ tolua_tablevar(tolua_S,"artifact_type","to_h",toluaI_get_object_artifact_type_to_h,toluaI_set_object_artifact_type_to_h);
+ tolua_tablevar(tolua_S,"artifact_type","to_d",toluaI_get_object_artifact_type_to_d,toluaI_set_object_artifact_type_to_d);
+ tolua_tablevar(tolua_S,"artifact_type","to_a",toluaI_get_object_artifact_type_to_a,toluaI_set_object_artifact_type_to_a);
+ tolua_tablevar(tolua_S,"artifact_type","ac",toluaI_get_object_artifact_type_ac,toluaI_set_object_artifact_type_ac);
+ tolua_tablevar(tolua_S,"artifact_type","dd",toluaI_get_object_artifact_type_dd,toluaI_set_object_artifact_type_dd);
+ tolua_tablevar(tolua_S,"artifact_type","ds",toluaI_get_object_artifact_type_ds,toluaI_set_object_artifact_type_ds);
+ tolua_tablevar(tolua_S,"artifact_type","weight",toluaI_get_object_artifact_type_weight,toluaI_set_object_artifact_type_weight);
+ tolua_tablevar(tolua_S,"artifact_type","cost",toluaI_get_object_artifact_type_cost,toluaI_set_object_artifact_type_cost);
+ tolua_tablevar(tolua_S,"artifact_type","flags1",toluaI_get_object_artifact_type_flags1,toluaI_set_object_artifact_type_flags1);
+ tolua_tablevar(tolua_S,"artifact_type","flags2",toluaI_get_object_artifact_type_flags2,toluaI_set_object_artifact_type_flags2);
+ tolua_tablevar(tolua_S,"artifact_type","flags3",toluaI_get_object_artifact_type_flags3,toluaI_set_object_artifact_type_flags3);
+ tolua_tablevar(tolua_S,"artifact_type","flags4",toluaI_get_object_artifact_type_flags4,toluaI_set_object_artifact_type_flags4);
+ tolua_tablevar(tolua_S,"artifact_type","flags5",toluaI_get_object_artifact_type_flags5,toluaI_set_object_artifact_type_flags5);
+ tolua_tablevar(tolua_S,"artifact_type","level",toluaI_get_object_artifact_type_level,toluaI_set_object_artifact_type_level);
+ tolua_tablevar(tolua_S,"artifact_type","rarity",toluaI_get_object_artifact_type_rarity,toluaI_set_object_artifact_type_rarity);
+ tolua_tablevar(tolua_S,"artifact_type","cur_num",toluaI_get_object_artifact_type_cur_num,toluaI_set_object_artifact_type_cur_num);
+ tolua_tablevar(tolua_S,"artifact_type","max_num",toluaI_get_object_artifact_type_max_num,toluaI_set_object_artifact_type_max_num);
+ tolua_tablevar(tolua_S,"artifact_type","esp",toluaI_get_object_artifact_type_esp,toluaI_set_object_artifact_type_esp);
+ tolua_tablevar(tolua_S,"artifact_type","power",toluaI_get_object_artifact_type_power,toluaI_set_object_artifact_type_power);
+ tolua_cclass(tolua_S,"ego_item_type","");
+ tolua_tablevar(tolua_S,"ego_item_type","name",toluaI_get_object_ego_item_type_name,toluaI_set_object_ego_item_type_name);
+ tolua_tablevar(tolua_S,"ego_item_type","text",toluaI_get_object_ego_item_type_text,toluaI_set_object_ego_item_type_text);
+ tolua_tablevar(tolua_S,"ego_item_type","before",toluaI_get_object_ego_item_type_before,toluaI_set_object_ego_item_type_before);
+ tolua_tablearray(tolua_S,"ego_item_type","tval",toluaI_get_object_ego_item_type_tval,toluaI_set_object_ego_item_type_tval);
+ tolua_tablearray(tolua_S,"ego_item_type","min_sval",toluaI_get_object_ego_item_type_min_sval,toluaI_set_object_ego_item_type_min_sval);
+ tolua_tablearray(tolua_S,"ego_item_type","max_sval",toluaI_get_object_ego_item_type_max_sval,toluaI_set_object_ego_item_type_max_sval);
+ tolua_tablevar(tolua_S,"ego_item_type","rating",toluaI_get_object_ego_item_type_rating,toluaI_set_object_ego_item_type_rating);
+ tolua_tablevar(tolua_S,"ego_item_type","level",toluaI_get_object_ego_item_type_level,toluaI_set_object_ego_item_type_level);
+ tolua_tablevar(tolua_S,"ego_item_type","rarity",toluaI_get_object_ego_item_type_rarity,toluaI_set_object_ego_item_type_rarity);
+ tolua_tablevar(tolua_S,"ego_item_type","mrarity",toluaI_get_object_ego_item_type_mrarity,toluaI_set_object_ego_item_type_mrarity);
+ tolua_tablevar(tolua_S,"ego_item_type","max_to_h",toluaI_get_object_ego_item_type_max_to_h,toluaI_set_object_ego_item_type_max_to_h);
+ tolua_tablevar(tolua_S,"ego_item_type","max_to_d",toluaI_get_object_ego_item_type_max_to_d,toluaI_set_object_ego_item_type_max_to_d);
+ tolua_tablevar(tolua_S,"ego_item_type","max_to_a",toluaI_get_object_ego_item_type_max_to_a,toluaI_set_object_ego_item_type_max_to_a);
+ tolua_tablevar(tolua_S,"ego_item_type","max_pval",toluaI_get_object_ego_item_type_max_pval,toluaI_set_object_ego_item_type_max_pval);
+ tolua_tablevar(tolua_S,"ego_item_type","cost",toluaI_get_object_ego_item_type_cost,toluaI_set_object_ego_item_type_cost);
+ tolua_tablearray(tolua_S,"ego_item_type","rar",toluaI_get_object_ego_item_type_rar,toluaI_set_object_ego_item_type_rar);
+ tolua_tablearray(tolua_S,"ego_item_type","flags1",toluaI_get_object_ego_item_type_flags1,toluaI_set_object_ego_item_type_flags1);
+ tolua_tablearray(tolua_S,"ego_item_type","flags2",toluaI_get_object_ego_item_type_flags2,toluaI_set_object_ego_item_type_flags2);
+ tolua_tablearray(tolua_S,"ego_item_type","flags3",toluaI_get_object_ego_item_type_flags3,toluaI_set_object_ego_item_type_flags3);
+ tolua_tablearray(tolua_S,"ego_item_type","flags4",toluaI_get_object_ego_item_type_flags4,toluaI_set_object_ego_item_type_flags4);
+ tolua_tablearray(tolua_S,"ego_item_type","flags5",toluaI_get_object_ego_item_type_flags5,toluaI_set_object_ego_item_type_flags5);
+ tolua_tablearray(tolua_S,"ego_item_type","esp",toluaI_get_object_ego_item_type_esp,toluaI_set_object_ego_item_type_esp);
+ tolua_tablearray(tolua_S,"ego_item_type","fego",toluaI_get_object_ego_item_type_fego,toluaI_set_object_ego_item_type_fego);
+ tolua_tablevar(tolua_S,"ego_item_type","power",toluaI_get_object_ego_item_type_power,toluaI_set_object_ego_item_type_power);
+ tolua_cclass(tolua_S,"object_type","");
+ tolua_tablevar(tolua_S,"object_type","k_idx",toluaI_get_object_object_type_k_idx,toluaI_set_object_object_type_k_idx);
+ tolua_tablevar(tolua_S,"object_type","iy",toluaI_get_object_object_type_iy,toluaI_set_object_object_type_iy);
+ tolua_tablevar(tolua_S,"object_type","ix",toluaI_get_object_object_type_ix,toluaI_set_object_object_type_ix);
+ tolua_tablevar(tolua_S,"object_type","tval",toluaI_get_object_object_type_tval,toluaI_set_object_object_type_tval);
+ tolua_tablevar(tolua_S,"object_type","sval",toluaI_get_object_object_type_sval,toluaI_set_object_object_type_sval);
+ tolua_tablevar(tolua_S,"object_type","pval",toluaI_get_object_object_type_pval,toluaI_set_object_object_type_pval);
+ tolua_tablevar(tolua_S,"object_type","pval2",toluaI_get_object_object_type_pval2,toluaI_set_object_object_type_pval2);
+ tolua_tablevar(tolua_S,"object_type","pval3",toluaI_get_object_object_type_pval3,toluaI_set_object_object_type_pval3);
+ tolua_tablevar(tolua_S,"object_type","discount",toluaI_get_object_object_type_discount,toluaI_set_object_object_type_discount);
+ tolua_tablevar(tolua_S,"object_type","number",toluaI_get_object_object_type_number,toluaI_set_object_object_type_number);
+ tolua_tablevar(tolua_S,"object_type","weight",toluaI_get_object_object_type_weight,toluaI_set_object_object_type_weight);
+ tolua_tablevar(tolua_S,"object_type","elevel",toluaI_get_object_object_type_elevel,toluaI_set_object_object_type_elevel);
+ tolua_tablevar(tolua_S,"object_type","exp",toluaI_get_object_object_type_exp,toluaI_set_object_object_type_exp);
+ tolua_tablevar(tolua_S,"object_type","name1",toluaI_get_object_object_type_name1,toluaI_set_object_object_type_name1);
+ tolua_tablevar(tolua_S,"object_type","name2",toluaI_get_object_object_type_name2,toluaI_set_object_object_type_name2);
+ tolua_tablevar(tolua_S,"object_type","name2b",toluaI_get_object_object_type_name2b,toluaI_set_object_object_type_name2b);
+ tolua_tablevar(tolua_S,"object_type","xtra1",toluaI_get_object_object_type_xtra1,toluaI_set_object_object_type_xtra1);
+ tolua_tablevar(tolua_S,"object_type","xtra2",toluaI_get_object_object_type_xtra2,toluaI_set_object_object_type_xtra2);
+ tolua_tablevar(tolua_S,"object_type","to_h",toluaI_get_object_object_type_to_h,toluaI_set_object_object_type_to_h);
+ tolua_tablevar(tolua_S,"object_type","to_d",toluaI_get_object_object_type_to_d,toluaI_set_object_object_type_to_d);
+ tolua_tablevar(tolua_S,"object_type","to_a",toluaI_get_object_object_type_to_a,toluaI_set_object_object_type_to_a);
+ tolua_tablevar(tolua_S,"object_type","ac",toluaI_get_object_object_type_ac,toluaI_set_object_object_type_ac);
+ tolua_tablevar(tolua_S,"object_type","dd",toluaI_get_object_object_type_dd,toluaI_set_object_object_type_dd);
+ tolua_tablevar(tolua_S,"object_type","ds",toluaI_get_object_object_type_ds,toluaI_set_object_object_type_ds);
+ tolua_tablevar(tolua_S,"object_type","timeout",toluaI_get_object_object_type_timeout,toluaI_set_object_object_type_timeout);
+ tolua_tablevar(tolua_S,"object_type","ident",toluaI_get_object_object_type_ident,toluaI_set_object_object_type_ident);
+ tolua_tablevar(tolua_S,"object_type","marked",toluaI_get_object_object_type_marked,toluaI_set_object_object_type_marked);
+ tolua_tablevar(tolua_S,"object_type","note",toluaI_get_object_object_type_note,toluaI_set_object_object_type_note);
+ tolua_tablevar(tolua_S,"object_type","art_name",toluaI_get_object_object_type_art_name,toluaI_set_object_object_type_art_name);
+ tolua_tablevar(tolua_S,"object_type","art_flags1",toluaI_get_object_object_type_art_flags1,toluaI_set_object_object_type_art_flags1);
+ tolua_tablevar(tolua_S,"object_type","art_flags2",toluaI_get_object_object_type_art_flags2,toluaI_set_object_object_type_art_flags2);
+ tolua_tablevar(tolua_S,"object_type","art_flags3",toluaI_get_object_object_type_art_flags3,toluaI_set_object_object_type_art_flags3);
+ tolua_tablevar(tolua_S,"object_type","art_flags4",toluaI_get_object_object_type_art_flags4,toluaI_set_object_object_type_art_flags4);
+ tolua_tablevar(tolua_S,"object_type","art_flags5",toluaI_get_object_object_type_art_flags5,toluaI_set_object_object_type_art_flags5);
+ tolua_tablevar(tolua_S,"object_type","art_esp",toluaI_get_object_object_type_art_esp,toluaI_set_object_object_type_art_esp);
+ tolua_tablevar(tolua_S,"object_type","next_o_idx",toluaI_get_object_object_type_next_o_idx,toluaI_set_object_object_type_next_o_idx);
+ tolua_tablevar(tolua_S,"object_type","held_m_idx",toluaI_get_object_object_type_held_m_idx,toluaI_set_object_object_type_held_m_idx);
+ tolua_tablevar(tolua_S,"object_type","sense",toluaI_get_object_object_type_sense,toluaI_set_object_object_type_sense);
+ tolua_tablevar(tolua_S,"object_type","found",toluaI_get_object_object_type_found,toluaI_set_object_object_type_found);
+ tolua_tablevar(tolua_S,"object_type","found_aux1",toluaI_get_object_object_type_found_aux1,toluaI_set_object_object_type_found_aux1);
+ tolua_tablevar(tolua_S,"object_type","found_aux2",toluaI_get_object_object_type_found_aux2,toluaI_set_object_object_type_found_aux2);
+ tolua_constant(tolua_S,NULL,"SENSE_NONE",SENSE_NONE);
+ tolua_constant(tolua_S,NULL,"SENSE_CURSED",SENSE_CURSED);
+ tolua_constant(tolua_S,NULL,"SENSE_AVERAGE",SENSE_AVERAGE);
+ tolua_constant(tolua_S,NULL,"SENSE_GOOD_LIGHT",SENSE_GOOD_LIGHT);
+ tolua_constant(tolua_S,NULL,"SENSE_GOOD_HEAVY",SENSE_GOOD_HEAVY);
+ tolua_constant(tolua_S,NULL,"SENSE_EXCELLENT",SENSE_EXCELLENT);
+ tolua_constant(tolua_S,NULL,"SENSE_WORTHLESS",SENSE_WORTHLESS);
+ tolua_constant(tolua_S,NULL,"SENSE_TERRIBLE",SENSE_TERRIBLE);
+ tolua_constant(tolua_S,NULL,"SENSE_SPECIAL",SENSE_SPECIAL);
+ tolua_constant(tolua_S,NULL,"SENSE_BROKEN",SENSE_BROKEN);
+ tolua_constant(tolua_S,NULL,"SENSE_UNCURSED",SENSE_UNCURSED);
+ tolua_globalarray(tolua_S,"o_list",toluaI_get_object_o_list,toluaI_set_object_o_list);
+ tolua_globalarray(tolua_S,"k_info",toluaI_get_object_k_info,toluaI_set_object_k_info);
+ tolua_globalvar(tolua_S,"k_name",toluaI_get_object_k_name,toluaI_set_object_k_name);
+ tolua_globalvar(tolua_S,"k_text",toluaI_get_object_k_text,toluaI_set_object_k_text);
+ tolua_globalarray(tolua_S,"a_info",toluaI_get_object_a_info,toluaI_set_object_a_info);
+ tolua_globalvar(tolua_S,"a_name",toluaI_get_object_a_name,toluaI_set_object_a_name);
+ tolua_globalvar(tolua_S,"a_text",toluaI_get_object_a_text,toluaI_set_object_a_text);
+ tolua_globalvar(tolua_S,"e_head",toluaI_get_object_e_head,toluaI_set_object_e_head);
+ tolua_globalarray(tolua_S,"e_info",toluaI_get_object_e_info,toluaI_set_object_e_info);
+ tolua_globalvar(tolua_S,"e_name",toluaI_get_object_e_name,toluaI_set_object_e_name);
+ tolua_globalvar(tolua_S,"e_text",toluaI_get_object_e_text,toluaI_set_object_e_text);
+ tolua_function(tolua_S,NULL,"m_bonus",toluaI_object_m_bonus00);
+ tolua_function(tolua_S,NULL,"wield_slot_ideal",toluaI_object_wield_slot_ideal00);
+ tolua_function(tolua_S,NULL,"wield_slot",toluaI_object_wield_slot00);
+ tolua_function(tolua_S,NULL,"object_flags",toluaI_object_object_flags00);
+ tolua_function(tolua_S,NULL,"object_desc",toluaI_object_object_desc00);
+ tolua_function(tolua_S,NULL,"object_out_desc",toluaI_object_object_out_desc00);
+ tolua_function(tolua_S,NULL,"inven_item_describe",toluaI_object_inven_item_describe00);
+ tolua_function(tolua_S,NULL,"inven_item_increase",toluaI_object_inven_item_increase00);
+ tolua_function(tolua_S,NULL,"inven_item_optimize",toluaI_object_inven_item_optimize00);
+ tolua_function(tolua_S,NULL,"floor_item_describe",toluaI_object_floor_item_describe00);
+ tolua_function(tolua_S,NULL,"floor_item_increase",toluaI_object_floor_item_increase00);
+ tolua_function(tolua_S,NULL,"floor_item_optimize",toluaI_object_floor_item_optimize00);
+ tolua_function(tolua_S,NULL,"delete_object_idx",toluaI_object_delete_object_idx00);
+ tolua_function(tolua_S,NULL,"o_pop",toluaI_object_o_pop00);
+ tolua_function(tolua_S,NULL,"get_obj_num_prep",toluaI_object_get_obj_num_prep00);
+ tolua_function(tolua_S,NULL,"ident_all",toluaI_object_ident_all00);
+ tolua_function(tolua_S,NULL,"get_obj_num",toluaI_object_get_obj_num00);
+ tolua_function(tolua_S,NULL,"lookup_kind",toluaI_object_lookup_kind00);
+ tolua_function(tolua_S,NULL,"object_wipe",toluaI_object_object_wipe00);
+ tolua_function(tolua_S,NULL,"object_prep",toluaI_object_object_prep00);
+ tolua_function(tolua_S,NULL,"object_copy",toluaI_object_object_copy00);
+ tolua_function(tolua_S,NULL,"inven_carry_okay",toluaI_object_inven_carry_okay00);
+ tolua_function(tolua_S,NULL,"apply_magic",toluaI_object_apply_magic00);
+ tolua_function(tolua_S,NULL,"make_object",toluaI_object_make_object00);
+ tolua_function(tolua_S,NULL,"drop_near",toluaI_object_drop_near00);
+ tolua_function(tolua_S,NULL,"get_object",toluaI_object_get_object00);
+ tolua_function(tolua_S,NULL,"new_object",toluaI_object_new_object00);
+ tolua_function(tolua_S,NULL,"end_object",toluaI_object_end_object00);
+ tolua_function(tolua_S,NULL,"get_item_aux",toluaI_object_get_item_aux00);
+ tolua_function(tolua_S,NULL,"lua_set_item_tester",toluaI_object_lua_set_item_tester00);
+ tolua_function(tolua_S,NULL,"is_magestaff",toluaI_object_is_magestaff00);
+ tolua_function(tolua_S,NULL,"identify_pack_fully",toluaI_object_identify_pack_fully00);
+ tolua_function(tolua_S,NULL,"inven_carry",toluaI_object_inven_carry00);
+ tolua_function(tolua_S,NULL,"calc_total_weight",toluaI_object_calc_total_weight00);
+ tolua_function(tolua_S,NULL,"get_slot",toluaI_object_get_slot00);
+ tolua_function(tolua_S,NULL,"is_blessed",toluaI_object_is_blessed00);
+ tolua_globalarray(tolua_S,"sense_desc",toluaI_get_object_sense_desc,toluaI_set_object_sense_desc);
+ tolua_function(tolua_S,NULL,"object_pickup",toluaI_object_object_pickup00);
+ tolua_function(tolua_S,NULL,"is_artifact",toluaI_object_is_artifact00);
+ tolua_function(tolua_S,NULL,"is_aware",toluaI_object_is_aware00);
+ tolua_function(tolua_S,NULL,"is_known",toluaI_object_is_known00);
+ tolua_function(tolua_S,NULL,"set_aware",toluaI_object_set_aware00);
+ tolua_function(tolua_S,NULL,"set_known",toluaI_object_set_known00);
+ tolua_function(tolua_S,NULL,"value_check_aux1",toluaI_object_value_check_aux100);
+ tolua_function(tolua_S,NULL,"value_check_aux1_magic",toluaI_object_value_check_aux1_magic00);
+ tolua_function(tolua_S,NULL,"value_check_aux2",toluaI_object_value_check_aux200);
+ tolua_function(tolua_S,NULL,"value_check_aux2_magic",toluaI_object_value_check_aux2_magic00);
+ tolua_function(tolua_S,NULL,"select_sense",toluaI_object_select_sense00);
+ tolua_function(tolua_S,NULL,"psychometry",toluaI_object_psychometry00);
+ tolua_function(tolua_S,NULL,"remove_curse_object",toluaI_object_remove_curse_object00);
+ return 1;
+}
+/* Close function */
+void tolua_object_close (lua_State* tolua_S)
+{
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"obj_forge"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"theme_forge"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_STR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_INT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_WIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_DEX");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_CON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_CHR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_MANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_SPELL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_STEALTH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_SEARCH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_INFRA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_TUNNEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_SPEED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_BLOWS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_CHAOTIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_VAMPIRIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_SLAY_ANIMAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_SLAY_EVIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_SLAY_UNDEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_SLAY_DEMON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_SLAY_ORC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_SLAY_TROLL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_SLAY_GIANT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_SLAY_DRAGON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_KILL_DRAGON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_VORPAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_IMPACT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_BRAND_POIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_BRAND_ACID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_BRAND_ELEC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_BRAND_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_BRAND_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR1_NULL_MASK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_SUST_STR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_SUST_INT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_SUST_WIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_SUST_DEX");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_SUST_CON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_SUST_CHR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_INVIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_LIFE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_IM_ACID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_IM_ELEC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_IM_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_IM_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_SENS_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_REFLECT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_FREE_ACT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_HOLD_LIFE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_ACID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_ELEC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_POIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_FEAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_LITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_DARK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_BLIND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_CONF");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_SOUND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_SHARDS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_NETHER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_NEXUS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_CHAOS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_RES_DISEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR2_NULL_MASK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_SH_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_SH_ELEC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_AUTO_CURSE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_DECAY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_NO_TELE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_NO_MAGIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_WRAITH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_TY_CURSE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_EASY_KNOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_HIDE_TYPE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_SHOW_MODS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_INSTA_ART");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_FEATHER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_LITE1");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_SEE_INVIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_NORM_ART");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_SLOW_DIGEST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_REGEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_XTRA_MIGHT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_XTRA_SHOTS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_IGNORE_ACID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_IGNORE_ELEC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_IGNORE_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_IGNORE_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_ACTIVATE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_DRAIN_EXP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_TELEPORT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_AGGRAVATE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_BLESSED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_CURSED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_HEAVY_CURSE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_PERMA_CURSE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR3_NULL_MASK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_NEVER_BLOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_PRECOGNITION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_BLACK_BREATH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_RECHARGE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_FLY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_DG_CURSE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_COULD2H");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_MUST2H");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_LEVELS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_CLONE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_SPECIAL_GENE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_CLIMB");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_FAST_CAST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_CAPACITY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_CHARGING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_CHEAPNESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_FOUNTAIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_ANTIMAGIC_50");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_ANTIMAGIC_30");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_ANTIMAGIC_20");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_ANTIMAGIC_10");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_EASY_USE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_IM_NETHER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_RECHARGED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_ULTIMATE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_AUTO_ID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_LITE2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_LITE3");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_FUEL_LITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_ART_EXP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_CURSE_NO_DROP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_NO_RECHARGE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR4_NULL_MASK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_TEMPORARY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_DRAIN_MANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_DRAIN_HP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_KILL_DEMON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_KILL_UNDEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_CRIT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_ATTR_MULTI");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_WOUNDING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_FULL_NAME");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_LUCK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_IMMOVABLE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_SPELL_CONTAIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_RES_MORGUL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_ACTIVATE_NO_WIELD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_MAGIC_BREATH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_WATER_BREATH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TR5_WIELD_CAST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ESP_ORC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ESP_TROLL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ESP_DRAGON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ESP_GIANT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ESP_DEMON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ESP_UNDEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ESP_EVIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ESP_ANIMAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ESP_THUNDERLORD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ESP_GOOD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ESP_NONLIVING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ESP_UNIQUE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ESP_SPIDER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ESP_ALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"USE_EQUIP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"USE_INVEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"USE_FLOOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"USE_EXTRA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_WIELD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_BOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_RING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_NECK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_LITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_BODY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_OUTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_ARM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_HEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_HANDS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_FEET");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_CARRY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_AMMO");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_TOOL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_TOTAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"INVEN_EQ");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_SKELETON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_BOTTLE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_BATERIE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_SPIKE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_MSTAFF");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_CHEST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_PARCHMENT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_PARCHEMENT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_CORPSE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_EGG");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_JUNK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_TOOL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_INSTRUMENT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_BOOMERANG");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_SHOT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_ARROW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_BOLT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_BOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_DIGGING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_HAFTED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_POLEARM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_SWORD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_AXE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_BOOTS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_GLOVES");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_HELM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_CROWN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_SHIELD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_CLOAK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_SOFT_ARMOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_HARD_ARMOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_DRAG_ARMOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_LITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_AMULET");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_RING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_TRAPKIT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_TOTEM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_STAFF");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_WAND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_ROD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_ROD_MAIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_SCROLL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_POTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_POTION2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_FLASK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_FOOD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_HYPNOS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_GOLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_RANDART");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_RUNE1");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_RUNE2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_BOOK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_SYMBIOTIC_BOOK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_MUSIC_BOOK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_DRUID_BOOK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TV_DAEMON_BOOK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_TOOL_CLIMB");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_PORTABLE_HOLE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_MSTAFF");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMMO_LIGHT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMMO_NORMAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMMO_HEAVY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRUM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_HARP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_HORN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_TRAPKIT_SLING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_TRAPKIT_BOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_TRAPKIT_XBOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_TRAPKIT_POTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_TRAPKIT_SCROLL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_TRAPKIT_DEVICE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BOOM_S_WOOD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BOOM_WOOD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BOOM_S_METAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BOOM_METAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SLING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SHORT_BOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LONG_BOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LIGHT_XBOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_HEAVY_XBOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SHOVEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_GNOMISH_SHOVEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DWARVEN_SHOVEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_PICK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ORCISH_PICK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DWARVEN_PICK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_MATTOCK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_CLUB");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_WHIP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_QUARTERSTAFF");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_NUNCHAKU");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_MACE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BALL_AND_CHAIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_WAR_HAMMER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LUCERN_HAMMER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_THREE_PIECE_ROD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_MORNING_STAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FLAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LEAD_FILLED_MACE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_TWO_HANDED_FLAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_GREAT_HAMMER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_MACE_OF_DISRUPTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_GROND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_HATCHET");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_CLEAVER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LIGHT_WAR_AXE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BEAKED_AXE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BROAD_AXE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATTLE_AXE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_GREAT_AXE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LOCHABER_AXE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SLAUGHTER_AXE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SPEAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SICKLE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AWL_PIKE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_TRIDENT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FAUCHARD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BROAD_SPEAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_PIKE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_GLAIVE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_HALBERD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_GUISARME");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCYTHE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LANCE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_TRIFURCATE_SPEAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_HEAVY_LANCE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCYTHE_OF_SLICING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BROKEN_DAGGER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BROKEN_SWORD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DAGGER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_MAIN_GAUCHE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RAPIER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SMALL_SWORD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BASILLARD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SHORT_SWORD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SABRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_CUTLASS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_KHOPESH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_TULWAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BROAD_SWORD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LONG_SWORD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCIMITAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_KATANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BASTARD_SWORD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_GREAT_SCIMITAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_CLAYMORE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ESPADON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_TWO_HANDED_SWORD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FLAMBERGE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_EXECUTIONERS_SWORD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ZWEIHANDER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BLADE_OF_CHAOS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BLUESTEEL_BLADE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SHADOW_BLADE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DARK_SWORD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SMALL_LEATHER_SHIELD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SMALL_METAL_SHIELD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LARGE_LEATHER_SHIELD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LARGE_METAL_SHIELD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRAGON_SHIELD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SHIELD_OF_DEFLECTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_HARD_LEATHER_CAP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_METAL_CAP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_IRON_HELM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_STEEL_HELM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRAGON_HELM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_IRON_CROWN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_GOLDEN_CROWN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_JEWELED_CROWN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_MORGOTH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_PAIR_OF_SOFT_LEATHER_BOOTS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_PAIR_OF_HARD_LEATHER_BOOTS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_PAIR_OF_METAL_SHOD_BOOTS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_CLOAK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ELVEN_CLOAK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FUR_CLOAK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SHADOW_CLOAK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SET_OF_LEATHER_GLOVES");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SET_OF_GAUNTLETS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SET_OF_CESTI");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FILTHY_RAG");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROBE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_PAPER_ARMOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SOFT_LEATHER_ARMOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SOFT_STUDDED_LEATHER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_HARD_LEATHER_ARMOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_HARD_STUDDED_LEATHER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RHINO_HIDE_ARMOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_CORD_ARMOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_PADDED_ARMOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LEATHER_SCALE_MAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LEATHER_JACK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_STONE_AND_HIDE_ARMOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_THUNDERLORD_SUIT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RUSTY_CHAIN_MAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_MAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_METAL_SCALE_MAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_CHAIN_MAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DOUBLE_RING_MAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AUGMENTED_CHAIN_MAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DOUBLE_CHAIN_MAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BAR_CHAIN_MAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_METAL_BRIGANDINE_ARMOUR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SPLINT_MAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_PARTIAL_PLATE_ARMOUR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_METAL_LAMELLAR_ARMOUR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FULL_PLATE_ARMOUR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RIBBED_PLATE_ARMOUR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_MITHRIL_CHAIN_MAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_MITHRIL_PLATE_MAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ADAMANTITE_PLATE_MAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRAGON_BLACK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRAGON_BLUE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRAGON_WHITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRAGON_RED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRAGON_GREEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRAGON_MULTIHUED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRAGON_SHINING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRAGON_LAW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRAGON_BRONZE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRAGON_GOLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRAGON_CHAOS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRAGON_BALANCE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DRAGON_POWER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LITE_TORCH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LITE_LANTERN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LITE_TORCH_EVER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LITE_DWARVEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LITE_FEANORIAN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LITE_GALADRIEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LITE_ELENDIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LITE_THRAIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LITE_UNDEATH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_LITE_PALANTIR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ANCHOR_SPACETIME");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_STONE_LORE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_DOOM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_TELEPORT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_ADORNMENT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_SLOW_DIGEST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_RESIST_ACID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_SEARCHING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_BRILLANCE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_CHARISMA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_THE_MAGI");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_REFLECTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_CARLAMMAS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_INGWE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_DWARVES");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_NO_MAGIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_NO_TELE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_RESISTANCE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_NOTHING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_SERPENT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_TORIS_MEJISTOS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_TRICKERY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_DEVOTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_WEAPONMASTERY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_WISDOM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_INFRA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_AMULET_SPELL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_WOE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_AGGRAVATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_WEAKNESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_STUPIDITY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_TELEPORTATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_SPECIAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_SLOW_DIGESTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_FEATHER_FALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_RESIST_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_RESIST_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_SUSTAIN_STR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_SUSTAIN_INT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_SUSTAIN_WIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_SUSTAIN_DEX");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_SUSTAIN_CON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_SUSTAIN_CHR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_PROTECTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_ACID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_FLAMES");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_ICE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_RESIST_POIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_FREE_ACTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_SEE_INVIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_SEARCHING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_STR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_INT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_DEX");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_CON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_ACCURACY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_DAMAGE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_SLAYING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_SPEED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_BARAHIR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_TULKAS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_NARYA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_NENYA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_VILYA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_POWER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_RES_FEAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_RES_LD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_RES_NETHER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_RES_NEXUS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_RES_SOUND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_RES_CONFUSION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_RES_SHARDS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_RES_DISENCHANT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_RES_CHAOS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_RES_BLINDNESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_LORDLY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_ATTACKS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_NOTHING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_PRECONITION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_FLAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_INVIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_FLYING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_WRAITH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_ELEC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_CRIT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_RING_SPELL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_STAFF_SCHOOL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_STAFF_NOTHING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_WAND_SCHOOL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_WAND_NOTHING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_NOTHING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_DETECT_DOOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_IDENTIFY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_RECALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_ILLUMINATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_MAPPING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_DETECTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_PROBING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_CURING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_HEALING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_RESTORATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_SPEED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_TELEPORT_AWAY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_DISARMING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_LITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_SLEEP_MONSTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_SLOW_MONSTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_DRAIN_LIFE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_POLYMORPH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_ACID_BOLT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_ELEC_BOLT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_FIRE_BOLT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_COLD_BOLT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_ACID_BALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_ELEC_BALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_FIRE_BALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_COLD_BALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_HAVOC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_DETECT_TRAP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_HOME");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_WOODEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_COPPER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_IRON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_ALUMINIUM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_SILVER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_GOLDEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_MITHRIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_ROD_ADMANTITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_DARKNESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_AGGRAVATE_MONSTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_CURSE_ARMOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_CURSE_WEAPON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_SUMMON_MONSTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_SUMMON_UNDEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_SUMMON_MINE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_TRAP_CREATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_PHASE_DOOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_TELEPORT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_TELEPORT_LEVEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_WORD_OF_RECALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_IDENTIFY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_STAR_IDENTIFY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_REMOVE_CURSE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_STAR_REMOVE_CURSE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_ENCHANT_ARMOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_ENCHANT_WEAPON_TO_HIT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_ENCHANT_WEAPON_TO_DAM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_ENCHANT_WEAPON_PVAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_STAR_ENCHANT_ARMOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_STAR_ENCHANT_WEAPON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_RECHARGING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_RESET_RECALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_LIGHT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_MAPPING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_DETECT_GOLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_DETECT_ITEM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_DETECT_TRAP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_DETECT_DOOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_DETECT_INVIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_DIVINATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_SATISFY_HUNGER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_BLESSING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_HOLY_CHANT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_HOLY_PRAYER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_MONSTER_CONFUSION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_PROTECTION_FROM_EVIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_RUNE_OF_PROTECTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_TRAP_DOOR_DESTRUCTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_DEINCARNATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_STAR_DESTRUCTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_DISPEL_UNDEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_MASS_RESURECTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_GENOCIDE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_MASS_GENOCIDE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_ACQUIREMENT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_STAR_ACQUIREMENT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_ICE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_CHAOS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_RUMOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_ARTIFACT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_SCROLL_NOTHING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_WATER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_APPLE_JUICE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_SLIME_MOLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_BLOOD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_SLOWNESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_SALT_WATER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_POISON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_BLINDNESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_INVIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_CONFUSION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_MUTATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_SLEEP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_LEARNING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_LOSE_MEMORIES");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_RUINATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_DEC_STR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_DEC_INT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_DEC_WIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_DEC_DEX");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_DEC_CON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_DEC_CHR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_DETONATIONS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_DEATH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_INFRAVISION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_DETECT_INVIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_SLOW_POISON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_CURE_POISON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_BOLDNESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_SPEED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_RESIST_HEAT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_RESIST_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_HEROISM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_BESERK_STRENGTH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_CURE_LIGHT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_CURE_SERIOUS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_CURE_CRITICAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_HEALING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_STAR_HEALING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_LIFE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_RESTORE_MANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_RESTORE_EXP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_RES_STR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_RES_INT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_RES_WIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_RES_DEX");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_RES_CON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_RES_CHR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_INC_STR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_INC_INT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_INC_WIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_INC_DEX");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_INC_CON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_INC_CHR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_AUGMENTATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_ENLIGHTENMENT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_STAR_ENLIGHTENMENT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_SELF_KNOWLEDGE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_EXPERIENCE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_RESISTANCE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_CURING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_INVULNERABILITY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_NEW_LIFE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION_LAST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION2_MIMIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION2_CURE_LIGHT_SANITY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION2_CURE_SERIOUS_SANITY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION2_CURE_CRITICAL_SANITY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION2_CURE_SANITY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION2_CURE_WATER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_POTION2_LAST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_POISON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_BLINDNESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_PARANOIA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_CONFUSION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_HALLUCINATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_PARALYSIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_WEAKNESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_SICKNESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_STUPIDITY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_NAIVETY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_UNHEALTH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_DISEASE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_CURE_POISON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_CURE_BLINDNESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_CURE_PARANOIA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_CURE_CONFUSION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_CURE_SERIOUS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_RESTORE_STR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_RESTORE_CON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_RESTORING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_BISCUIT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_JERKY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_RATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_SLIME_MOLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_WAYBREAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_PINT_OF_ALE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_PINT_OF_WINE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_ATHELAS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_GREAT_HEALTH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_FOOD_FORTUNE_COOKIE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_POISON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_EXPLOSION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_TELEPORT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_ACID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_LIFE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_CONFUSION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_LITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_CHAOS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_TIME");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_MAGIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_XTRA_LIFE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_DARKNESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_KNOWLEDGE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_FORCE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_LIGHTNING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_BATERIE_MANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_CORPSE_CORPSE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_CORPSE_SKELETON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_CORPSE_HEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_CORPSE_SKULL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_CORPSE_MEAT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DEMONBLADE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DEMONSHIELD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SV_DEMONHORN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"IDENT_SENSE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"IDENT_FIXED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"IDENT_EMPTY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"IDENT_KNOWN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"IDENT_STOREB");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"IDENT_MENTAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"IDENT_CURSED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"OBJ_FOUND_MONSTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"OBJ_FOUND_FLOOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"OBJ_FOUND_VAULT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"OBJ_FOUND_SPECIAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"OBJ_FOUND_RUBBLE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"OBJ_FOUND_REWARD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"OBJ_FOUND_STORE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"OBJ_FOUND_STOLEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"OBJ_FOUND_SELFMADE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"obj_theme");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"object_kind");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"artifact_type");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ego_item_type");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"object_type");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SENSE_NONE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SENSE_CURSED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SENSE_AVERAGE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SENSE_GOOD_LIGHT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SENSE_GOOD_HEAVY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SENSE_EXCELLENT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SENSE_WORTHLESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SENSE_TERRIBLE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SENSE_SPECIAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SENSE_BROKEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SENSE_UNCURSED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"o_list");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"k_info");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"k_name"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"k_text"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"a_info");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"a_name"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"a_text"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"e_head"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"e_info");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"e_name"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"e_text"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"m_bonus");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"wield_slot_ideal");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"wield_slot");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"object_flags");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"object_desc");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"object_out_desc");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"inven_item_describe");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"inven_item_increase");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"inven_item_optimize");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"floor_item_describe");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"floor_item_increase");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"floor_item_optimize");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"delete_object_idx");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"o_pop");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_obj_num_prep");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ident_all");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_obj_num");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"lookup_kind");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"object_wipe");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"object_prep");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"object_copy");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"inven_carry_okay");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"apply_magic");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"make_object");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"drop_near");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_object");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"new_object");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"end_object");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_item_aux");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"lua_set_item_tester");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"is_magestaff");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"identify_pack_fully");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"inven_carry");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"calc_total_weight");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_slot");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"is_blessed");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"sense_desc");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"object_pickup");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"is_artifact");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"is_aware");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"is_known");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_aware");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_known");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"value_check_aux1");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"value_check_aux1_magic");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"value_check_aux2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"value_check_aux2_magic");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"select_sense");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"psychometry");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"remove_curse_object");
+}
diff -Nru --strip-trailing-cr tome-2.5.3/src/w_play_c.c tome-2.5.3-lua.files/src/w_play_c.c
--- tome-2.5.3/src/w_play_c.c	1969-12-31 16:00:00.000000000 -0800
+++ tome-2.5.3-lua.files/src/w_play_c.c	2010-09-26 07:37:17.000000000 -0700
@@ -0,0 +1,1963 @@
+/*
+** Lua binding: player_c
+** Generated automatically by tolua 4.0a - angband on Sun Sep 26 07:37:17 2010.
+*/
+
+#include "lua/tolua.h"
+
+/* Exported function */
+int tolua_player_c_open (lua_State* tolua_S);
+void tolua_player_c_close (lua_State* tolua_S);
+
+#include "angband.h"
+static cptr get_skill_name(int i) { return s_name + s_info[i].name; }
+static char *get_class_name() {return spp_ptr->title + c_name;}
+static char *get_race_name() {return rp_ptr->title + rp_name;}
+static char *get_subrace_name() {return rmp_ptr->title + rmp_name;}
+
+/* function to register type */
+static void toluaI_reg_types (lua_State* tolua_S)
+{
+ tolua_usertype(tolua_S,"player_class");
+ tolua_usertype(tolua_S,"skill_type");
+ tolua_usertype(tolua_S,"ability_type");
+}
+
+/* error messages */
+#define TOLUA_ERR_SELF tolua_error(tolua_S,"invalid 'self'")
+#define TOLUA_ERR_ASSIGN tolua_error(tolua_S,"#vinvalid type in variable assignment.")
+
+/* get function: title of class  player_class */
+static int toluaI_get_player_c_player_class_title(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->title);
+ return 1;
+}
+
+/* set function: title of class  player_class */
+static int toluaI_set_player_c_player_class_title(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->title = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: desc of class  player_class */
+static int toluaI_get_player_c_player_class_desc(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->desc);
+ return 1;
+}
+
+/* set function: desc of class  player_class */
+static int toluaI_set_player_c_player_class_desc(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->desc = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: titles of class  player_class */
+static int toluaI_get_player_c_player_class_titles(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_class* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_class*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=10)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->titles[toluaI_index]);
+ return 1;
+}
+
+/* set function: titles of class  player_class */
+static int toluaI_set_player_c_player_class_titles(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_class* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_class*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=10)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->titles[toluaI_index] = ((s32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: c_adj of class  player_class */
+static int toluaI_get_player_c_player_class_c_adj(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_class* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_class*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->c_adj[toluaI_index]);
+ return 1;
+}
+
+/* set function: c_adj of class  player_class */
+static int toluaI_set_player_c_player_class_c_adj(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_class* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_class*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->c_adj[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: c_dis of class  player_class */
+static int toluaI_get_player_c_player_class_c_dis(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->c_dis);
+ return 1;
+}
+
+/* set function: c_dis of class  player_class */
+static int toluaI_set_player_c_player_class_c_dis(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->c_dis = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: c_dev of class  player_class */
+static int toluaI_get_player_c_player_class_c_dev(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->c_dev);
+ return 1;
+}
+
+/* set function: c_dev of class  player_class */
+static int toluaI_set_player_c_player_class_c_dev(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->c_dev = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: c_sav of class  player_class */
+static int toluaI_get_player_c_player_class_c_sav(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->c_sav);
+ return 1;
+}
+
+/* set function: c_sav of class  player_class */
+static int toluaI_set_player_c_player_class_c_sav(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->c_sav = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: c_stl of class  player_class */
+static int toluaI_get_player_c_player_class_c_stl(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->c_stl);
+ return 1;
+}
+
+/* set function: c_stl of class  player_class */
+static int toluaI_set_player_c_player_class_c_stl(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->c_stl = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: c_srh of class  player_class */
+static int toluaI_get_player_c_player_class_c_srh(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->c_srh);
+ return 1;
+}
+
+/* set function: c_srh of class  player_class */
+static int toluaI_set_player_c_player_class_c_srh(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->c_srh = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: c_fos of class  player_class */
+static int toluaI_get_player_c_player_class_c_fos(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->c_fos);
+ return 1;
+}
+
+/* set function: c_fos of class  player_class */
+static int toluaI_set_player_c_player_class_c_fos(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->c_fos = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: c_thn of class  player_class */
+static int toluaI_get_player_c_player_class_c_thn(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->c_thn);
+ return 1;
+}
+
+/* set function: c_thn of class  player_class */
+static int toluaI_set_player_c_player_class_c_thn(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->c_thn = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: c_thb of class  player_class */
+static int toluaI_get_player_c_player_class_c_thb(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->c_thb);
+ return 1;
+}
+
+/* set function: c_thb of class  player_class */
+static int toluaI_set_player_c_player_class_c_thb(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->c_thb = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: x_dis of class  player_class */
+static int toluaI_get_player_c_player_class_x_dis(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->x_dis);
+ return 1;
+}
+
+/* set function: x_dis of class  player_class */
+static int toluaI_set_player_c_player_class_x_dis(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->x_dis = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: x_dev of class  player_class */
+static int toluaI_get_player_c_player_class_x_dev(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->x_dev);
+ return 1;
+}
+
+/* set function: x_dev of class  player_class */
+static int toluaI_set_player_c_player_class_x_dev(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->x_dev = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: x_sav of class  player_class */
+static int toluaI_get_player_c_player_class_x_sav(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->x_sav);
+ return 1;
+}
+
+/* set function: x_sav of class  player_class */
+static int toluaI_set_player_c_player_class_x_sav(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->x_sav = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: x_stl of class  player_class */
+static int toluaI_get_player_c_player_class_x_stl(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->x_stl);
+ return 1;
+}
+
+/* set function: x_stl of class  player_class */
+static int toluaI_set_player_c_player_class_x_stl(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->x_stl = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: x_srh of class  player_class */
+static int toluaI_get_player_c_player_class_x_srh(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->x_srh);
+ return 1;
+}
+
+/* set function: x_srh of class  player_class */
+static int toluaI_set_player_c_player_class_x_srh(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->x_srh = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: x_fos of class  player_class */
+static int toluaI_get_player_c_player_class_x_fos(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->x_fos);
+ return 1;
+}
+
+/* set function: x_fos of class  player_class */
+static int toluaI_set_player_c_player_class_x_fos(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->x_fos = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: x_thn of class  player_class */
+static int toluaI_get_player_c_player_class_x_thn(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->x_thn);
+ return 1;
+}
+
+/* set function: x_thn of class  player_class */
+static int toluaI_set_player_c_player_class_x_thn(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->x_thn = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: x_thb of class  player_class */
+static int toluaI_get_player_c_player_class_x_thb(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->x_thb);
+ return 1;
+}
+
+/* set function: x_thb of class  player_class */
+static int toluaI_set_player_c_player_class_x_thb(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->x_thb = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: c_mhp of class  player_class */
+static int toluaI_get_player_c_player_class_c_mhp(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->c_mhp);
+ return 1;
+}
+
+/* set function: c_mhp of class  player_class */
+static int toluaI_set_player_c_player_class_c_mhp(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->c_mhp = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: c_exp of class  player_class */
+static int toluaI_get_player_c_player_class_c_exp(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->c_exp);
+ return 1;
+}
+
+/* set function: c_exp of class  player_class */
+static int toluaI_set_player_c_player_class_c_exp(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->c_exp = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: powers of class  player_class */
+static int toluaI_get_player_c_player_class_powers(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_class* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_class*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->powers[toluaI_index]);
+ return 1;
+}
+
+/* set function: powers of class  player_class */
+static int toluaI_set_player_c_player_class_powers(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_class* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_class*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->powers[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: spell_book of class  player_class */
+static int toluaI_get_player_c_player_class_spell_book(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->spell_book);
+ return 1;
+}
+
+/* set function: spell_book of class  player_class */
+static int toluaI_set_player_c_player_class_spell_book(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->spell_book = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: spell_stat of class  player_class */
+static int toluaI_get_player_c_player_class_spell_stat(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->spell_stat);
+ return 1;
+}
+
+/* set function: spell_stat of class  player_class */
+static int toluaI_set_player_c_player_class_spell_stat(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->spell_stat = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: spell_lev of class  player_class */
+static int toluaI_get_player_c_player_class_spell_lev(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->spell_lev);
+ return 1;
+}
+
+/* set function: spell_lev of class  player_class */
+static int toluaI_set_player_c_player_class_spell_lev(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->spell_lev = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: spell_fail of class  player_class */
+static int toluaI_get_player_c_player_class_spell_fail(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->spell_fail);
+ return 1;
+}
+
+/* set function: spell_fail of class  player_class */
+static int toluaI_set_player_c_player_class_spell_fail(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->spell_fail = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: spell_mana of class  player_class */
+static int toluaI_get_player_c_player_class_spell_mana(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->spell_mana);
+ return 1;
+}
+
+/* set function: spell_mana of class  player_class */
+static int toluaI_set_player_c_player_class_spell_mana(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->spell_mana = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: spell_first of class  player_class */
+static int toluaI_get_player_c_player_class_spell_first(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->spell_first);
+ return 1;
+}
+
+/* set function: spell_first of class  player_class */
+static int toluaI_set_player_c_player_class_spell_first(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->spell_first = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: spell_weight of class  player_class */
+static int toluaI_get_player_c_player_class_spell_weight(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->spell_weight);
+ return 1;
+}
+
+/* set function: spell_weight of class  player_class */
+static int toluaI_set_player_c_player_class_spell_weight(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->spell_weight = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: max_spell_level of class  player_class */
+static int toluaI_get_player_c_player_class_max_spell_level(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->max_spell_level);
+ return 1;
+}
+
+/* set function: max_spell_level of class  player_class */
+static int toluaI_set_player_c_player_class_max_spell_level(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->max_spell_level = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: magic_max_spell of class  player_class */
+static int toluaI_get_player_c_player_class_magic_max_spell(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->magic_max_spell);
+ return 1;
+}
+
+/* set function: magic_max_spell of class  player_class */
+static int toluaI_set_player_c_player_class_magic_max_spell(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->magic_max_spell = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags1 of class  player_class */
+static int toluaI_get_player_c_player_class_flags1(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags1);
+ return 1;
+}
+
+/* set function: flags1 of class  player_class */
+static int toluaI_set_player_c_player_class_flags1(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags1 = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mana of class  player_class */
+static int toluaI_get_player_c_player_class_mana(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mana);
+ return 1;
+}
+
+/* set function: mana of class  player_class */
+static int toluaI_set_player_c_player_class_mana(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mana = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: blow_num of class  player_class */
+static int toluaI_get_player_c_player_class_blow_num(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->blow_num);
+ return 1;
+}
+
+/* set function: blow_num of class  player_class */
+static int toluaI_set_player_c_player_class_blow_num(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->blow_num = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: blow_wgt of class  player_class */
+static int toluaI_get_player_c_player_class_blow_wgt(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->blow_wgt);
+ return 1;
+}
+
+/* set function: blow_wgt of class  player_class */
+static int toluaI_set_player_c_player_class_blow_wgt(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->blow_wgt = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: blow_mul of class  player_class */
+static int toluaI_get_player_c_player_class_blow_mul(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->blow_mul);
+ return 1;
+}
+
+/* set function: blow_mul of class  player_class */
+static int toluaI_set_player_c_player_class_blow_mul(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->blow_mul = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: extra_blows of class  player_class */
+static int toluaI_get_player_c_player_class_extra_blows(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->extra_blows);
+ return 1;
+}
+
+/* set function: extra_blows of class  player_class */
+static int toluaI_set_player_c_player_class_extra_blows(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->extra_blows = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sense_base of class  player_class */
+static int toluaI_get_player_c_player_class_sense_base(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sense_base);
+ return 1;
+}
+
+/* set function: sense_base of class  player_class */
+static int toluaI_set_player_c_player_class_sense_base(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sense_base = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sense_pl of class  player_class */
+static int toluaI_get_player_c_player_class_sense_pl(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sense_pl);
+ return 1;
+}
+
+/* set function: sense_pl of class  player_class */
+static int toluaI_set_player_c_player_class_sense_pl(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sense_pl = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sense_plus of class  player_class */
+static int toluaI_get_player_c_player_class_sense_plus(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sense_plus);
+ return 1;
+}
+
+/* set function: sense_plus of class  player_class */
+static int toluaI_set_player_c_player_class_sense_plus(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sense_plus = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sense_heavy of class  player_class */
+static int toluaI_get_player_c_player_class_sense_heavy(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sense_heavy);
+ return 1;
+}
+
+/* set function: sense_heavy of class  player_class */
+static int toluaI_set_player_c_player_class_sense_heavy(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sense_heavy = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sense_heavy_magic of class  player_class */
+static int toluaI_get_player_c_player_class_sense_heavy_magic(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sense_heavy_magic);
+ return 1;
+}
+
+/* set function: sense_heavy_magic of class  player_class */
+static int toluaI_set_player_c_player_class_sense_heavy_magic(lua_State* tolua_S)
+{
+  player_class* self = (player_class*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sense_heavy_magic = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: cp_ptr */
+static int toluaI_get_player_c_cp_ptr(lua_State* tolua_S)
+{
+ tolua_pushusertype(tolua_S,(void*)cp_ptr,tolua_tag(tolua_S,"player_class"));
+ return 1;
+}
+
+/* set function: cp_ptr */
+static int toluaI_set_player_c_cp_ptr(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,tolua_tag(tolua_S,"player_class"),0))
+ TOLUA_ERR_ASSIGN;
+  cp_ptr = ((player_class*)  tolua_getusertype(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: name of class  skill_type */
+static int toluaI_get_player_c_skill_type_name(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->name);
+ return 1;
+}
+
+/* set function: name of class  skill_type */
+static int toluaI_set_player_c_skill_type_name(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->name = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: desc of class  skill_type */
+static int toluaI_get_player_c_skill_type_desc(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->desc);
+ return 1;
+}
+
+/* set function: desc of class  skill_type */
+static int toluaI_set_player_c_skill_type_desc(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->desc = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: action_desc of class  skill_type */
+static int toluaI_get_player_c_skill_type_action_desc(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->action_desc);
+ return 1;
+}
+
+/* set function: action_desc of class  skill_type */
+static int toluaI_set_player_c_skill_type_action_desc(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->action_desc = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: action_mkey of class  skill_type */
+static int toluaI_get_player_c_skill_type_action_mkey(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->action_mkey);
+ return 1;
+}
+
+/* set function: action_mkey of class  skill_type */
+static int toluaI_set_player_c_skill_type_action_mkey(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->action_mkey = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: i_value of class  skill_type */
+static int toluaI_get_player_c_skill_type_i_value(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->i_value);
+ return 1;
+}
+
+/* set function: i_value of class  skill_type */
+static int toluaI_set_player_c_skill_type_i_value(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->i_value = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: i_mod of class  skill_type */
+static int toluaI_get_player_c_skill_type_i_mod(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->i_mod);
+ return 1;
+}
+
+/* set function: i_mod of class  skill_type */
+static int toluaI_set_player_c_skill_type_i_mod(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->i_mod = ((u16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: value of class  skill_type */
+static int toluaI_get_player_c_skill_type_value(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->value);
+ return 1;
+}
+
+/* set function: value of class  skill_type */
+static int toluaI_set_player_c_skill_type_value(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->value = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mod of class  skill_type */
+static int toluaI_get_player_c_skill_type_mod(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mod);
+ return 1;
+}
+
+/* set function: mod of class  skill_type */
+static int toluaI_set_player_c_skill_type_mod(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mod = ((u16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: rate of class  skill_type */
+static int toluaI_get_player_c_skill_type_rate(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->rate);
+ return 1;
+}
+
+/* set function: rate of class  skill_type */
+static int toluaI_set_player_c_skill_type_rate(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->rate = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: uses of class  skill_type */
+static int toluaI_get_player_c_skill_type_uses(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->uses);
+ return 1;
+}
+
+/* set function: uses of class  skill_type */
+static int toluaI_set_player_c_skill_type_uses(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->uses = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: action of class  skill_type */
+static int toluaI_get_player_c_skill_type_action(lua_State* tolua_S)
+{
+ int toluaI_index;
+  skill_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (skill_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=9999)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->action[toluaI_index]);
+ return 1;
+}
+
+/* set function: action of class  skill_type */
+static int toluaI_set_player_c_skill_type_action(lua_State* tolua_S)
+{
+ int toluaI_index;
+  skill_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (skill_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=9999)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->action[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: father of class  skill_type */
+static int toluaI_get_player_c_skill_type_father(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->father);
+ return 1;
+}
+
+/* set function: father of class  skill_type */
+static int toluaI_set_player_c_skill_type_father(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->father = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: dev of class  skill_type */
+static int toluaI_get_player_c_skill_type_dev(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->dev);
+ return 1;
+}
+
+/* set function: dev of class  skill_type */
+static int toluaI_set_player_c_skill_type_dev(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->dev = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: order of class  skill_type */
+static int toluaI_get_player_c_skill_type_order(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->order);
+ return 1;
+}
+
+/* set function: order of class  skill_type */
+static int toluaI_set_player_c_skill_type_order(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->order = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: hidden of class  skill_type */
+static int toluaI_get_player_c_skill_type_hidden(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->hidden);
+ return 1;
+}
+
+/* set function: hidden of class  skill_type */
+static int toluaI_set_player_c_skill_type_hidden(lua_State* tolua_S)
+{
+  skill_type* self = (skill_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->hidden = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* function: get_skill_name */
+static int toluaI_player_c_get_skill_name00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int i = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  cptr toluaI_ret = (cptr)  get_skill_name(i);
+ tolua_pushstring(tolua_S,(const char*)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_skill_name'.");
+ return 0;
+}
+
+/* get function: old_max_s_idx */
+static int toluaI_get_player_c_old_max_s_idx(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)old_max_s_idx);
+ return 1;
+}
+
+/* set function: old_max_s_idx */
+static int toluaI_set_player_c_old_max_s_idx(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  old_max_s_idx = ((u16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: max_s_idx */
+static int toluaI_get_player_c_max_s_idx(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)max_s_idx);
+ return 1;
+}
+
+/* set function: max_s_idx */
+static int toluaI_set_player_c_max_s_idx(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  max_s_idx = ((u16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: s_info */
+static int toluaI_get_player_c_s_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_SKILLS)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&s_info[toluaI_index],tolua_tag(tolua_S,"skill_type"));
+ return 1;
+}
+
+/* set function: s_info */
+static int toluaI_set_player_c_s_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_SKILLS)
+ tolua_error(tolua_S,"array indexing out of range.");
+  s_info[toluaI_index] = *((skill_type*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* function: get_skill */
+static int toluaI_player_c_get_skill00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int skill = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  s16b toluaI_ret = (s16b)  get_skill(skill);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_skill'.");
+ return 0;
+}
+
+/* function: get_skill_scale */
+static int toluaI_player_c_get_skill_scale00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int skill = ((int)  tolua_getnumber(tolua_S,1,0));
+  u32b scale = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ {
+  s16b toluaI_ret = (s16b)  get_skill_scale(skill,scale);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_skill_scale'.");
+ return 0;
+}
+
+/* function: do_get_new_skill */
+static int toluaI_player_c_do_get_new_skill00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  do_get_new_skill();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'do_get_new_skill'.");
+ return 0;
+}
+
+/* function: get_melee_skills */
+static int toluaI_player_c_get_melee_skills00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  s16b toluaI_ret = (s16b)  get_melee_skills();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_melee_skills'.");
+ return 0;
+}
+
+/* function: find_skill */
+static int toluaI_player_c_find_skill00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr name = ((cptr)  tolua_getstring(tolua_S,1,0));
+ {
+  s16b toluaI_ret = (s16b)  find_skill(name);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'find_skill'.");
+ return 0;
+}
+
+/* function: find_skill_i */
+static int toluaI_player_c_find_skill_i00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr name = ((cptr)  tolua_getstring(tolua_S,1,0));
+ {
+  s16b toluaI_ret = (s16b)  find_skill_i(name);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'find_skill_i'.");
+ return 0;
+}
+
+/* function: get_class_name */
+static int toluaI_player_c_get_class_name00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  char* toluaI_ret = (char*)  get_class_name();
+ tolua_pushstring(tolua_S,(const char*)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_class_name'.");
+ return 0;
+}
+
+/* function: get_race_name */
+static int toluaI_player_c_get_race_name00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  char* toluaI_ret = (char*)  get_race_name();
+ tolua_pushstring(tolua_S,(const char*)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_race_name'.");
+ return 0;
+}
+
+/* function: get_subrace_name */
+static int toluaI_player_c_get_subrace_name00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  char* toluaI_ret = (char*)  get_subrace_name();
+ tolua_pushstring(tolua_S,(const char*)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_subrace_name'.");
+ return 0;
+}
+
+/* get function: action_mkey of class  ability_type */
+static int toluaI_get_player_c_ability_type_action_mkey(lua_State* tolua_S)
+{
+  ability_type* self = (ability_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->action_mkey);
+ return 1;
+}
+
+/* set function: action_mkey of class  ability_type */
+static int toluaI_set_player_c_ability_type_action_mkey(lua_State* tolua_S)
+{
+  ability_type* self = (ability_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->action_mkey = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: cost of class  ability_type */
+static int toluaI_get_player_c_ability_type_cost(lua_State* tolua_S)
+{
+  ability_type* self = (ability_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->cost);
+ return 1;
+}
+
+/* set function: cost of class  ability_type */
+static int toluaI_set_player_c_ability_type_cost(lua_State* tolua_S)
+{
+  ability_type* self = (ability_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->cost = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: acquired of class  ability_type */
+static int toluaI_get_player_c_ability_type_acquired(lua_State* tolua_S)
+{
+  ability_type* self = (ability_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->acquired);
+ return 1;
+}
+
+/* set function: acquired of class  ability_type */
+static int toluaI_set_player_c_ability_type_acquired(lua_State* tolua_S)
+{
+  ability_type* self = (ability_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->acquired = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* function: find_ability */
+static int toluaI_player_c_find_ability00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr name = ((cptr)  tolua_getstring(tolua_S,1,0));
+ {
+  s16b toluaI_ret = (s16b)  find_ability(name);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'find_ability'.");
+ return 0;
+}
+
+/* function: do_cmd_ability */
+static int toluaI_player_c_do_cmd_ability00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  do_cmd_ability();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'do_cmd_ability'.");
+ return 0;
+}
+
+/* function: has_ability */
+static int toluaI_player_c_has_ability00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int ab = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  has_ability(ab);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'has_ability'.");
+ return 0;
+}
+
+/* get function: max_ab_idx */
+static int toluaI_get_player_c_max_ab_idx(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)max_ab_idx);
+ return 1;
+}
+
+/* set function: max_ab_idx */
+static int toluaI_set_player_c_max_ab_idx(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  max_ab_idx = ((s16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ab_info */
+static int toluaI_get_player_c_ab_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_ab_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&ab_info[toluaI_index],tolua_tag(tolua_S,"ability_type"));
+ return 1;
+}
+
+/* set function: ab_info */
+static int toluaI_set_player_c_ab_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_ab_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  ab_info[toluaI_index] = *((ability_type*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* Open function */
+int tolua_player_c_open (lua_State* tolua_S)
+{
+ tolua_open(tolua_S);
+ toluaI_reg_types(tolua_S);
+ tolua_cclass(tolua_S,"player_class","");
+ tolua_tablevar(tolua_S,"player_class","title",toluaI_get_player_c_player_class_title,toluaI_set_player_c_player_class_title);
+ tolua_tablevar(tolua_S,"player_class","desc",toluaI_get_player_c_player_class_desc,toluaI_set_player_c_player_class_desc);
+ tolua_tablearray(tolua_S,"player_class","titles",toluaI_get_player_c_player_class_titles,toluaI_set_player_c_player_class_titles);
+ tolua_tablearray(tolua_S,"player_class","c_adj",toluaI_get_player_c_player_class_c_adj,toluaI_set_player_c_player_class_c_adj);
+ tolua_tablevar(tolua_S,"player_class","c_dis",toluaI_get_player_c_player_class_c_dis,toluaI_set_player_c_player_class_c_dis);
+ tolua_tablevar(tolua_S,"player_class","c_dev",toluaI_get_player_c_player_class_c_dev,toluaI_set_player_c_player_class_c_dev);
+ tolua_tablevar(tolua_S,"player_class","c_sav",toluaI_get_player_c_player_class_c_sav,toluaI_set_player_c_player_class_c_sav);
+ tolua_tablevar(tolua_S,"player_class","c_stl",toluaI_get_player_c_player_class_c_stl,toluaI_set_player_c_player_class_c_stl);
+ tolua_tablevar(tolua_S,"player_class","c_srh",toluaI_get_player_c_player_class_c_srh,toluaI_set_player_c_player_class_c_srh);
+ tolua_tablevar(tolua_S,"player_class","c_fos",toluaI_get_player_c_player_class_c_fos,toluaI_set_player_c_player_class_c_fos);
+ tolua_tablevar(tolua_S,"player_class","c_thn",toluaI_get_player_c_player_class_c_thn,toluaI_set_player_c_player_class_c_thn);
+ tolua_tablevar(tolua_S,"player_class","c_thb",toluaI_get_player_c_player_class_c_thb,toluaI_set_player_c_player_class_c_thb);
+ tolua_tablevar(tolua_S,"player_class","x_dis",toluaI_get_player_c_player_class_x_dis,toluaI_set_player_c_player_class_x_dis);
+ tolua_tablevar(tolua_S,"player_class","x_dev",toluaI_get_player_c_player_class_x_dev,toluaI_set_player_c_player_class_x_dev);
+ tolua_tablevar(tolua_S,"player_class","x_sav",toluaI_get_player_c_player_class_x_sav,toluaI_set_player_c_player_class_x_sav);
+ tolua_tablevar(tolua_S,"player_class","x_stl",toluaI_get_player_c_player_class_x_stl,toluaI_set_player_c_player_class_x_stl);
+ tolua_tablevar(tolua_S,"player_class","x_srh",toluaI_get_player_c_player_class_x_srh,toluaI_set_player_c_player_class_x_srh);
+ tolua_tablevar(tolua_S,"player_class","x_fos",toluaI_get_player_c_player_class_x_fos,toluaI_set_player_c_player_class_x_fos);
+ tolua_tablevar(tolua_S,"player_class","x_thn",toluaI_get_player_c_player_class_x_thn,toluaI_set_player_c_player_class_x_thn);
+ tolua_tablevar(tolua_S,"player_class","x_thb",toluaI_get_player_c_player_class_x_thb,toluaI_set_player_c_player_class_x_thb);
+ tolua_tablevar(tolua_S,"player_class","c_mhp",toluaI_get_player_c_player_class_c_mhp,toluaI_set_player_c_player_class_c_mhp);
+ tolua_tablevar(tolua_S,"player_class","c_exp",toluaI_get_player_c_player_class_c_exp,toluaI_set_player_c_player_class_c_exp);
+ tolua_tablearray(tolua_S,"player_class","powers",toluaI_get_player_c_player_class_powers,toluaI_set_player_c_player_class_powers);
+ tolua_tablevar(tolua_S,"player_class","spell_book",toluaI_get_player_c_player_class_spell_book,toluaI_set_player_c_player_class_spell_book);
+ tolua_tablevar(tolua_S,"player_class","spell_stat",toluaI_get_player_c_player_class_spell_stat,toluaI_set_player_c_player_class_spell_stat);
+ tolua_tablevar(tolua_S,"player_class","spell_lev",toluaI_get_player_c_player_class_spell_lev,toluaI_set_player_c_player_class_spell_lev);
+ tolua_tablevar(tolua_S,"player_class","spell_fail",toluaI_get_player_c_player_class_spell_fail,toluaI_set_player_c_player_class_spell_fail);
+ tolua_tablevar(tolua_S,"player_class","spell_mana",toluaI_get_player_c_player_class_spell_mana,toluaI_set_player_c_player_class_spell_mana);
+ tolua_tablevar(tolua_S,"player_class","spell_first",toluaI_get_player_c_player_class_spell_first,toluaI_set_player_c_player_class_spell_first);
+ tolua_tablevar(tolua_S,"player_class","spell_weight",toluaI_get_player_c_player_class_spell_weight,toluaI_set_player_c_player_class_spell_weight);
+ tolua_tablevar(tolua_S,"player_class","max_spell_level",toluaI_get_player_c_player_class_max_spell_level,toluaI_set_player_c_player_class_max_spell_level);
+ tolua_tablevar(tolua_S,"player_class","magic_max_spell",toluaI_get_player_c_player_class_magic_max_spell,toluaI_set_player_c_player_class_magic_max_spell);
+ tolua_tablevar(tolua_S,"player_class","flags1",toluaI_get_player_c_player_class_flags1,toluaI_set_player_c_player_class_flags1);
+ tolua_tablevar(tolua_S,"player_class","mana",toluaI_get_player_c_player_class_mana,toluaI_set_player_c_player_class_mana);
+ tolua_tablevar(tolua_S,"player_class","blow_num",toluaI_get_player_c_player_class_blow_num,toluaI_set_player_c_player_class_blow_num);
+ tolua_tablevar(tolua_S,"player_class","blow_wgt",toluaI_get_player_c_player_class_blow_wgt,toluaI_set_player_c_player_class_blow_wgt);
+ tolua_tablevar(tolua_S,"player_class","blow_mul",toluaI_get_player_c_player_class_blow_mul,toluaI_set_player_c_player_class_blow_mul);
+ tolua_tablevar(tolua_S,"player_class","extra_blows",toluaI_get_player_c_player_class_extra_blows,toluaI_set_player_c_player_class_extra_blows);
+ tolua_tablevar(tolua_S,"player_class","sense_base",toluaI_get_player_c_player_class_sense_base,toluaI_set_player_c_player_class_sense_base);
+ tolua_tablevar(tolua_S,"player_class","sense_pl",toluaI_get_player_c_player_class_sense_pl,toluaI_set_player_c_player_class_sense_pl);
+ tolua_tablevar(tolua_S,"player_class","sense_plus",toluaI_get_player_c_player_class_sense_plus,toluaI_set_player_c_player_class_sense_plus);
+ tolua_tablevar(tolua_S,"player_class","sense_heavy",toluaI_get_player_c_player_class_sense_heavy,toluaI_set_player_c_player_class_sense_heavy);
+ tolua_tablevar(tolua_S,"player_class","sense_heavy_magic",toluaI_get_player_c_player_class_sense_heavy_magic,toluaI_set_player_c_player_class_sense_heavy_magic);
+ tolua_globalvar(tolua_S,"cp_ptr",toluaI_get_player_c_cp_ptr,toluaI_set_player_c_cp_ptr);
+ tolua_cclass(tolua_S,"skill_type","");
+ tolua_tablevar(tolua_S,"skill_type","name",toluaI_get_player_c_skill_type_name,toluaI_set_player_c_skill_type_name);
+ tolua_tablevar(tolua_S,"skill_type","desc",toluaI_get_player_c_skill_type_desc,toluaI_set_player_c_skill_type_desc);
+ tolua_tablevar(tolua_S,"skill_type","action_desc",toluaI_get_player_c_skill_type_action_desc,toluaI_set_player_c_skill_type_action_desc);
+ tolua_tablevar(tolua_S,"skill_type","action_mkey",toluaI_get_player_c_skill_type_action_mkey,toluaI_set_player_c_skill_type_action_mkey);
+ tolua_tablevar(tolua_S,"skill_type","i_value",toluaI_get_player_c_skill_type_i_value,toluaI_set_player_c_skill_type_i_value);
+ tolua_tablevar(tolua_S,"skill_type","i_mod",toluaI_get_player_c_skill_type_i_mod,toluaI_set_player_c_skill_type_i_mod);
+ tolua_tablevar(tolua_S,"skill_type","value",toluaI_get_player_c_skill_type_value,toluaI_set_player_c_skill_type_value);
+ tolua_tablevar(tolua_S,"skill_type","mod",toluaI_get_player_c_skill_type_mod,toluaI_set_player_c_skill_type_mod);
+ tolua_tablevar(tolua_S,"skill_type","rate",toluaI_get_player_c_skill_type_rate,toluaI_set_player_c_skill_type_rate);
+ tolua_tablevar(tolua_S,"skill_type","uses",toluaI_get_player_c_skill_type_uses,toluaI_set_player_c_skill_type_uses);
+ tolua_tablearray(tolua_S,"skill_type","action",toluaI_get_player_c_skill_type_action,toluaI_set_player_c_skill_type_action);
+ tolua_tablevar(tolua_S,"skill_type","father",toluaI_get_player_c_skill_type_father,toluaI_set_player_c_skill_type_father);
+ tolua_tablevar(tolua_S,"skill_type","dev",toluaI_get_player_c_skill_type_dev,toluaI_set_player_c_skill_type_dev);
+ tolua_tablevar(tolua_S,"skill_type","order",toluaI_get_player_c_skill_type_order,toluaI_set_player_c_skill_type_order);
+ tolua_tablevar(tolua_S,"skill_type","hidden",toluaI_get_player_c_skill_type_hidden,toluaI_set_player_c_skill_type_hidden);
+ tolua_constant(tolua_S,NULL,"MAX_SKILLS",MAX_SKILLS);
+ tolua_function(tolua_S,NULL,"get_skill_name",toluaI_player_c_get_skill_name00);
+ tolua_globalvar(tolua_S,"old_max_s_idx",toluaI_get_player_c_old_max_s_idx,toluaI_set_player_c_old_max_s_idx);
+ tolua_globalvar(tolua_S,"max_s_idx",toluaI_get_player_c_max_s_idx,toluaI_set_player_c_max_s_idx);
+ tolua_globalarray(tolua_S,"s_info",toluaI_get_player_c_s_info,toluaI_set_player_c_s_info);
+ tolua_constant(tolua_S,NULL,"SKILL_CONVEYANCE",SKILL_CONVEYANCE);
+ tolua_constant(tolua_S,NULL,"SKILL_MANA",SKILL_MANA);
+ tolua_constant(tolua_S,NULL,"SKILL_FIRE",SKILL_FIRE);
+ tolua_constant(tolua_S,NULL,"SKILL_AIR",SKILL_AIR);
+ tolua_constant(tolua_S,NULL,"SKILL_WATER",SKILL_WATER);
+ tolua_constant(tolua_S,NULL,"SKILL_NATURE",SKILL_NATURE);
+ tolua_constant(tolua_S,NULL,"SKILL_EARTH",SKILL_EARTH);
+ tolua_constant(tolua_S,NULL,"SKILL_SYMBIOTIC",SKILL_SYMBIOTIC);
+ tolua_constant(tolua_S,NULL,"SKILL_MUSIC",SKILL_MUSIC);
+ tolua_constant(tolua_S,NULL,"SKILL_DIVINATION",SKILL_DIVINATION);
+ tolua_constant(tolua_S,NULL,"SKILL_TEMPORAL",SKILL_TEMPORAL);
+ tolua_constant(tolua_S,NULL,"SKILL_DRUID",SKILL_DRUID);
+ tolua_constant(tolua_S,NULL,"SKILL_DAEMON",SKILL_DAEMON);
+ tolua_constant(tolua_S,NULL,"SKILL_META",SKILL_META);
+ tolua_constant(tolua_S,NULL,"SKILL_MAGIC",SKILL_MAGIC);
+ tolua_constant(tolua_S,NULL,"SKILL_COMBAT",SKILL_COMBAT);
+ tolua_constant(tolua_S,NULL,"SKILL_MASTERY",SKILL_MASTERY);
+ tolua_constant(tolua_S,NULL,"SKILL_SWORD",SKILL_SWORD);
+ tolua_constant(tolua_S,NULL,"SKILL_AXE",SKILL_AXE);
+ tolua_constant(tolua_S,NULL,"SKILL_POLEARM",SKILL_POLEARM);
+ tolua_constant(tolua_S,NULL,"SKILL_HAFTED",SKILL_HAFTED);
+ tolua_constant(tolua_S,NULL,"SKILL_BACKSTAB",SKILL_BACKSTAB);
+ tolua_constant(tolua_S,NULL,"SKILL_ARCHERY",SKILL_ARCHERY);
+ tolua_constant(tolua_S,NULL,"SKILL_SLING",SKILL_SLING);
+ tolua_constant(tolua_S,NULL,"SKILL_BOW",SKILL_BOW);
+ tolua_constant(tolua_S,NULL,"SKILL_XBOW",SKILL_XBOW);
+ tolua_constant(tolua_S,NULL,"SKILL_BOOMERANG",SKILL_BOOMERANG);
+ tolua_constant(tolua_S,NULL,"SKILL_SPIRITUALITY",SKILL_SPIRITUALITY);
+ tolua_constant(tolua_S,NULL,"SKILL_MINDCRAFT",SKILL_MINDCRAFT);
+ tolua_constant(tolua_S,NULL,"SKILL_MISC",SKILL_MISC);
+ tolua_constant(tolua_S,NULL,"SKILL_NECROMANCY",SKILL_NECROMANCY);
+ tolua_constant(tolua_S,NULL,"SKILL_MIMICRY",SKILL_MIMICRY);
+ tolua_constant(tolua_S,NULL,"SKILL_ANTIMAGIC",SKILL_ANTIMAGIC);
+ tolua_constant(tolua_S,NULL,"SKILL_RUNECRAFT",SKILL_RUNECRAFT);
+ tolua_constant(tolua_S,NULL,"SKILL_SNEAK",SKILL_SNEAK);
+ tolua_constant(tolua_S,NULL,"SKILL_STEALTH",SKILL_STEALTH);
+ tolua_constant(tolua_S,NULL,"SKILL_DISARMING",SKILL_DISARMING);
+ tolua_constant(tolua_S,NULL,"SKILL_ALCHEMY",SKILL_ALCHEMY);
+ tolua_constant(tolua_S,NULL,"SKILL_STEALING",SKILL_STEALING);
+ tolua_constant(tolua_S,NULL,"SKILL_SORCERY",SKILL_SORCERY);
+ tolua_constant(tolua_S,NULL,"SKILL_HAND",SKILL_HAND);
+ tolua_constant(tolua_S,NULL,"SKILL_THAUMATURGY",SKILL_THAUMATURGY);
+ tolua_constant(tolua_S,NULL,"SKILL_SUMMON",SKILL_SUMMON);
+ tolua_constant(tolua_S,NULL,"SKILL_SPELL",SKILL_SPELL);
+ tolua_constant(tolua_S,NULL,"SKILL_DODGE",SKILL_DODGE);
+ tolua_constant(tolua_S,NULL,"SKILL_BEAR",SKILL_BEAR);
+ tolua_constant(tolua_S,NULL,"SKILL_LORE",SKILL_LORE);
+ tolua_constant(tolua_S,NULL,"SKILL_PRESERVATION",SKILL_PRESERVATION);
+ tolua_constant(tolua_S,NULL,"SKILL_POSSESSION",SKILL_POSSESSION);
+ tolua_constant(tolua_S,NULL,"SKILL_MIND",SKILL_MIND);
+ tolua_constant(tolua_S,NULL,"SKILL_CRITS",SKILL_CRITS);
+ tolua_constant(tolua_S,NULL,"SKILL_PRAY",SKILL_PRAY);
+ tolua_constant(tolua_S,NULL,"SKILL_LEARN",SKILL_LEARN);
+ tolua_constant(tolua_S,NULL,"SKILL_UDUN",SKILL_UDUN);
+ tolua_constant(tolua_S,NULL,"SKILL_DEVICE",SKILL_DEVICE);
+ tolua_constant(tolua_S,NULL,"SKILL_STUN",SKILL_STUN);
+ tolua_constant(tolua_S,NULL,"SKILL_BOULDER",SKILL_BOULDER);
+ tolua_constant(tolua_S,NULL,"SKILL_GEOMANCY",SKILL_GEOMANCY);
+ tolua_constant(tolua_S,NULL,"SKILL_MAX",SKILL_MAX);
+ tolua_constant(tolua_S,NULL,"SKILL_STEP",SKILL_STEP);
+ tolua_function(tolua_S,NULL,"get_skill",toluaI_player_c_get_skill00);
+ tolua_function(tolua_S,NULL,"get_skill_scale",toluaI_player_c_get_skill_scale00);
+ tolua_function(tolua_S,NULL,"do_get_new_skill",toluaI_player_c_do_get_new_skill00);
+ tolua_function(tolua_S,NULL,"get_melee_skills",toluaI_player_c_get_melee_skills00);
+ tolua_function(tolua_S,NULL,"find_skill",toluaI_player_c_find_skill00);
+ tolua_function(tolua_S,NULL,"find_skill_i",toluaI_player_c_find_skill_i00);
+ tolua_function(tolua_S,NULL,"get_class_name",toluaI_player_c_get_class_name00);
+ tolua_function(tolua_S,NULL,"get_race_name",toluaI_player_c_get_race_name00);
+ tolua_function(tolua_S,NULL,"get_subrace_name",toluaI_player_c_get_subrace_name00);
+ tolua_cclass(tolua_S,"ability_type","");
+ tolua_tablevar(tolua_S,"ability_type","action_mkey",toluaI_get_player_c_ability_type_action_mkey,toluaI_set_player_c_ability_type_action_mkey);
+ tolua_tablevar(tolua_S,"ability_type","cost",toluaI_get_player_c_ability_type_cost,toluaI_set_player_c_ability_type_cost);
+ tolua_tablevar(tolua_S,"ability_type","acquired",toluaI_get_player_c_ability_type_acquired,toluaI_set_player_c_ability_type_acquired);
+ tolua_function(tolua_S,NULL,"find_ability",toluaI_player_c_find_ability00);
+ tolua_function(tolua_S,NULL,"do_cmd_ability",toluaI_player_c_do_cmd_ability00);
+ tolua_function(tolua_S,NULL,"has_ability",toluaI_player_c_has_ability00);
+ tolua_globalvar(tolua_S,"max_ab_idx",toluaI_get_player_c_max_ab_idx,toluaI_set_player_c_max_ab_idx);
+ tolua_globalarray(tolua_S,"ab_info",toluaI_get_player_c_ab_info,toluaI_set_player_c_ab_info);
+ tolua_constant(tolua_S,NULL,"AB_SPREAD_BLOWS",AB_SPREAD_BLOWS);
+ tolua_constant(tolua_S,NULL,"AB_TREE_WALK",AB_TREE_WALK);
+ tolua_constant(tolua_S,NULL,"AB_PERFECT_CASTING",AB_PERFECT_CASTING);
+ tolua_constant(tolua_S,NULL,"AB_MAX_BLOW1",AB_MAX_BLOW1);
+ tolua_constant(tolua_S,NULL,"AB_MAX_BLOW2",AB_MAX_BLOW2);
+ tolua_constant(tolua_S,NULL,"AB_AMMO_CREATION",AB_AMMO_CREATION);
+ tolua_constant(tolua_S,NULL,"AB_DEATH_TOUCH",AB_DEATH_TOUCH);
+ tolua_constant(tolua_S,NULL,"AB_CREATE_ART",AB_CREATE_ART);
+ tolua_constant(tolua_S,NULL,"AB_FAR_REACHING",AB_FAR_REACHING);
+ tolua_constant(tolua_S,NULL,"AB_TRAPPING",AB_TRAPPING);
+ tolua_constant(tolua_S,NULL,"AB_UNDEAD_FORM",AB_UNDEAD_FORM);
+ return 1;
+}
+/* Close function */
+void tolua_player_c_close (lua_State* tolua_S)
+{
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"player_class");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"cp_ptr"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"skill_type");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MAX_SKILLS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_skill_name");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"old_max_s_idx"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"max_s_idx"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"s_info");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_CONVEYANCE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_MANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_AIR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_WATER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_NATURE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_EARTH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_SYMBIOTIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_MUSIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_DIVINATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_TEMPORAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_DRUID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_DAEMON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_META");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_MAGIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_COMBAT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_MASTERY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_SWORD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_AXE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_POLEARM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_HAFTED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_BACKSTAB");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_ARCHERY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_SLING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_BOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_XBOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_BOOMERANG");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_SPIRITUALITY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_MINDCRAFT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_MISC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_NECROMANCY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_MIMICRY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_ANTIMAGIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_RUNECRAFT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_SNEAK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_STEALTH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_DISARMING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_ALCHEMY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_STEALING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_SORCERY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_HAND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_THAUMATURGY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_SUMMON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_SPELL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_DODGE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_BEAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_LORE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_PRESERVATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_POSSESSION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_MIND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_CRITS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_PRAY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_LEARN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_UDUN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_DEVICE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_STUN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_BOULDER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_GEOMANCY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_MAX");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SKILL_STEP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_skill");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_skill_scale");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"do_get_new_skill");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_melee_skills");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"find_skill");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"find_skill_i");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_class_name");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_race_name");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_subrace_name");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ability_type");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"find_ability");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"do_cmd_ability");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"has_ability");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"max_ab_idx"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ab_info");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"AB_SPREAD_BLOWS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"AB_TREE_WALK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"AB_PERFECT_CASTING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"AB_MAX_BLOW1");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"AB_MAX_BLOW2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"AB_AMMO_CREATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"AB_DEATH_TOUCH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"AB_CREATE_ART");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"AB_FAR_REACHING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"AB_TRAPPING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"AB_UNDEAD_FORM");
+}
diff -Nru --strip-trailing-cr tome-2.5.3/src/w_player.c tome-2.5.3-lua.files/src/w_player.c
--- tome-2.5.3/src/w_player.c	1969-12-31 16:00:00.000000000 -0800
+++ tome-2.5.3-lua.files/src/w_player.c	2010-09-26 07:36:44.000000000 -0700
@@ -0,0 +1,9572 @@
+/*
+** Lua binding: player
+** Generated automatically by tolua 4.0a - angband on Sun Sep 26 07:36:43 2010.
+*/
+
+#include "lua/tolua.h"
+
+/* Exported function */
+int tolua_player_open (lua_State* tolua_S);
+void tolua_player_close (lua_State* tolua_S);
+
+#include "angband.h"
+static bool lua_test_race_flags(int slot, u32b flags) { if (slot == 1) return (PRACE_FLAG(flags)) ? TRUE : FALSE; else return (PRACE_FLAG2(flags)) ? TRUE : FALSE; }
+
+/* function to register type */
+static void toluaI_reg_types (lua_State* tolua_S)
+{
+ tolua_usertype(tolua_S,"player_race_mod");
+ tolua_usertype(tolua_S,"deity_type");
+ tolua_usertype(tolua_S,"object_type");
+ tolua_usertype(tolua_S,"player_class");
+ tolua_usertype(tolua_S,"player_race");
+ tolua_usertype(tolua_S,"player_type");
+}
+
+/* error messages */
+#define TOLUA_ERR_SELF tolua_error(tolua_S,"invalid 'self'")
+#define TOLUA_ERR_ASSIGN tolua_error(tolua_S,"#vinvalid type in variable assignment.")
+
+/* get function: player_exp */
+static int toluaI_get_player_player_exp(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=PY_MAX_LEVEL)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)player_exp[toluaI_index]);
+ return 1;
+}
+
+/* set function: player_exp */
+static int toluaI_set_player_player_exp(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=PY_MAX_LEVEL)
+ tolua_error(tolua_S,"array indexing out of range.");
+  player_exp[toluaI_index] = ((s32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: name of class  deity_type */
+static int toluaI_get_player_deity_type_name(lua_State* tolua_S)
+{
+  deity_type* self = (deity_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushstring(tolua_S,(const char*)self->name);
+ return 1;
+}
+
+/* set function: name of class  deity_type */
+static int toluaI_set_player_deity_type_name(lua_State* tolua_S)
+{
+  deity_type* self = (deity_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  self->name = ((cptr)  tolua_getstring(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: deity_info */
+static int toluaI_get_player_deity_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_gods)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&deity_info[toluaI_index],tolua_tag(tolua_S,"deity_type"));
+ return 1;
+}
+
+/* set function: deity_info */
+static int toluaI_set_player_deity_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_gods)
+ tolua_error(tolua_S,"array indexing out of range.");
+  deity_info[toluaI_index] = *((deity_type*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: lives of class  player_type */
+static int toluaI_get_player_player_type_lives(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->lives);
+ return 1;
+}
+
+/* set function: lives of class  player_type */
+static int toluaI_set_player_player_type_lives(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->lives = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: oldpy of class  player_type */
+static int toluaI_get_player_player_type_oldpy(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->oldpy);
+ return 1;
+}
+
+/* set function: oldpy of class  player_type */
+static int toluaI_set_player_player_type_oldpy(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->oldpy = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: oldpx of class  player_type */
+static int toluaI_get_player_player_type_oldpx(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->oldpx);
+ return 1;
+}
+
+/* set function: oldpx of class  player_type */
+static int toluaI_set_player_player_type_oldpx(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->oldpx = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: py of class  player_type */
+static int toluaI_get_player_player_type_py(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->py);
+ return 1;
+}
+
+/* set function: py of class  player_type */
+static int toluaI_set_player_player_type_py(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->py = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: px of class  player_type */
+static int toluaI_get_player_player_type_px(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->px);
+ return 1;
+}
+
+/* set function: px of class  player_type */
+static int toluaI_set_player_player_type_px(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->px = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: psex of class  player_type */
+static int toluaI_get_player_player_type_psex(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->psex);
+ return 1;
+}
+
+/* set function: psex of class  player_type */
+static int toluaI_set_player_player_type_psex(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->psex = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: prace of class  player_type */
+static int toluaI_get_player_player_type_prace(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->prace);
+ return 1;
+}
+
+/* set function: prace of class  player_type */
+static int toluaI_set_player_player_type_prace(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->prace = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: pracem of class  player_type */
+static int toluaI_get_player_player_type_pracem(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->pracem);
+ return 1;
+}
+
+/* set function: pracem of class  player_type */
+static int toluaI_set_player_player_type_pracem(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->pracem = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: pclass of class  player_type */
+static int toluaI_get_player_player_type_pclass(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->pclass);
+ return 1;
+}
+
+/* set function: pclass of class  player_type */
+static int toluaI_set_player_player_type_pclass(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->pclass = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mimic_form of class  player_type */
+static int toluaI_get_player_player_type_mimic_form(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mimic_form);
+ return 1;
+}
+
+/* set function: mimic_form of class  player_type */
+static int toluaI_set_player_player_type_mimic_form(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mimic_form = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mimic_level of class  player_type */
+static int toluaI_get_player_player_type_mimic_level(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mimic_level);
+ return 1;
+}
+
+/* set function: mimic_level of class  player_type */
+static int toluaI_set_player_player_type_mimic_level(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mimic_level = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: oops of class  player_type */
+static int toluaI_get_player_player_type_oops(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->oops);
+ return 1;
+}
+
+/* set function: oops of class  player_type */
+static int toluaI_set_player_player_type_oops(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->oops = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: inventory of class  player_type */
+static int toluaI_get_player_player_type_inventory_real(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=INVEN_TOTAL)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&self->inventory[toluaI_index],tolua_tag(tolua_S,"object_type"));
+ return 1;
+}
+
+/* set function: inventory of class  player_type */
+static int toluaI_set_player_player_type_inventory_real(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=INVEN_TOTAL)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->inventory[toluaI_index] = *((object_type*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: hitdie of class  player_type */
+static int toluaI_get_player_player_type_hitdie(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->hitdie);
+ return 1;
+}
+
+/* set function: hitdie of class  player_type */
+static int toluaI_set_player_player_type_hitdie(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->hitdie = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: expfact of class  player_type */
+static int toluaI_get_player_player_type_expfact(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->expfact);
+ return 1;
+}
+
+/* set function: expfact of class  player_type */
+static int toluaI_set_player_player_type_expfact(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->expfact = ((u16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: allow_one_death of class  player_type */
+static int toluaI_get_player_player_type_allow_one_death(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->allow_one_death);
+ return 1;
+}
+
+/* set function: allow_one_death of class  player_type */
+static int toluaI_set_player_player_type_allow_one_death(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->allow_one_death = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: age of class  player_type */
+static int toluaI_get_player_player_type_age(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->age);
+ return 1;
+}
+
+/* set function: age of class  player_type */
+static int toluaI_set_player_player_type_age(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->age = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ht of class  player_type */
+static int toluaI_get_player_player_type_ht(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ht);
+ return 1;
+}
+
+/* set function: ht of class  player_type */
+static int toluaI_set_player_player_type_ht(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ht = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: wt of class  player_type */
+static int toluaI_get_player_player_type_wt(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->wt);
+ return 1;
+}
+
+/* set function: wt of class  player_type */
+static int toluaI_set_player_player_type_wt(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->wt = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sc of class  player_type */
+static int toluaI_get_player_player_type_sc(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sc);
+ return 1;
+}
+
+/* set function: sc of class  player_type */
+static int toluaI_set_player_player_type_sc(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sc = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: au of class  player_type */
+static int toluaI_get_player_player_type_au(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->au);
+ return 1;
+}
+
+/* set function: au of class  player_type */
+static int toluaI_set_player_player_type_au(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->au = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: max_exp of class  player_type */
+static int toluaI_get_player_player_type_max_exp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->max_exp);
+ return 1;
+}
+
+/* set function: max_exp of class  player_type */
+static int toluaI_set_player_player_type_max_exp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->max_exp = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: exp of class  player_type */
+static int toluaI_get_player_player_type_exp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->exp);
+ return 1;
+}
+
+/* set function: exp of class  player_type */
+static int toluaI_set_player_player_type_exp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->exp = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: exp_frac of class  player_type */
+static int toluaI_get_player_player_type_exp_frac(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->exp_frac);
+ return 1;
+}
+
+/* set function: exp_frac of class  player_type */
+static int toluaI_set_player_player_type_exp_frac(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->exp_frac = ((u16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: lev of class  player_type */
+static int toluaI_get_player_player_type_lev(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->lev);
+ return 1;
+}
+
+/* set function: lev of class  player_type */
+static int toluaI_set_player_player_type_lev(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->lev = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: town_num of class  player_type */
+static int toluaI_get_player_player_type_town_num(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->town_num);
+ return 1;
+}
+
+/* set function: town_num of class  player_type */
+static int toluaI_set_player_player_type_town_num(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->town_num = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: inside_quest of class  player_type */
+static int toluaI_get_player_player_type_inside_quest(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->inside_quest);
+ return 1;
+}
+
+/* set function: inside_quest of class  player_type */
+static int toluaI_set_player_player_type_inside_quest(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->inside_quest = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: exit_bldg of class  player_type */
+static int toluaI_get_player_player_type_exit_bldg(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->exit_bldg);
+ return 1;
+}
+
+/* set function: exit_bldg of class  player_type */
+static int toluaI_set_player_player_type_exit_bldg(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->exit_bldg = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: wilderness_x of class  player_type */
+static int toluaI_get_player_player_type_wilderness_x(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->wilderness_x);
+ return 1;
+}
+
+/* set function: wilderness_x of class  player_type */
+static int toluaI_set_player_player_type_wilderness_x(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->wilderness_x = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: wilderness_y of class  player_type */
+static int toluaI_get_player_player_type_wilderness_y(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->wilderness_y);
+ return 1;
+}
+
+/* set function: wilderness_y of class  player_type */
+static int toluaI_set_player_player_type_wilderness_y(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->wilderness_y = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: wild_mode of class  player_type */
+static int toluaI_get_player_player_type_wild_mode(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->wild_mode);
+ return 1;
+}
+
+/* set function: wild_mode of class  player_type */
+static int toluaI_set_player_player_type_wild_mode(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->wild_mode = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: old_wild_mode of class  player_type */
+static int toluaI_get_player_player_type_old_wild_mode(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->old_wild_mode);
+ return 1;
+}
+
+/* set function: old_wild_mode of class  player_type */
+static int toluaI_set_player_player_type_old_wild_mode(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->old_wild_mode = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mhp of class  player_type */
+static int toluaI_get_player_player_type_mhp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mhp);
+ return 1;
+}
+
+/* set function: mhp of class  player_type */
+static int toluaI_set_player_player_type_mhp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mhp = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: chp of class  player_type */
+static int toluaI_get_player_player_type_chp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->chp);
+ return 1;
+}
+
+/* set function: chp of class  player_type */
+static int toluaI_set_player_player_type_chp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->chp = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: chp_frac of class  player_type */
+static int toluaI_get_player_player_type_chp_frac(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->chp_frac);
+ return 1;
+}
+
+/* set function: chp_frac of class  player_type */
+static int toluaI_set_player_player_type_chp_frac(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->chp_frac = ((u16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: hp_mod of class  player_type */
+static int toluaI_get_player_player_type_hp_mod(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->hp_mod);
+ return 1;
+}
+
+/* set function: hp_mod of class  player_type */
+static int toluaI_set_player_player_type_hp_mod(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->hp_mod = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: msp of class  player_type */
+static int toluaI_get_player_player_type_msp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->msp);
+ return 1;
+}
+
+/* set function: msp of class  player_type */
+static int toluaI_set_player_player_type_msp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->msp = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: csp of class  player_type */
+static int toluaI_get_player_player_type_csp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->csp);
+ return 1;
+}
+
+/* set function: csp of class  player_type */
+static int toluaI_set_player_player_type_csp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->csp = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: csp_frac of class  player_type */
+static int toluaI_get_player_player_type_csp_frac(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->csp_frac);
+ return 1;
+}
+
+/* set function: csp_frac of class  player_type */
+static int toluaI_set_player_player_type_csp_frac(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->csp_frac = ((u16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: msane of class  player_type */
+static int toluaI_get_player_player_type_msane(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->msane);
+ return 1;
+}
+
+/* set function: msane of class  player_type */
+static int toluaI_set_player_player_type_msane(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->msane = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: csane of class  player_type */
+static int toluaI_get_player_player_type_csane(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->csane);
+ return 1;
+}
+
+/* set function: csane of class  player_type */
+static int toluaI_set_player_player_type_csane(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->csane = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: csane_frac of class  player_type */
+static int toluaI_get_player_player_type_csane_frac(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->csane_frac);
+ return 1;
+}
+
+/* set function: csane_frac of class  player_type */
+static int toluaI_set_player_player_type_csane_frac(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->csane_frac = ((u16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: grace of class  player_type */
+static int toluaI_get_player_player_type_grace(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->grace);
+ return 1;
+}
+
+/* set function: grace of class  player_type */
+static int toluaI_set_player_player_type_grace(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->grace = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: pgod of class  player_type */
+static int toluaI_get_player_player_type_pgod(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->pgod);
+ return 1;
+}
+
+/* set function: pgod of class  player_type */
+static int toluaI_set_player_player_type_pgod(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->pgod = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: praying of class  player_type */
+static int toluaI_get_player_player_type_praying(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->praying);
+ return 1;
+}
+
+/* set function: praying of class  player_type */
+static int toluaI_set_player_player_type_praying(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->praying = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: max_plv of class  player_type */
+static int toluaI_get_player_player_type_max_plv(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->max_plv);
+ return 1;
+}
+
+/* set function: max_plv of class  player_type */
+static int toluaI_set_player_player_type_max_plv(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->max_plv = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: stat_max of class  player_type */
+static int toluaI_get_player_player_type_stat_max(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->stat_max[toluaI_index]);
+ return 1;
+}
+
+/* set function: stat_max of class  player_type */
+static int toluaI_set_player_player_type_stat_max(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->stat_max[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: stat_cur of class  player_type */
+static int toluaI_get_player_player_type_stat_cur(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->stat_cur[toluaI_index]);
+ return 1;
+}
+
+/* set function: stat_cur of class  player_type */
+static int toluaI_set_player_player_type_stat_cur(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->stat_cur[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: luck_cur of class  player_type */
+static int toluaI_get_player_player_type_luck_cur(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->luck_cur);
+ return 1;
+}
+
+/* set function: luck_cur of class  player_type */
+static int toluaI_set_player_player_type_luck_cur(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->luck_cur = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: luck_max of class  player_type */
+static int toluaI_get_player_player_type_luck_max(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->luck_max);
+ return 1;
+}
+
+/* set function: luck_max of class  player_type */
+static int toluaI_set_player_player_type_luck_max(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->luck_max = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: luck_base of class  player_type */
+static int toluaI_get_player_player_type_luck_base(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->luck_base);
+ return 1;
+}
+
+/* set function: luck_base of class  player_type */
+static int toluaI_set_player_player_type_luck_base(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->luck_base = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: fast of class  player_type */
+static int toluaI_get_player_player_type_fast(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->fast);
+ return 1;
+}
+
+/* set function: fast of class  player_type */
+static int toluaI_set_player_player_type_fast(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->fast = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: lightspeed of class  player_type */
+static int toluaI_get_player_player_type_lightspeed(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->lightspeed);
+ return 1;
+}
+
+/* set function: lightspeed of class  player_type */
+static int toluaI_set_player_player_type_lightspeed(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->lightspeed = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: slow of class  player_type */
+static int toluaI_get_player_player_type_slow(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->slow);
+ return 1;
+}
+
+/* set function: slow of class  player_type */
+static int toluaI_set_player_player_type_slow(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->slow = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: blind of class  player_type */
+static int toluaI_get_player_player_type_blind(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->blind);
+ return 1;
+}
+
+/* set function: blind of class  player_type */
+static int toluaI_set_player_player_type_blind(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->blind = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: paralyzed of class  player_type */
+static int toluaI_get_player_player_type_paralyzed(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->paralyzed);
+ return 1;
+}
+
+/* set function: paralyzed of class  player_type */
+static int toluaI_set_player_player_type_paralyzed(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->paralyzed = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: confused of class  player_type */
+static int toluaI_get_player_player_type_confused(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->confused);
+ return 1;
+}
+
+/* set function: confused of class  player_type */
+static int toluaI_set_player_player_type_confused(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->confused = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: afraid of class  player_type */
+static int toluaI_get_player_player_type_afraid(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->afraid);
+ return 1;
+}
+
+/* set function: afraid of class  player_type */
+static int toluaI_set_player_player_type_afraid(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->afraid = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: image of class  player_type */
+static int toluaI_get_player_player_type_image(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->image);
+ return 1;
+}
+
+/* set function: image of class  player_type */
+static int toluaI_set_player_player_type_image(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->image = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: poisoned of class  player_type */
+static int toluaI_get_player_player_type_poisoned(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->poisoned);
+ return 1;
+}
+
+/* set function: poisoned of class  player_type */
+static int toluaI_set_player_player_type_poisoned(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->poisoned = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: cut of class  player_type */
+static int toluaI_get_player_player_type_cut(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->cut);
+ return 1;
+}
+
+/* set function: cut of class  player_type */
+static int toluaI_set_player_player_type_cut(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->cut = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: stun of class  player_type */
+static int toluaI_get_player_player_type_stun(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->stun);
+ return 1;
+}
+
+/* set function: stun of class  player_type */
+static int toluaI_set_player_player_type_stun(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->stun = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: protevil of class  player_type */
+static int toluaI_get_player_player_type_protevil(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->protevil);
+ return 1;
+}
+
+/* set function: protevil of class  player_type */
+static int toluaI_set_player_player_type_protevil(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->protevil = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: protgood of class  player_type */
+static int toluaI_get_player_player_type_protgood(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->protgood);
+ return 1;
+}
+
+/* set function: protgood of class  player_type */
+static int toluaI_set_player_player_type_protgood(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->protgood = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: protundead of class  player_type */
+static int toluaI_get_player_player_type_protundead(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->protundead);
+ return 1;
+}
+
+/* set function: protundead of class  player_type */
+static int toluaI_set_player_player_type_protundead(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->protundead = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: invuln of class  player_type */
+static int toluaI_get_player_player_type_invuln(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->invuln);
+ return 1;
+}
+
+/* set function: invuln of class  player_type */
+static int toluaI_set_player_player_type_invuln(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->invuln = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: hero of class  player_type */
+static int toluaI_get_player_player_type_hero(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->hero);
+ return 1;
+}
+
+/* set function: hero of class  player_type */
+static int toluaI_set_player_player_type_hero(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->hero = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: shero of class  player_type */
+static int toluaI_get_player_player_type_shero(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->shero);
+ return 1;
+}
+
+/* set function: shero of class  player_type */
+static int toluaI_set_player_player_type_shero(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->shero = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: shield of class  player_type */
+static int toluaI_get_player_player_type_shield(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->shield);
+ return 1;
+}
+
+/* set function: shield of class  player_type */
+static int toluaI_set_player_player_type_shield(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->shield = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: shield_power of class  player_type */
+static int toluaI_get_player_player_type_shield_power(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->shield_power);
+ return 1;
+}
+
+/* set function: shield_power of class  player_type */
+static int toluaI_set_player_player_type_shield_power(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->shield_power = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: shield_opt of class  player_type */
+static int toluaI_get_player_player_type_shield_opt(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->shield_opt);
+ return 1;
+}
+
+/* set function: shield_opt of class  player_type */
+static int toluaI_set_player_player_type_shield_opt(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->shield_opt = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: blessed of class  player_type */
+static int toluaI_get_player_player_type_blessed(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->blessed);
+ return 1;
+}
+
+/* set function: blessed of class  player_type */
+static int toluaI_set_player_player_type_blessed(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->blessed = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_invis of class  player_type */
+static int toluaI_get_player_player_type_tim_invis(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_invis);
+ return 1;
+}
+
+/* set function: tim_invis of class  player_type */
+static int toluaI_set_player_player_type_tim_invis(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_invis = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_infra of class  player_type */
+static int toluaI_get_player_player_type_tim_infra(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_infra);
+ return 1;
+}
+
+/* set function: tim_infra of class  player_type */
+static int toluaI_set_player_player_type_tim_infra(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_infra = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: oppose_acid of class  player_type */
+static int toluaI_get_player_player_type_oppose_acid(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->oppose_acid);
+ return 1;
+}
+
+/* set function: oppose_acid of class  player_type */
+static int toluaI_set_player_player_type_oppose_acid(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->oppose_acid = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: oppose_elec of class  player_type */
+static int toluaI_get_player_player_type_oppose_elec(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->oppose_elec);
+ return 1;
+}
+
+/* set function: oppose_elec of class  player_type */
+static int toluaI_set_player_player_type_oppose_elec(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->oppose_elec = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: oppose_fire of class  player_type */
+static int toluaI_get_player_player_type_oppose_fire(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->oppose_fire);
+ return 1;
+}
+
+/* set function: oppose_fire of class  player_type */
+static int toluaI_set_player_player_type_oppose_fire(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->oppose_fire = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: oppose_cold of class  player_type */
+static int toluaI_get_player_player_type_oppose_cold(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->oppose_cold);
+ return 1;
+}
+
+/* set function: oppose_cold of class  player_type */
+static int toluaI_set_player_player_type_oppose_cold(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->oppose_cold = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: oppose_pois of class  player_type */
+static int toluaI_get_player_player_type_oppose_pois(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->oppose_pois);
+ return 1;
+}
+
+/* set function: oppose_pois of class  player_type */
+static int toluaI_set_player_player_type_oppose_pois(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->oppose_pois = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: oppose_ld of class  player_type */
+static int toluaI_get_player_player_type_oppose_ld(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->oppose_ld);
+ return 1;
+}
+
+/* set function: oppose_ld of class  player_type */
+static int toluaI_set_player_player_type_oppose_ld(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->oppose_ld = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: oppose_cc of class  player_type */
+static int toluaI_get_player_player_type_oppose_cc(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->oppose_cc);
+ return 1;
+}
+
+/* set function: oppose_cc of class  player_type */
+static int toluaI_set_player_player_type_oppose_cc(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->oppose_cc = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: oppose_ss of class  player_type */
+static int toluaI_get_player_player_type_oppose_ss(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->oppose_ss);
+ return 1;
+}
+
+/* set function: oppose_ss of class  player_type */
+static int toluaI_set_player_player_type_oppose_ss(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->oppose_ss = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: oppose_nex of class  player_type */
+static int toluaI_get_player_player_type_oppose_nex(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->oppose_nex);
+ return 1;
+}
+
+/* set function: oppose_nex of class  player_type */
+static int toluaI_set_player_player_type_oppose_nex(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->oppose_nex = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_esp of class  player_type */
+static int toluaI_get_player_player_type_tim_esp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_esp);
+ return 1;
+}
+
+/* set function: tim_esp of class  player_type */
+static int toluaI_set_player_player_type_tim_esp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_esp = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_wraith of class  player_type */
+static int toluaI_get_player_player_type_tim_wraith(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_wraith);
+ return 1;
+}
+
+/* set function: tim_wraith of class  player_type */
+static int toluaI_set_player_player_type_tim_wraith(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_wraith = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_ffall of class  player_type */
+static int toluaI_get_player_player_type_tim_ffall(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_ffall);
+ return 1;
+}
+
+/* set function: tim_ffall of class  player_type */
+static int toluaI_set_player_player_type_tim_ffall(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_ffall = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_fly of class  player_type */
+static int toluaI_get_player_player_type_tim_fly(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_fly);
+ return 1;
+}
+
+/* set function: tim_fly of class  player_type */
+static int toluaI_set_player_player_type_tim_fly(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_fly = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_fire_aura of class  player_type */
+static int toluaI_get_player_player_type_tim_fire_aura(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_fire_aura);
+ return 1;
+}
+
+/* set function: tim_fire_aura of class  player_type */
+static int toluaI_set_player_player_type_tim_fire_aura(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_fire_aura = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_regen of class  player_type */
+static int toluaI_get_player_player_type_tim_regen(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_regen);
+ return 1;
+}
+
+/* set function: tim_regen of class  player_type */
+static int toluaI_set_player_player_type_tim_regen(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_regen = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_regen_pow of class  player_type */
+static int toluaI_get_player_player_type_tim_regen_pow(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_regen_pow);
+ return 1;
+}
+
+/* set function: tim_regen_pow of class  player_type */
+static int toluaI_set_player_player_type_tim_regen_pow(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_regen_pow = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_poison of class  player_type */
+static int toluaI_get_player_player_type_tim_poison(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_poison);
+ return 1;
+}
+
+/* set function: tim_poison of class  player_type */
+static int toluaI_set_player_player_type_tim_poison(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_poison = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_thunder of class  player_type */
+static int toluaI_get_player_player_type_tim_thunder(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_thunder);
+ return 1;
+}
+
+/* set function: tim_thunder of class  player_type */
+static int toluaI_set_player_player_type_tim_thunder(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_thunder = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_thunder_p1 of class  player_type */
+static int toluaI_get_player_player_type_tim_thunder_p1(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_thunder_p1);
+ return 1;
+}
+
+/* set function: tim_thunder_p1 of class  player_type */
+static int toluaI_set_player_player_type_tim_thunder_p1(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_thunder_p1 = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_thunder_p2 of class  player_type */
+static int toluaI_get_player_player_type_tim_thunder_p2(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_thunder_p2);
+ return 1;
+}
+
+/* set function: tim_thunder_p2 of class  player_type */
+static int toluaI_set_player_player_type_tim_thunder_p2(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_thunder_p2 = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_magic of class  player_type */
+static int toluaI_get_player_player_type_resist_magic(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_magic);
+ return 1;
+}
+
+/* set function: resist_magic of class  player_type */
+static int toluaI_set_player_player_type_resist_magic(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_magic = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_invisible of class  player_type */
+static int toluaI_get_player_player_type_tim_invisible(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_invisible);
+ return 1;
+}
+
+/* set function: tim_invisible of class  player_type */
+static int toluaI_set_player_player_type_tim_invisible(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_invisible = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_inv_pow of class  player_type */
+static int toluaI_get_player_player_type_tim_inv_pow(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_inv_pow);
+ return 1;
+}
+
+/* set function: tim_inv_pow of class  player_type */
+static int toluaI_set_player_player_type_tim_inv_pow(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_inv_pow = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_mimic of class  player_type */
+static int toluaI_get_player_player_type_tim_mimic(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_mimic);
+ return 1;
+}
+
+/* set function: tim_mimic of class  player_type */
+static int toluaI_set_player_player_type_tim_mimic(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_mimic = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_lite of class  player_type */
+static int toluaI_get_player_player_type_tim_lite(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_lite);
+ return 1;
+}
+
+/* set function: tim_lite of class  player_type */
+static int toluaI_set_player_player_type_tim_lite(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_lite = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: holy of class  player_type */
+static int toluaI_get_player_player_type_holy(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->holy);
+ return 1;
+}
+
+/* set function: holy of class  player_type */
+static int toluaI_set_player_player_type_holy(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->holy = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: walk_water of class  player_type */
+static int toluaI_get_player_player_type_walk_water(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->walk_water);
+ return 1;
+}
+
+/* set function: walk_water of class  player_type */
+static int toluaI_set_player_player_type_walk_water(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->walk_water = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_mental_barrier of class  player_type */
+static int toluaI_get_player_player_type_tim_mental_barrier(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_mental_barrier);
+ return 1;
+}
+
+/* set function: tim_mental_barrier of class  player_type */
+static int toluaI_set_player_player_type_tim_mental_barrier(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_mental_barrier = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: strike of class  player_type */
+static int toluaI_get_player_player_type_strike(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->strike);
+ return 1;
+}
+
+/* set function: strike of class  player_type */
+static int toluaI_set_player_player_type_strike(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->strike = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: meditation of class  player_type */
+static int toluaI_get_player_player_type_meditation(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->meditation);
+ return 1;
+}
+
+/* set function: meditation of class  player_type */
+static int toluaI_set_player_player_type_meditation(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->meditation = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_reflect of class  player_type */
+static int toluaI_get_player_player_type_tim_reflect(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_reflect);
+ return 1;
+}
+
+/* set function: tim_reflect of class  player_type */
+static int toluaI_set_player_player_type_tim_reflect(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_reflect = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_res_time of class  player_type */
+static int toluaI_get_player_player_type_tim_res_time(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_res_time);
+ return 1;
+}
+
+/* set function: tim_res_time of class  player_type */
+static int toluaI_set_player_player_type_tim_res_time(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_res_time = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_deadly of class  player_type */
+static int toluaI_get_player_player_type_tim_deadly(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_deadly);
+ return 1;
+}
+
+/* set function: tim_deadly of class  player_type */
+static int toluaI_set_player_player_type_tim_deadly(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_deadly = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: prob_travel of class  player_type */
+static int toluaI_get_player_player_type_prob_travel(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->prob_travel);
+ return 1;
+}
+
+/* set function: prob_travel of class  player_type */
+static int toluaI_set_player_player_type_prob_travel(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->prob_travel = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: disrupt_shield of class  player_type */
+static int toluaI_get_player_player_type_disrupt_shield(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->disrupt_shield);
+ return 1;
+}
+
+/* set function: disrupt_shield of class  player_type */
+static int toluaI_set_player_player_type_disrupt_shield(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->disrupt_shield = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: parasite of class  player_type */
+static int toluaI_get_player_player_type_parasite(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->parasite);
+ return 1;
+}
+
+/* set function: parasite of class  player_type */
+static int toluaI_set_player_player_type_parasite(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->parasite = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: parasite_r_idx of class  player_type */
+static int toluaI_get_player_player_type_parasite_r_idx(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->parasite_r_idx);
+ return 1;
+}
+
+/* set function: parasite_r_idx of class  player_type */
+static int toluaI_set_player_player_type_parasite_r_idx(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->parasite_r_idx = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: loan of class  player_type */
+static int toluaI_get_player_player_type_loan(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->loan);
+ return 1;
+}
+
+/* set function: loan of class  player_type */
+static int toluaI_set_player_player_type_loan(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->loan = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: loan_time of class  player_type */
+static int toluaI_get_player_player_type_loan_time(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->loan_time);
+ return 1;
+}
+
+/* set function: loan_time of class  player_type */
+static int toluaI_set_player_player_type_loan_time(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->loan_time = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_magic_breath of class  player_type */
+static int toluaI_get_player_player_type_tim_magic_breath(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_magic_breath);
+ return 1;
+}
+
+/* set function: tim_magic_breath of class  player_type */
+static int toluaI_set_player_player_type_tim_magic_breath(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_magic_breath = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: tim_water_breath of class  player_type */
+static int toluaI_get_player_player_type_tim_water_breath(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->tim_water_breath);
+ return 1;
+}
+
+/* set function: tim_water_breath of class  player_type */
+static int toluaI_set_player_player_type_tim_water_breath(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->tim_water_breath = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: immov_cntr of class  player_type */
+static int toluaI_get_player_player_type_immov_cntr(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->immov_cntr);
+ return 1;
+}
+
+/* set function: immov_cntr of class  player_type */
+static int toluaI_set_player_player_type_immov_cntr(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->immov_cntr = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: music_extra of class  player_type */
+static int toluaI_get_player_player_type_music_extra(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->music_extra);
+ return 1;
+}
+
+/* set function: music_extra of class  player_type */
+static int toluaI_set_player_player_type_music_extra(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->music_extra = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: music_extra2 of class  player_type */
+static int toluaI_get_player_player_type_music_extra2(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->music_extra2);
+ return 1;
+}
+
+/* set function: music_extra2 of class  player_type */
+static int toluaI_set_player_player_type_music_extra2(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->music_extra2 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: chaos_patron of class  player_type */
+static int toluaI_get_player_player_type_chaos_patron(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->chaos_patron);
+ return 1;
+}
+
+/* set function: chaos_patron of class  player_type */
+static int toluaI_set_player_player_type_chaos_patron(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->chaos_patron = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: recall_dungeon of class  player_type */
+static int toluaI_get_player_player_type_recall_dungeon(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->recall_dungeon);
+ return 1;
+}
+
+/* set function: recall_dungeon of class  player_type */
+static int toluaI_set_player_player_type_recall_dungeon(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->recall_dungeon = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: word_recall of class  player_type */
+static int toluaI_get_player_player_type_word_recall(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->word_recall);
+ return 1;
+}
+
+/* set function: word_recall of class  player_type */
+static int toluaI_set_player_player_type_word_recall(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->word_recall = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: energy of class  player_type */
+static int toluaI_get_player_player_type_energy(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->energy);
+ return 1;
+}
+
+/* set function: energy of class  player_type */
+static int toluaI_set_player_player_type_energy(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->energy = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: food of class  player_type */
+static int toluaI_get_player_player_type_food(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->food);
+ return 1;
+}
+
+/* set function: food of class  player_type */
+static int toluaI_set_player_player_type_food(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->food = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: confusing of class  player_type */
+static int toluaI_get_player_player_type_confusing(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->confusing);
+ return 1;
+}
+
+/* set function: confusing of class  player_type */
+static int toluaI_set_player_player_type_confusing(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->confusing = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: searching of class  player_type */
+static int toluaI_get_player_player_type_searching(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->searching);
+ return 1;
+}
+
+/* set function: searching of class  player_type */
+static int toluaI_set_player_player_type_searching(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->searching = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: new_spells of class  player_type */
+static int toluaI_get_player_player_type_new_spells(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->new_spells);
+ return 1;
+}
+
+/* set function: new_spells of class  player_type */
+static int toluaI_set_player_player_type_new_spells(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->new_spells = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: old_spells of class  player_type */
+static int toluaI_get_player_player_type_old_spells(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->old_spells);
+ return 1;
+}
+
+/* set function: old_spells of class  player_type */
+static int toluaI_set_player_player_type_old_spells(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->old_spells = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: xtra_spells of class  player_type */
+static int toluaI_get_player_player_type_xtra_spells(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->xtra_spells);
+ return 1;
+}
+
+/* set function: xtra_spells of class  player_type */
+static int toluaI_set_player_player_type_xtra_spells(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->xtra_spells = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: cur_lite of class  player_type */
+static int toluaI_get_player_player_type_cur_lite(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->cur_lite);
+ return 1;
+}
+
+/* set function: cur_lite of class  player_type */
+static int toluaI_set_player_player_type_cur_lite(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->cur_lite = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: xtra_f1 of class  player_type */
+static int toluaI_get_player_player_type_xtra_f1(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->xtra_f1);
+ return 1;
+}
+
+/* set function: xtra_f1 of class  player_type */
+static int toluaI_set_player_player_type_xtra_f1(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->xtra_f1 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: xtra_f2 of class  player_type */
+static int toluaI_get_player_player_type_xtra_f2(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->xtra_f2);
+ return 1;
+}
+
+/* set function: xtra_f2 of class  player_type */
+static int toluaI_set_player_player_type_xtra_f2(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->xtra_f2 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: xtra_f3 of class  player_type */
+static int toluaI_get_player_player_type_xtra_f3(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->xtra_f3);
+ return 1;
+}
+
+/* set function: xtra_f3 of class  player_type */
+static int toluaI_set_player_player_type_xtra_f3(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->xtra_f3 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: xtra_f4 of class  player_type */
+static int toluaI_get_player_player_type_xtra_f4(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->xtra_f4);
+ return 1;
+}
+
+/* set function: xtra_f4 of class  player_type */
+static int toluaI_set_player_player_type_xtra_f4(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->xtra_f4 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: xtra_f5 of class  player_type */
+static int toluaI_get_player_player_type_xtra_f5(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->xtra_f5);
+ return 1;
+}
+
+/* set function: xtra_f5 of class  player_type */
+static int toluaI_set_player_player_type_xtra_f5(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->xtra_f5 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: xtra_esp of class  player_type */
+static int toluaI_get_player_player_type_xtra_esp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->xtra_esp);
+ return 1;
+}
+
+/* set function: xtra_esp of class  player_type */
+static int toluaI_set_player_player_type_xtra_esp(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->xtra_esp = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: pspeed of class  player_type */
+static int toluaI_get_player_player_type_pspeed(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->pspeed);
+ return 1;
+}
+
+/* set function: pspeed of class  player_type */
+static int toluaI_set_player_player_type_pspeed(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->pspeed = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: notice of class  player_type */
+static int toluaI_get_player_player_type_notice(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->notice);
+ return 1;
+}
+
+/* set function: notice of class  player_type */
+static int toluaI_set_player_player_type_notice(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->notice = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: update of class  player_type */
+static int toluaI_get_player_player_type_update(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->update);
+ return 1;
+}
+
+/* set function: update of class  player_type */
+static int toluaI_set_player_player_type_update(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->update = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: redraw of class  player_type */
+static int toluaI_get_player_player_type_redraw(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->redraw);
+ return 1;
+}
+
+/* set function: redraw of class  player_type */
+static int toluaI_set_player_player_type_redraw(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->redraw = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: window of class  player_type */
+static int toluaI_get_player_player_type_window(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->window);
+ return 1;
+}
+
+/* set function: window of class  player_type */
+static int toluaI_set_player_player_type_window(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->window = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: stat_use of class  player_type */
+static int toluaI_get_player_player_type_stat_use(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->stat_use[toluaI_index]);
+ return 1;
+}
+
+/* set function: stat_use of class  player_type */
+static int toluaI_set_player_player_type_stat_use(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->stat_use[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: stat_top of class  player_type */
+static int toluaI_get_player_player_type_stat_top(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->stat_top[toluaI_index]);
+ return 1;
+}
+
+/* set function: stat_top of class  player_type */
+static int toluaI_set_player_player_type_stat_top(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->stat_top[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: stat_add of class  player_type */
+static int toluaI_get_player_player_type_stat_add(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->stat_add[toluaI_index]);
+ return 1;
+}
+
+/* set function: stat_add of class  player_type */
+static int toluaI_set_player_player_type_stat_add(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->stat_add[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: stat_ind of class  player_type */
+static int toluaI_get_player_player_type_stat_ind(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->stat_ind[toluaI_index]);
+ return 1;
+}
+
+/* set function: stat_ind of class  player_type */
+static int toluaI_set_player_player_type_stat_ind(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->stat_ind[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: stat_cnt of class  player_type */
+static int toluaI_get_player_player_type_stat_cnt(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->stat_cnt[toluaI_index]);
+ return 1;
+}
+
+/* set function: stat_cnt of class  player_type */
+static int toluaI_set_player_player_type_stat_cnt(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->stat_cnt[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: stat_los of class  player_type */
+static int toluaI_get_player_player_type_stat_los(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->stat_los[toluaI_index]);
+ return 1;
+}
+
+/* set function: stat_los of class  player_type */
+static int toluaI_set_player_player_type_stat_los(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->stat_los[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: immune_acid of class  player_type */
+static int toluaI_get_player_player_type_immune_acid(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->immune_acid);
+ return 1;
+}
+
+/* set function: immune_acid of class  player_type */
+static int toluaI_set_player_player_type_immune_acid(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->immune_acid = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: immune_elec of class  player_type */
+static int toluaI_get_player_player_type_immune_elec(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->immune_elec);
+ return 1;
+}
+
+/* set function: immune_elec of class  player_type */
+static int toluaI_set_player_player_type_immune_elec(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->immune_elec = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: immune_fire of class  player_type */
+static int toluaI_get_player_player_type_immune_fire(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->immune_fire);
+ return 1;
+}
+
+/* set function: immune_fire of class  player_type */
+static int toluaI_set_player_player_type_immune_fire(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->immune_fire = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: immune_cold of class  player_type */
+static int toluaI_get_player_player_type_immune_cold(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->immune_cold);
+ return 1;
+}
+
+/* set function: immune_cold of class  player_type */
+static int toluaI_set_player_player_type_immune_cold(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->immune_cold = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: immune_neth of class  player_type */
+static int toluaI_get_player_player_type_immune_neth(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->immune_neth);
+ return 1;
+}
+
+/* set function: immune_neth of class  player_type */
+static int toluaI_set_player_player_type_immune_neth(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->immune_neth = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_acid of class  player_type */
+static int toluaI_get_player_player_type_resist_acid(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_acid);
+ return 1;
+}
+
+/* set function: resist_acid of class  player_type */
+static int toluaI_set_player_player_type_resist_acid(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_acid = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_elec of class  player_type */
+static int toluaI_get_player_player_type_resist_elec(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_elec);
+ return 1;
+}
+
+/* set function: resist_elec of class  player_type */
+static int toluaI_set_player_player_type_resist_elec(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_elec = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_fire of class  player_type */
+static int toluaI_get_player_player_type_resist_fire(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_fire);
+ return 1;
+}
+
+/* set function: resist_fire of class  player_type */
+static int toluaI_set_player_player_type_resist_fire(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_fire = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_cold of class  player_type */
+static int toluaI_get_player_player_type_resist_cold(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_cold);
+ return 1;
+}
+
+/* set function: resist_cold of class  player_type */
+static int toluaI_set_player_player_type_resist_cold(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_cold = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_pois of class  player_type */
+static int toluaI_get_player_player_type_resist_pois(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_pois);
+ return 1;
+}
+
+/* set function: resist_pois of class  player_type */
+static int toluaI_set_player_player_type_resist_pois(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_pois = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_conf of class  player_type */
+static int toluaI_get_player_player_type_resist_conf(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_conf);
+ return 1;
+}
+
+/* set function: resist_conf of class  player_type */
+static int toluaI_set_player_player_type_resist_conf(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_conf = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_sound of class  player_type */
+static int toluaI_get_player_player_type_resist_sound(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_sound);
+ return 1;
+}
+
+/* set function: resist_sound of class  player_type */
+static int toluaI_set_player_player_type_resist_sound(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_sound = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_lite of class  player_type */
+static int toluaI_get_player_player_type_resist_lite(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_lite);
+ return 1;
+}
+
+/* set function: resist_lite of class  player_type */
+static int toluaI_set_player_player_type_resist_lite(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_lite = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_dark of class  player_type */
+static int toluaI_get_player_player_type_resist_dark(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_dark);
+ return 1;
+}
+
+/* set function: resist_dark of class  player_type */
+static int toluaI_set_player_player_type_resist_dark(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_dark = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_chaos of class  player_type */
+static int toluaI_get_player_player_type_resist_chaos(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_chaos);
+ return 1;
+}
+
+/* set function: resist_chaos of class  player_type */
+static int toluaI_set_player_player_type_resist_chaos(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_chaos = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_disen of class  player_type */
+static int toluaI_get_player_player_type_resist_disen(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_disen);
+ return 1;
+}
+
+/* set function: resist_disen of class  player_type */
+static int toluaI_set_player_player_type_resist_disen(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_disen = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_shard of class  player_type */
+static int toluaI_get_player_player_type_resist_shard(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_shard);
+ return 1;
+}
+
+/* set function: resist_shard of class  player_type */
+static int toluaI_set_player_player_type_resist_shard(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_shard = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_nexus of class  player_type */
+static int toluaI_get_player_player_type_resist_nexus(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_nexus);
+ return 1;
+}
+
+/* set function: resist_nexus of class  player_type */
+static int toluaI_set_player_player_type_resist_nexus(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_nexus = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_blind of class  player_type */
+static int toluaI_get_player_player_type_resist_blind(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_blind);
+ return 1;
+}
+
+/* set function: resist_blind of class  player_type */
+static int toluaI_set_player_player_type_resist_blind(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_blind = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_neth of class  player_type */
+static int toluaI_get_player_player_type_resist_neth(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_neth);
+ return 1;
+}
+
+/* set function: resist_neth of class  player_type */
+static int toluaI_set_player_player_type_resist_neth(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_neth = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_fear of class  player_type */
+static int toluaI_get_player_player_type_resist_fear(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_fear);
+ return 1;
+}
+
+/* set function: resist_fear of class  player_type */
+static int toluaI_set_player_player_type_resist_fear(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_fear = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: resist_continuum of class  player_type */
+static int toluaI_get_player_player_type_resist_continuum(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->resist_continuum);
+ return 1;
+}
+
+/* set function: resist_continuum of class  player_type */
+static int toluaI_set_player_player_type_resist_continuum(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->resist_continuum = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sensible_fire of class  player_type */
+static int toluaI_get_player_player_type_sensible_fire(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sensible_fire);
+ return 1;
+}
+
+/* set function: sensible_fire of class  player_type */
+static int toluaI_set_player_player_type_sensible_fire(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sensible_fire = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sensible_lite of class  player_type */
+static int toluaI_get_player_player_type_sensible_lite(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sensible_lite);
+ return 1;
+}
+
+/* set function: sensible_lite of class  player_type */
+static int toluaI_set_player_player_type_sensible_lite(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sensible_lite = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: reflect of class  player_type */
+static int toluaI_get_player_player_type_reflect(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->reflect);
+ return 1;
+}
+
+/* set function: reflect of class  player_type */
+static int toluaI_set_player_player_type_reflect(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->reflect = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sh_fire of class  player_type */
+static int toluaI_get_player_player_type_sh_fire(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sh_fire);
+ return 1;
+}
+
+/* set function: sh_fire of class  player_type */
+static int toluaI_set_player_player_type_sh_fire(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sh_fire = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sh_elec of class  player_type */
+static int toluaI_get_player_player_type_sh_elec(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sh_elec);
+ return 1;
+}
+
+/* set function: sh_elec of class  player_type */
+static int toluaI_set_player_player_type_sh_elec(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sh_elec = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: wraith_form of class  player_type */
+static int toluaI_get_player_player_type_wraith_form(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->wraith_form);
+ return 1;
+}
+
+/* set function: wraith_form of class  player_type */
+static int toluaI_set_player_player_type_wraith_form(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->wraith_form = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: anti_magic of class  player_type */
+static int toluaI_get_player_player_type_anti_magic(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->anti_magic);
+ return 1;
+}
+
+/* set function: anti_magic of class  player_type */
+static int toluaI_set_player_player_type_anti_magic(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->anti_magic = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: anti_tele of class  player_type */
+static int toluaI_get_player_player_type_anti_tele(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->anti_tele);
+ return 1;
+}
+
+/* set function: anti_tele of class  player_type */
+static int toluaI_set_player_player_type_anti_tele(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->anti_tele = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sustain_str of class  player_type */
+static int toluaI_get_player_player_type_sustain_str(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sustain_str);
+ return 1;
+}
+
+/* set function: sustain_str of class  player_type */
+static int toluaI_set_player_player_type_sustain_str(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sustain_str = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sustain_int of class  player_type */
+static int toluaI_get_player_player_type_sustain_int(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sustain_int);
+ return 1;
+}
+
+/* set function: sustain_int of class  player_type */
+static int toluaI_set_player_player_type_sustain_int(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sustain_int = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sustain_wis of class  player_type */
+static int toluaI_get_player_player_type_sustain_wis(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sustain_wis);
+ return 1;
+}
+
+/* set function: sustain_wis of class  player_type */
+static int toluaI_set_player_player_type_sustain_wis(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sustain_wis = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sustain_dex of class  player_type */
+static int toluaI_get_player_player_type_sustain_dex(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sustain_dex);
+ return 1;
+}
+
+/* set function: sustain_dex of class  player_type */
+static int toluaI_set_player_player_type_sustain_dex(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sustain_dex = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sustain_con of class  player_type */
+static int toluaI_get_player_player_type_sustain_con(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sustain_con);
+ return 1;
+}
+
+/* set function: sustain_con of class  player_type */
+static int toluaI_set_player_player_type_sustain_con(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sustain_con = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: sustain_chr of class  player_type */
+static int toluaI_get_player_player_type_sustain_chr(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->sustain_chr);
+ return 1;
+}
+
+/* set function: sustain_chr of class  player_type */
+static int toluaI_set_player_player_type_sustain_chr(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->sustain_chr = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: aggravate of class  player_type */
+static int toluaI_get_player_player_type_aggravate(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->aggravate);
+ return 1;
+}
+
+/* set function: aggravate of class  player_type */
+static int toluaI_set_player_player_type_aggravate(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->aggravate = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: teleport of class  player_type */
+static int toluaI_get_player_player_type_teleport(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->teleport);
+ return 1;
+}
+
+/* set function: teleport of class  player_type */
+static int toluaI_set_player_player_type_teleport(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->teleport = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: exp_drain of class  player_type */
+static int toluaI_get_player_player_type_exp_drain(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->exp_drain);
+ return 1;
+}
+
+/* set function: exp_drain of class  player_type */
+static int toluaI_set_player_player_type_exp_drain(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->exp_drain = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: drain_mana of class  player_type */
+static int toluaI_get_player_player_type_drain_mana(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->drain_mana);
+ return 1;
+}
+
+/* set function: drain_mana of class  player_type */
+static int toluaI_set_player_player_type_drain_mana(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->drain_mana = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: drain_life of class  player_type */
+static int toluaI_get_player_player_type_drain_life(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->drain_life);
+ return 1;
+}
+
+/* set function: drain_life of class  player_type */
+static int toluaI_set_player_player_type_drain_life(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->drain_life = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: magical_breath of class  player_type */
+static int toluaI_get_player_player_type_magical_breath(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->magical_breath);
+ return 1;
+}
+
+/* set function: magical_breath of class  player_type */
+static int toluaI_set_player_player_type_magical_breath(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->magical_breath = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: water_breath of class  player_type */
+static int toluaI_get_player_player_type_water_breath(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->water_breath);
+ return 1;
+}
+
+/* set function: water_breath of class  player_type */
+static int toluaI_set_player_player_type_water_breath(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->water_breath = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: climb of class  player_type */
+static int toluaI_get_player_player_type_climb(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->climb);
+ return 1;
+}
+
+/* set function: climb of class  player_type */
+static int toluaI_set_player_player_type_climb(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->climb = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: fly of class  player_type */
+static int toluaI_get_player_player_type_fly(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->fly);
+ return 1;
+}
+
+/* set function: fly of class  player_type */
+static int toluaI_set_player_player_type_fly(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->fly = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ffall of class  player_type */
+static int toluaI_get_player_player_type_ffall(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ffall);
+ return 1;
+}
+
+/* set function: ffall of class  player_type */
+static int toluaI_set_player_player_type_ffall(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ffall = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: lite of class  player_type */
+static int toluaI_get_player_player_type_lite(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->lite);
+ return 1;
+}
+
+/* set function: lite of class  player_type */
+static int toluaI_set_player_player_type_lite(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->lite = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: free_act of class  player_type */
+static int toluaI_get_player_player_type_free_act(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->free_act);
+ return 1;
+}
+
+/* set function: free_act of class  player_type */
+static int toluaI_set_player_player_type_free_act(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->free_act = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: see_inv of class  player_type */
+static int toluaI_get_player_player_type_see_inv(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->see_inv);
+ return 1;
+}
+
+/* set function: see_inv of class  player_type */
+static int toluaI_set_player_player_type_see_inv(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->see_inv = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: regenerate of class  player_type */
+static int toluaI_get_player_player_type_regenerate(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->regenerate);
+ return 1;
+}
+
+/* set function: regenerate of class  player_type */
+static int toluaI_set_player_player_type_regenerate(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->regenerate = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: hold_life of class  player_type */
+static int toluaI_get_player_player_type_hold_life(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->hold_life);
+ return 1;
+}
+
+/* set function: hold_life of class  player_type */
+static int toluaI_set_player_player_type_hold_life(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->hold_life = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: telepathy of class  player_type */
+static int toluaI_get_player_player_type_telepathy(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->telepathy);
+ return 1;
+}
+
+/* set function: telepathy of class  player_type */
+static int toluaI_set_player_player_type_telepathy(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->telepathy = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: slow_digest of class  player_type */
+static int toluaI_get_player_player_type_slow_digest(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->slow_digest);
+ return 1;
+}
+
+/* set function: slow_digest of class  player_type */
+static int toluaI_set_player_player_type_slow_digest(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->slow_digest = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: bless_blade of class  player_type */
+static int toluaI_get_player_player_type_bless_blade(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->bless_blade);
+ return 1;
+}
+
+/* set function: bless_blade of class  player_type */
+static int toluaI_set_player_player_type_bless_blade(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->bless_blade = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: xtra_might of class  player_type */
+static int toluaI_get_player_player_type_xtra_might(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->xtra_might);
+ return 1;
+}
+
+/* set function: xtra_might of class  player_type */
+static int toluaI_set_player_player_type_xtra_might(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->xtra_might = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: impact of class  player_type */
+static int toluaI_get_player_player_type_impact(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->impact);
+ return 1;
+}
+
+/* set function: impact of class  player_type */
+static int toluaI_set_player_player_type_impact(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->impact = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: auto_id of class  player_type */
+static int toluaI_get_player_player_type_auto_id(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->auto_id);
+ return 1;
+}
+
+/* set function: auto_id of class  player_type */
+static int toluaI_set_player_player_type_auto_id(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->auto_id = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: dis_to_h of class  player_type */
+static int toluaI_get_player_player_type_dis_to_h(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->dis_to_h);
+ return 1;
+}
+
+/* set function: dis_to_h of class  player_type */
+static int toluaI_set_player_player_type_dis_to_h(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->dis_to_h = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: dis_to_d of class  player_type */
+static int toluaI_get_player_player_type_dis_to_d(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->dis_to_d);
+ return 1;
+}
+
+/* set function: dis_to_d of class  player_type */
+static int toluaI_set_player_player_type_dis_to_d(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->dis_to_d = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: dis_to_a of class  player_type */
+static int toluaI_get_player_player_type_dis_to_a(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->dis_to_a);
+ return 1;
+}
+
+/* set function: dis_to_a of class  player_type */
+static int toluaI_set_player_player_type_dis_to_a(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->dis_to_a = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: dis_ac of class  player_type */
+static int toluaI_get_player_player_type_dis_ac(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->dis_ac);
+ return 1;
+}
+
+/* set function: dis_ac of class  player_type */
+static int toluaI_set_player_player_type_dis_ac(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->dis_ac = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_m of class  player_type */
+static int toluaI_get_player_player_type_to_m(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_m);
+ return 1;
+}
+
+/* set function: to_m of class  player_type */
+static int toluaI_set_player_player_type_to_m(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_m = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_s of class  player_type */
+static int toluaI_get_player_player_type_to_s(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_s);
+ return 1;
+}
+
+/* set function: to_s of class  player_type */
+static int toluaI_set_player_player_type_to_s(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_s = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_h of class  player_type */
+static int toluaI_get_player_player_type_to_h(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_h);
+ return 1;
+}
+
+/* set function: to_h of class  player_type */
+static int toluaI_set_player_player_type_to_h(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_h = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_d of class  player_type */
+static int toluaI_get_player_player_type_to_d(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_d);
+ return 1;
+}
+
+/* set function: to_d of class  player_type */
+static int toluaI_set_player_player_type_to_d(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_d = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_a of class  player_type */
+static int toluaI_get_player_player_type_to_a(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_a);
+ return 1;
+}
+
+/* set function: to_a of class  player_type */
+static int toluaI_set_player_player_type_to_a(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_a = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_h_melee of class  player_type */
+static int toluaI_get_player_player_type_to_h_melee(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_h_melee);
+ return 1;
+}
+
+/* set function: to_h_melee of class  player_type */
+static int toluaI_set_player_player_type_to_h_melee(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_h_melee = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_d_melee of class  player_type */
+static int toluaI_get_player_player_type_to_d_melee(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_d_melee);
+ return 1;
+}
+
+/* set function: to_d_melee of class  player_type */
+static int toluaI_set_player_player_type_to_d_melee(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_d_melee = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_h_ranged of class  player_type */
+static int toluaI_get_player_player_type_to_h_ranged(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_h_ranged);
+ return 1;
+}
+
+/* set function: to_h_ranged of class  player_type */
+static int toluaI_set_player_player_type_to_h_ranged(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_h_ranged = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: to_d_ranged of class  player_type */
+static int toluaI_get_player_player_type_to_d_ranged(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->to_d_ranged);
+ return 1;
+}
+
+/* set function: to_d_ranged of class  player_type */
+static int toluaI_set_player_player_type_to_d_ranged(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->to_d_ranged = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: num_blow of class  player_type */
+static int toluaI_get_player_player_type_num_blow(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->num_blow);
+ return 1;
+}
+
+/* set function: num_blow of class  player_type */
+static int toluaI_set_player_player_type_num_blow(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->num_blow = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: num_fire of class  player_type */
+static int toluaI_get_player_player_type_num_fire(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->num_fire);
+ return 1;
+}
+
+/* set function: num_fire of class  player_type */
+static int toluaI_set_player_player_type_num_fire(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->num_fire = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ac of class  player_type */
+static int toluaI_get_player_player_type_ac(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->ac);
+ return 1;
+}
+
+/* set function: ac of class  player_type */
+static int toluaI_set_player_player_type_ac(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->ac = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: antimagic of class  player_type */
+static int toluaI_get_player_player_type_antimagic(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->antimagic);
+ return 1;
+}
+
+/* set function: antimagic of class  player_type */
+static int toluaI_set_player_player_type_antimagic(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->antimagic = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: antimagic_dis of class  player_type */
+static int toluaI_get_player_player_type_antimagic_dis(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->antimagic_dis);
+ return 1;
+}
+
+/* set function: antimagic_dis of class  player_type */
+static int toluaI_set_player_player_type_antimagic_dis(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->antimagic_dis = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: see_infra of class  player_type */
+static int toluaI_get_player_player_type_see_infra(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->see_infra);
+ return 1;
+}
+
+/* set function: see_infra of class  player_type */
+static int toluaI_set_player_player_type_see_infra(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->see_infra = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: skill_dis of class  player_type */
+static int toluaI_get_player_player_type_skill_dis(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->skill_dis);
+ return 1;
+}
+
+/* set function: skill_dis of class  player_type */
+static int toluaI_set_player_player_type_skill_dis(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->skill_dis = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: skill_dev of class  player_type */
+static int toluaI_get_player_player_type_skill_dev(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->skill_dev);
+ return 1;
+}
+
+/* set function: skill_dev of class  player_type */
+static int toluaI_set_player_player_type_skill_dev(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->skill_dev = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: skill_sav of class  player_type */
+static int toluaI_get_player_player_type_skill_sav(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->skill_sav);
+ return 1;
+}
+
+/* set function: skill_sav of class  player_type */
+static int toluaI_set_player_player_type_skill_sav(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->skill_sav = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: skill_stl of class  player_type */
+static int toluaI_get_player_player_type_skill_stl(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->skill_stl);
+ return 1;
+}
+
+/* set function: skill_stl of class  player_type */
+static int toluaI_set_player_player_type_skill_stl(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->skill_stl = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: skill_srh of class  player_type */
+static int toluaI_get_player_player_type_skill_srh(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->skill_srh);
+ return 1;
+}
+
+/* set function: skill_srh of class  player_type */
+static int toluaI_set_player_player_type_skill_srh(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->skill_srh = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: skill_fos of class  player_type */
+static int toluaI_get_player_player_type_skill_fos(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->skill_fos);
+ return 1;
+}
+
+/* set function: skill_fos of class  player_type */
+static int toluaI_set_player_player_type_skill_fos(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->skill_fos = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: skill_thn of class  player_type */
+static int toluaI_get_player_player_type_skill_thn(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->skill_thn);
+ return 1;
+}
+
+/* set function: skill_thn of class  player_type */
+static int toluaI_set_player_player_type_skill_thn(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->skill_thn = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: skill_thb of class  player_type */
+static int toluaI_get_player_player_type_skill_thb(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->skill_thb);
+ return 1;
+}
+
+/* set function: skill_thb of class  player_type */
+static int toluaI_set_player_player_type_skill_thb(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->skill_thb = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: skill_tht of class  player_type */
+static int toluaI_get_player_player_type_skill_tht(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->skill_tht);
+ return 1;
+}
+
+/* set function: skill_tht of class  player_type */
+static int toluaI_set_player_player_type_skill_tht(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->skill_tht = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: skill_dig of class  player_type */
+static int toluaI_get_player_player_type_skill_dig(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->skill_dig);
+ return 1;
+}
+
+/* set function: skill_dig of class  player_type */
+static int toluaI_set_player_player_type_skill_dig(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->skill_dig = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: skill_points of class  player_type */
+static int toluaI_get_player_player_type_skill_points(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->skill_points);
+ return 1;
+}
+
+/* set function: skill_points of class  player_type */
+static int toluaI_set_player_player_type_skill_points(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->skill_points = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: control of class  player_type */
+static int toluaI_get_player_player_type_control(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->control);
+ return 1;
+}
+
+/* set function: control of class  player_type */
+static int toluaI_set_player_player_type_control(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->control = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: control_dir of class  player_type */
+static int toluaI_get_player_player_type_control_dir(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->control_dir);
+ return 1;
+}
+
+/* set function: control_dir of class  player_type */
+static int toluaI_set_player_player_type_control_dir(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->control_dir = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: companion_killed of class  player_type */
+static int toluaI_get_player_player_type_companion_killed(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->companion_killed);
+ return 1;
+}
+
+/* set function: companion_killed of class  player_type */
+static int toluaI_set_player_player_type_companion_killed(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->companion_killed = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: black_breath of class  player_type */
+static int toluaI_get_player_player_type_black_breath(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->black_breath);
+ return 1;
+}
+
+/* set function: black_breath of class  player_type */
+static int toluaI_set_player_player_type_black_breath(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->black_breath = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: body_monster of class  player_type */
+static int toluaI_get_player_player_type_body_monster(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->body_monster);
+ return 1;
+}
+
+/* set function: body_monster of class  player_type */
+static int toluaI_set_player_player_type_body_monster(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->body_monster = ((u16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: body_parts of class  player_type */
+static int toluaI_get_player_player_type_body_parts(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=28)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->body_parts[toluaI_index]);
+ return 1;
+}
+
+/* set function: body_parts of class  player_type */
+static int toluaI_set_player_player_type_body_parts(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=28)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->body_parts[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: extra_body_parts of class  player_type */
+static int toluaI_get_player_player_type_extra_body_parts(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=BODY_MAX)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->extra_body_parts[toluaI_index]);
+ return 1;
+}
+
+/* set function: extra_body_parts of class  player_type */
+static int toluaI_set_player_player_type_extra_body_parts(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=BODY_MAX)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->extra_body_parts[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: powers_mod of class  player_type */
+static int toluaI_get_player_player_type_powers_mod(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=POWER_MAX_INIT)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->powers_mod[toluaI_index]);
+ return 1;
+}
+
+/* set function: powers_mod of class  player_type */
+static int toluaI_set_player_player_type_powers_mod(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=POWER_MAX_INIT)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->powers_mod[toluaI_index] = ((bool)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: powers of class  player_type */
+static int toluaI_get_player_player_type_powers(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=power_max)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->powers[toluaI_index]);
+ return 1;
+}
+
+/* set function: powers of class  player_type */
+static int toluaI_set_player_player_type_powers(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=power_max)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->powers[toluaI_index] = ((bool)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: spellbinder_num of class  player_type */
+static int toluaI_get_player_player_type_spellbinder_num(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->spellbinder_num);
+ return 1;
+}
+
+/* set function: spellbinder_num of class  player_type */
+static int toluaI_set_player_player_type_spellbinder_num(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->spellbinder_num = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: spellbinder of class  player_type */
+static int toluaI_get_player_player_type_spellbinder(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->spellbinder[toluaI_index]);
+ return 1;
+}
+
+/* set function: spellbinder of class  player_type */
+static int toluaI_set_player_player_type_spellbinder(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->spellbinder[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: spellbinder_trigger of class  player_type */
+static int toluaI_get_player_player_type_spellbinder_trigger(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->spellbinder_trigger);
+ return 1;
+}
+
+/* set function: spellbinder_trigger of class  player_type */
+static int toluaI_set_player_player_type_spellbinder_trigger(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->spellbinder_trigger = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: corruptions of class  player_type */
+static int toluaI_get_player_player_type_corruptions_aux(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_corruptions)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->corruptions[toluaI_index]);
+ return 1;
+}
+
+/* set function: corruptions of class  player_type */
+static int toluaI_set_player_player_type_corruptions_aux(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_type* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_type*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_corruptions)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->corruptions[toluaI_index] = ((bool)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: astral of class  player_type */
+static int toluaI_get_player_player_type_astral(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->astral);
+ return 1;
+}
+
+/* set function: astral of class  player_type */
+static int toluaI_set_player_player_type_astral(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->astral = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: leaving of class  player_type */
+static int toluaI_get_player_player_type_leaving(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->leaving);
+ return 1;
+}
+
+/* set function: leaving of class  player_type */
+static int toluaI_set_player_player_type_leaving(lua_State* tolua_S)
+{
+  player_type* self = (player_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->leaving = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: title of class  player_race */
+static int toluaI_get_player_player_race_title(lua_State* tolua_S)
+{
+  player_race* self = (player_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->title);
+ return 1;
+}
+
+/* set function: title of class  player_race */
+static int toluaI_set_player_player_race_title(lua_State* tolua_S)
+{
+  player_race* self = (player_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->title = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: desc of class  player_race */
+static int toluaI_get_player_player_race_desc(lua_State* tolua_S)
+{
+  player_race* self = (player_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->desc);
+ return 1;
+}
+
+/* set function: desc of class  player_race */
+static int toluaI_set_player_player_race_desc(lua_State* tolua_S)
+{
+  player_race* self = (player_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->desc = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: infra of class  player_race */
+static int toluaI_get_player_player_race_infra(lua_State* tolua_S)
+{
+  player_race* self = (player_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->infra);
+ return 1;
+}
+
+/* set function: infra of class  player_race */
+static int toluaI_set_player_player_race_infra(lua_State* tolua_S)
+{
+  player_race* self = (player_race*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->infra = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: title of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_title(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->title);
+ return 1;
+}
+
+/* set function: title of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_title(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->title = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: desc of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_desc(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->desc);
+ return 1;
+}
+
+/* set function: desc of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_desc(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->desc = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: place of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_place(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->place);
+ return 1;
+}
+
+/* set function: place of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_place(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->place = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_adj of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_r_adj(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->r_adj[toluaI_index]);
+ return 1;
+}
+
+/* set function: r_adj of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_r_adj(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=6)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->r_adj[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: luck of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_luck(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->luck);
+ return 1;
+}
+
+/* set function: luck of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_luck(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->luck = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mana of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_mana(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mana);
+ return 1;
+}
+
+/* set function: mana of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_mana(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mana = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_dis of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_r_dis(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_dis);
+ return 1;
+}
+
+/* set function: r_dis of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_r_dis(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_dis = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_dev of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_r_dev(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_dev);
+ return 1;
+}
+
+/* set function: r_dev of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_r_dev(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_dev = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_sav of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_r_sav(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_sav);
+ return 1;
+}
+
+/* set function: r_sav of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_r_sav(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_sav = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_stl of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_r_stl(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_stl);
+ return 1;
+}
+
+/* set function: r_stl of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_r_stl(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_stl = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_srh of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_r_srh(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_srh);
+ return 1;
+}
+
+/* set function: r_srh of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_r_srh(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_srh = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_fos of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_r_fos(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_fos);
+ return 1;
+}
+
+/* set function: r_fos of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_r_fos(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_fos = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_thn of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_r_thn(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_thn);
+ return 1;
+}
+
+/* set function: r_thn of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_r_thn(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_thn = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_thb of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_r_thb(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_thb);
+ return 1;
+}
+
+/* set function: r_thb of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_r_thb(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_thb = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_mhp of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_r_mhp(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_mhp);
+ return 1;
+}
+
+/* set function: r_mhp of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_r_mhp(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_mhp = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: r_exp of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_r_exp(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->r_exp);
+ return 1;
+}
+
+/* set function: r_exp of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_r_exp(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->r_exp = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: b_age of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_b_age(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->b_age);
+ return 1;
+}
+
+/* set function: b_age of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_b_age(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->b_age = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: m_age of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_m_age(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->m_age);
+ return 1;
+}
+
+/* set function: m_age of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_m_age(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->m_age = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: m_b_ht of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_m_b_ht(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->m_b_ht);
+ return 1;
+}
+
+/* set function: m_b_ht of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_m_b_ht(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->m_b_ht = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: m_m_ht of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_m_m_ht(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->m_m_ht);
+ return 1;
+}
+
+/* set function: m_m_ht of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_m_m_ht(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->m_m_ht = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: m_b_wt of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_m_b_wt(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->m_b_wt);
+ return 1;
+}
+
+/* set function: m_b_wt of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_m_b_wt(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->m_b_wt = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: m_m_wt of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_m_m_wt(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->m_m_wt);
+ return 1;
+}
+
+/* set function: m_m_wt of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_m_m_wt(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->m_m_wt = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: f_b_ht of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_f_b_ht(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->f_b_ht);
+ return 1;
+}
+
+/* set function: f_b_ht of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_f_b_ht(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->f_b_ht = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: f_m_ht of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_f_m_ht(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->f_m_ht);
+ return 1;
+}
+
+/* set function: f_m_ht of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_f_m_ht(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->f_m_ht = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: f_b_wt of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_f_b_wt(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->f_b_wt);
+ return 1;
+}
+
+/* set function: f_b_wt of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_f_b_wt(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->f_b_wt = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: f_m_wt of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_f_m_wt(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->f_m_wt);
+ return 1;
+}
+
+/* set function: f_m_wt of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_f_m_wt(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->f_m_wt = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: infra of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_infra(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->infra);
+ return 1;
+}
+
+/* set function: infra of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_infra(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->infra = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: choice of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_choice(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->choice[toluaI_index]);
+ return 1;
+}
+
+/* set function: choice of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_choice(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->choice[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: pclass of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_pclass(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->pclass[toluaI_index]);
+ return 1;
+}
+
+/* set function: pclass of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_pclass(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->pclass[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: mclass of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_mclass(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->mclass[toluaI_index]);
+ return 1;
+}
+
+/* set function: mclass of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_mclass(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=2)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->mclass[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: powers of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_powers(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->powers[toluaI_index]);
+ return 1;
+}
+
+/* set function: powers of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_powers(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=4)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->powers[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: body_parts of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_body_parts(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=BODY_MAX)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->body_parts[toluaI_index]);
+ return 1;
+}
+
+/* set function: body_parts of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_body_parts(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=BODY_MAX)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->body_parts[toluaI_index] = ((char)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: flags1 of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_flags1(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags1);
+ return 1;
+}
+
+/* set function: flags1 of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_flags1(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags1 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: flags2 of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_flags2(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->flags2);
+ return 1;
+}
+
+/* set function: flags2 of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_flags2(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->flags2 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: oflags1 of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_oflags1(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=51)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->oflags1[toluaI_index]);
+ return 1;
+}
+
+/* set function: oflags1 of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_oflags1(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=51)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->oflags1[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: oflags2 of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_oflags2(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=51)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->oflags2[toluaI_index]);
+ return 1;
+}
+
+/* set function: oflags2 of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_oflags2(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=51)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->oflags2[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: oflags3 of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_oflags3(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=51)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->oflags3[toluaI_index]);
+ return 1;
+}
+
+/* set function: oflags3 of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_oflags3(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=51)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->oflags3[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: oflags4 of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_oflags4(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=51)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->oflags4[toluaI_index]);
+ return 1;
+}
+
+/* set function: oflags4 of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_oflags4(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=51)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->oflags4[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: oflags5 of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_oflags5(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=51)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->oflags5[toluaI_index]);
+ return 1;
+}
+
+/* set function: oflags5 of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_oflags5(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=51)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->oflags5[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: oesp of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_oesp(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=51)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->oesp[toluaI_index]);
+ return 1;
+}
+
+/* set function: oesp of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_oesp(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=51)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->oesp[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: opval of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_opval(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=51)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->opval[toluaI_index]);
+ return 1;
+}
+
+/* set function: opval of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_opval(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=51)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->opval[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: g_attr of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_g_attr(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->g_attr);
+ return 1;
+}
+
+/* set function: g_attr of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_g_attr(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->g_attr = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: g_char of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_g_char(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->g_char);
+ return 1;
+}
+
+/* set function: g_char of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_g_char(lua_State* tolua_S)
+{
+  player_race_mod* self = (player_race_mod*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->g_char = ((char)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: skill_basem of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_skill_basem(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_SKILLS)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->skill_basem[toluaI_index]);
+ return 1;
+}
+
+/* set function: skill_basem of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_skill_basem(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_SKILLS)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->skill_basem[toluaI_index] = ((char)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: skill_base of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_skill_base(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_SKILLS)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->skill_base[toluaI_index]);
+ return 1;
+}
+
+/* set function: skill_base of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_skill_base(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_SKILLS)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->skill_base[toluaI_index] = ((u32b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: skill_modm of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_skill_modm(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_SKILLS)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->skill_modm[toluaI_index]);
+ return 1;
+}
+
+/* set function: skill_modm of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_skill_modm(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_SKILLS)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->skill_modm[toluaI_index] = ((char)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: skill_mod of class  player_race_mod */
+static int toluaI_get_player_player_race_mod_skill_mod(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_SKILLS)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)self->skill_mod[toluaI_index]);
+ return 1;
+}
+
+/* set function: skill_mod of class  player_race_mod */
+static int toluaI_set_player_player_race_mod_skill_mod(lua_State* tolua_S)
+{
+ int toluaI_index;
+  player_race_mod* self;
+ lua_pushstring(tolua_S,".self");
+ lua_rawget(tolua_S,1);
+ self = (player_race_mod*)  lua_touserdata(tolua_S,-1);
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=MAX_SKILLS)
+ tolua_error(tolua_S,"array indexing out of range.");
+  self->skill_mod[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: energy_use */
+static int toluaI_get_player_energy_use(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)energy_use);
+ return 1;
+}
+
+/* set function: energy_use */
+static int toluaI_set_player_energy_use(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  energy_use = ((s32b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: p_ptr */
+static int toluaI_get_player_player(lua_State* tolua_S)
+{
+ tolua_pushusertype(tolua_S,(void*)p_ptr,tolua_tag(tolua_S,"player_type"));
+ return 1;
+}
+
+/* set function: p_ptr */
+static int toluaI_set_player_player(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,tolua_tag(tolua_S,"player_type"),0))
+ TOLUA_ERR_ASSIGN;
+  p_ptr = ((player_type*)  tolua_getusertype(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: max_rp_idx */
+static int toluaI_get_player_max_rp_idx(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)max_rp_idx);
+ return 1;
+}
+
+/* set function: max_rp_idx */
+static int toluaI_set_player_max_rp_idx(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  max_rp_idx = ((u16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: race_info */
+static int toluaI_get_player_race_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_rp_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&race_info[toluaI_index],tolua_tag(tolua_S,"player_race"));
+ return 1;
+}
+
+/* set function: race_info */
+static int toluaI_set_player_race_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_rp_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  race_info[toluaI_index] = *((player_race*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: rp_name */
+static int toluaI_get_player_rp_name(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)rp_name);
+ return 1;
+}
+
+/* set function: rp_name */
+static int toluaI_set_player_rp_name(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  rp_name = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: rp_text */
+static int toluaI_get_player_rp_text(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)rp_text);
+ return 1;
+}
+
+/* set function: rp_text */
+static int toluaI_set_player_rp_text(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  rp_text = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: max_rmp_idx */
+static int toluaI_get_player_max_rmp_idx(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)max_rmp_idx);
+ return 1;
+}
+
+/* set function: max_rmp_idx */
+static int toluaI_set_player_max_rmp_idx(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  max_rmp_idx = ((u16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: race_mod_info */
+static int toluaI_get_player_race_mod_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_rmp_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&race_mod_info[toluaI_index],tolua_tag(tolua_S,"player_race_mod"));
+ return 1;
+}
+
+/* set function: race_mod_info */
+static int toluaI_set_player_race_mod_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_rmp_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  race_mod_info[toluaI_index] = *((player_race_mod*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: rmp_name */
+static int toluaI_get_player_rmp_name(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)rmp_name);
+ return 1;
+}
+
+/* set function: rmp_name */
+static int toluaI_set_player_rmp_name(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  rmp_name = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: rmp_text */
+static int toluaI_get_player_rmp_text(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)rmp_text);
+ return 1;
+}
+
+/* set function: rmp_text */
+static int toluaI_set_player_rmp_text(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  rmp_text = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: class_info */
+static int toluaI_get_player_class_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_c_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&class_info[toluaI_index],tolua_tag(tolua_S,"player_class"));
+ return 1;
+}
+
+/* set function: class_info */
+static int toluaI_set_player_class_info(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_c_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  class_info[toluaI_index] = *((player_class*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: c_name */
+static int toluaI_get_player_c_name(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)c_name);
+ return 1;
+}
+
+/* set function: c_name */
+static int toluaI_set_player_c_name(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  c_name = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: c_text */
+static int toluaI_get_player_c_text(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)c_text);
+ return 1;
+}
+
+/* set function: c_text */
+static int toluaI_set_player_c_text(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  c_text = ((char*)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: flush_failure */
+static int toluaI_get_player_flush_failure(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)flush_failure);
+ return 1;
+}
+
+/* set function: flush_failure */
+static int toluaI_set_player_flush_failure(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  flush_failure = ((bool)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* function: set_roots */
+static int toluaI_player_set_roots00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+  s16b ac = ((s16b)  tolua_getnumber(tolua_S,2,0));
+  s16b dam = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ {
+  bool toluaI_ret = (bool)  set_roots(v,ac,dam);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_roots'.");
+ return 0;
+}
+
+/* function: set_shadow */
+static int toluaI_player_set_shadow00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_shadow(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_shadow'.");
+ return 0;
+}
+
+/* function: set_parasite */
+static int toluaI_player_set_parasite00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+  int r = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  set_parasite(v,r);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_parasite'.");
+ return 0;
+}
+
+/* function: set_disrupt_shield */
+static int toluaI_player_set_disrupt_shield00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_disrupt_shield(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_disrupt_shield'.");
+ return 0;
+}
+
+/* function: set_prob_travel */
+static int toluaI_player_set_prob_travel00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_prob_travel(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_prob_travel'.");
+ return 0;
+}
+
+/* function: set_project */
+static int toluaI_player_set_project00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,6)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+  s16b gf = ((s16b)  tolua_getnumber(tolua_S,2,0));
+  s16b dam = ((s16b)  tolua_getnumber(tolua_S,3,0));
+  s16b rad = ((s16b)  tolua_getnumber(tolua_S,4,0));
+  s16b flag = ((s16b)  tolua_getnumber(tolua_S,5,0));
+ {
+  bool toluaI_ret = (bool)  set_project(v,gf,dam,rad,flag);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_project'.");
+ return 0;
+}
+
+/* function: set_tim_deadly */
+static int toluaI_player_set_tim_deadly00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_tim_deadly(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_tim_deadly'.");
+ return 0;
+}
+
+/* function: set_tim_res_time */
+static int toluaI_player_set_tim_res_time00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_tim_res_time(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_tim_res_time'.");
+ return 0;
+}
+
+/* function: set_tim_reflect */
+static int toluaI_player_set_tim_reflect00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_tim_reflect(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_tim_reflect'.");
+ return 0;
+}
+
+/* function: set_meditation */
+static int toluaI_player_set_meditation00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_meditation(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_meditation'.");
+ return 0;
+}
+
+/* function: set_strike */
+static int toluaI_player_set_strike00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_strike(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_strike'.");
+ return 0;
+}
+
+/* function: set_walk_water */
+static int toluaI_player_set_walk_water00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_walk_water(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_walk_water'.");
+ return 0;
+}
+
+/* function: set_tim_ffall */
+static int toluaI_player_set_tim_ffall00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_tim_ffall(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_tim_ffall'.");
+ return 0;
+}
+
+/* function: set_tim_fire_aura */
+static int toluaI_player_set_tim_fire_aura00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_tim_fire_aura(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_tim_fire_aura'.");
+ return 0;
+}
+
+/* function: set_tim_regen */
+static int toluaI_player_set_tim_regen00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+  int p = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  set_tim_regen(v,p);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_tim_regen'.");
+ return 0;
+}
+
+/* function: set_holy */
+static int toluaI_player_set_holy00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_holy(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_holy'.");
+ return 0;
+}
+
+/* function: set_grace */
+static int toluaI_player_set_grace00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s32b v = ((s32b)  tolua_getnumber(tolua_S,1,0));
+ {
+  set_grace(v);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_grace'.");
+ return 0;
+}
+
+/* function: set_mimic */
+static int toluaI_player_set_mimic00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+  int p = ((int)  tolua_getnumber(tolua_S,2,0));
+  int level = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  bool toluaI_ret = (bool)  set_mimic(v,p,level);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_mimic'.");
+ return 0;
+}
+
+/* function: set_no_breeders */
+static int toluaI_player_set_no_breeders00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_no_breeders(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_no_breeders'.");
+ return 0;
+}
+
+/* function: set_tim_esp */
+static int toluaI_player_set_tim_esp00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_tim_esp(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_tim_esp'.");
+ return 0;
+}
+
+/* function: set_invis */
+static int toluaI_player_set_invis00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+  int p = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  set_invis(v,p);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_invis'.");
+ return 0;
+}
+
+/* function: set_lite */
+static int toluaI_player_set_lite00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_lite(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_lite'.");
+ return 0;
+}
+
+/* function: set_blind */
+static int toluaI_player_set_blind00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_blind(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_blind'.");
+ return 0;
+}
+
+/* function: set_confused */
+static int toluaI_player_set_confused00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_confused(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_confused'.");
+ return 0;
+}
+
+/* function: set_poisoned */
+static int toluaI_player_set_poisoned00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_poisoned(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_poisoned'.");
+ return 0;
+}
+
+/* function: set_afraid */
+static int toluaI_player_set_afraid00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_afraid(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_afraid'.");
+ return 0;
+}
+
+/* function: set_paralyzed */
+static int toluaI_player_set_paralyzed00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_paralyzed(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_paralyzed'.");
+ return 0;
+}
+
+/* function: set_image */
+static int toluaI_player_set_image00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_image(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_image'.");
+ return 0;
+}
+
+/* function: set_fast */
+static int toluaI_player_set_fast00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+  int p = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  set_fast(v,p);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_fast'.");
+ return 0;
+}
+
+/* function: set_light_speed */
+static int toluaI_player_set_light_speed00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_light_speed(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_light_speed'.");
+ return 0;
+}
+
+/* function: set_slow */
+static int toluaI_player_set_slow00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_slow(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_slow'.");
+ return 0;
+}
+
+/* function: set_shield */
+static int toluaI_player_set_shield00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,6)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+  int p = ((int)  tolua_getnumber(tolua_S,2,0));
+  s16b o = ((s16b)  tolua_getnumber(tolua_S,3,0));
+  s16b d1 = ((s16b)  tolua_getnumber(tolua_S,4,0));
+  s16b d2 = ((s16b)  tolua_getnumber(tolua_S,5,0));
+ {
+  bool toluaI_ret = (bool)  set_shield(v,p,o,d1,d2);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_shield'.");
+ return 0;
+}
+
+/* function: apply_flags */
+static int toluaI_player_apply_flags00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,6,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,7,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,8,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,9,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,10,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,11,LUA_TNUMBER,1) ||
+ !tolua_isnoobj(tolua_S,12)
+ )
+ goto tolua_lerror;
+ else
+ {
+  u32b f1 = ((u32b)  tolua_getnumber(tolua_S,1,0));
+  u32b f2 = ((u32b)  tolua_getnumber(tolua_S,2,0));
+  u32b f3 = ((u32b)  tolua_getnumber(tolua_S,3,0));
+  u32b f4 = ((u32b)  tolua_getnumber(tolua_S,4,0));
+  u32b f5 = ((u32b)  tolua_getnumber(tolua_S,5,0));
+  u32b esp = ((u32b)  tolua_getnumber(tolua_S,6,0));
+  s16b pval = ((s16b)  tolua_getnumber(tolua_S,7,0));
+  s16b tval = ((s16b)  tolua_getnumber(tolua_S,8,0));
+  s16b to_h = ((s16b)  tolua_getnumber(tolua_S,9,0));
+  s16b to_d = ((s16b)  tolua_getnumber(tolua_S,10,0));
+  s16b to_a = ((s16b)  tolua_getnumber(tolua_S,11,0));
+ {
+  apply_flags(f1,f2,f3,f4,f5,esp,pval,tval,to_h,to_d,to_a);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'apply_flags'.");
+ return 0;
+}
+
+/* function: set_tim_thunder */
+static int toluaI_player_set_tim_thunder00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+  int p1 = ((int)  tolua_getnumber(tolua_S,2,0));
+  int p2 = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  bool toluaI_ret = (bool)  set_tim_thunder(v,p1,p2);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_tim_thunder'.");
+ return 0;
+}
+
+/* function: set_tim_breath */
+static int toluaI_player_set_tim_breath00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+  bool magical = ((bool)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  set_tim_breath(v,magical);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_tim_breath'.");
+ return 0;
+}
+
+/* function: set_tim_fly */
+static int toluaI_player_set_tim_fly00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_tim_fly(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_tim_fly'.");
+ return 0;
+}
+
+/* function: set_blessed */
+static int toluaI_player_set_blessed00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_blessed(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_blessed'.");
+ return 0;
+}
+
+/* function: set_hero */
+static int toluaI_player_set_hero00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_hero(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_hero'.");
+ return 0;
+}
+
+/* function: set_shero */
+static int toluaI_player_set_shero00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_shero(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_shero'.");
+ return 0;
+}
+
+/* function: set_protevil */
+static int toluaI_player_set_protevil00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_protevil(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_protevil'.");
+ return 0;
+}
+
+/* function: set_protgood */
+static int toluaI_player_set_protgood00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_protgood(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_protgood'.");
+ return 0;
+}
+
+/* function: set_protundead */
+static int toluaI_player_set_protundead00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_protundead(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_protundead'.");
+ return 0;
+}
+
+/* function: set_invuln */
+static int toluaI_player_set_invuln00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_invuln(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_invuln'.");
+ return 0;
+}
+
+/* function: set_tim_invis */
+static int toluaI_player_set_tim_invis00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_tim_invis(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_tim_invis'.");
+ return 0;
+}
+
+/* function: set_tim_infra */
+static int toluaI_player_set_tim_infra00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_tim_infra(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_tim_infra'.");
+ return 0;
+}
+
+/* function: set_mental_barrier */
+static int toluaI_player_set_mental_barrier00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_mental_barrier(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_mental_barrier'.");
+ return 0;
+}
+
+/* function: set_poison */
+static int toluaI_player_set_poison00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_poison(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_poison'.");
+ return 0;
+}
+
+/* function: set_oppose_acid */
+static int toluaI_player_set_oppose_acid00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_oppose_acid(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_oppose_acid'.");
+ return 0;
+}
+
+/* function: set_oppose_elec */
+static int toluaI_player_set_oppose_elec00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_oppose_elec(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_oppose_elec'.");
+ return 0;
+}
+
+/* function: set_oppose_fire */
+static int toluaI_player_set_oppose_fire00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_oppose_fire(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_oppose_fire'.");
+ return 0;
+}
+
+/* function: set_oppose_cold */
+static int toluaI_player_set_oppose_cold00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_oppose_cold(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_oppose_cold'.");
+ return 0;
+}
+
+/* function: set_oppose_pois */
+static int toluaI_player_set_oppose_pois00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_oppose_pois(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_oppose_pois'.");
+ return 0;
+}
+
+/* function: set_oppose_ld */
+static int toluaI_player_set_oppose_ld00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_oppose_ld(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_oppose_ld'.");
+ return 0;
+}
+
+/* function: set_oppose_cc */
+static int toluaI_player_set_oppose_cc00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_oppose_cc(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_oppose_cc'.");
+ return 0;
+}
+
+/* function: set_oppose_ss */
+static int toluaI_player_set_oppose_ss00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_oppose_ss(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_oppose_ss'.");
+ return 0;
+}
+
+/* function: set_oppose_nex */
+static int toluaI_player_set_oppose_nex00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_oppose_nex(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_oppose_nex'.");
+ return 0;
+}
+
+/* function: set_stun */
+static int toluaI_player_set_stun00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_stun(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_stun'.");
+ return 0;
+}
+
+/* function: set_cut */
+static int toluaI_player_set_cut00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_cut(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_cut'.");
+ return 0;
+}
+
+/* function: set_food */
+static int toluaI_player_set_food00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  set_food(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_food'.");
+ return 0;
+}
+
+/* function: check_experience */
+static int toluaI_player_check_experience00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  check_experience();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'check_experience'.");
+ return 0;
+}
+
+/* function: check_experience_obj */
+static int toluaI_player_check_experience_obj00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  check_experience_obj(o_ptr);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'check_experience_obj'.");
+ return 0;
+}
+
+/* function: gain_exp */
+static int toluaI_player_gain_exp00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s32b amount = ((s32b)  tolua_getnumber(tolua_S,1,0));
+ {
+  gain_exp(amount);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'gain_exp'.");
+ return 0;
+}
+
+/* function: lose_exp */
+static int toluaI_player_lose_exp00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s32b amount = ((s32b)  tolua_getnumber(tolua_S,1,0));
+ {
+  lose_exp(amount);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'lose_exp'.");
+ return 0;
+}
+
+/* function: no_lite */
+static int toluaI_player_no_lite00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  no_lite();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'no_lite'.");
+ return 0;
+}
+
+/* get function: dun_level */
+static int toluaI_get_player_dun_level(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)dun_level);
+ return 1;
+}
+
+/* set function: dun_level */
+static int toluaI_set_player_dun_level(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  dun_level = ((s16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* function: inc_piety */
+static int toluaI_player_inc_piety00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int god = ((int)  tolua_getnumber(tolua_S,1,0));
+  s32b amt = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ {
+  inc_piety(god,amt);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'inc_piety'.");
+ return 0;
+}
+
+/* function: abandon_god */
+static int toluaI_player_abandon_god00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int god = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  abandon_god(god);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'abandon_god'.");
+ return 0;
+}
+
+/* function: wisdom_scale */
+static int toluaI_player_wisdom_scale00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int max = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  int toluaI_ret = (int)  wisdom_scale(max);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'wisdom_scale'.");
+ return 0;
+}
+
+/* function: follow_god */
+static int toluaI_player_follow_god00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int god = ((int)  tolua_getnumber(tolua_S,1,0));
+  bool silent = ((bool)  tolua_getnumber(tolua_S,2,0));
+ {
+  follow_god(god,silent);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'follow_god'.");
+ return 0;
+}
+
+/* function: add_new_gods */
+static int toluaI_player_add_new_gods00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  char* name = ((char*)  tolua_getstring(tolua_S,1,0));
+ {
+  s16b toluaI_ret = (s16b)  add_new_gods(name);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'add_new_gods'.");
+ return 0;
+}
+
+/* function: desc_god */
+static int toluaI_player_desc_god00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int g_idx = ((int)  tolua_getnumber(tolua_S,1,0));
+  int d = ((int)  tolua_getnumber(tolua_S,2,0));
+  char* desc = ((char*)  tolua_getstring(tolua_S,3,0));
+ {
+  desc_god(g_idx,d,desc);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'desc_god'.");
+ return 0;
+}
+
+/* function: do_cmd_throw */
+static int toluaI_player_do_cmd_throw00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  do_cmd_throw();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'do_cmd_throw'.");
+ return 0;
+}
+
+/* function: change_wild_mode */
+static int toluaI_player_change_wild_mode00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  change_wild_mode();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'change_wild_mode'.");
+ return 0;
+}
+
+/* function: switch_class */
+static int toluaI_player_switch_class00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int sclass = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  switch_class(sclass);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'switch_class'.");
+ return 0;
+}
+
+/* function: switch_subclass */
+static int toluaI_player_switch_subclass00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int sclass = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  switch_subclass(sclass);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'switch_subclass'.");
+ return 0;
+}
+
+/* function: switch_subrace */
+static int toluaI_player_switch_subrace00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int racem = ((int)  tolua_getnumber(tolua_S,1,0));
+  bool copy_old = ((bool)  tolua_getnumber(tolua_S,2,0));
+ {
+  switch_subrace(racem,copy_old);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'switch_subrace'.");
+ return 0;
+}
+
+/* function: get_subrace_title */
+static int toluaI_player_get_subrace_title00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int racem = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  cptr toluaI_ret = (cptr)  get_subrace_title(racem);
+ tolua_pushstring(tolua_S,(const char*)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_subrace_title'.");
+ return 0;
+}
+
+/* function: set_subrace_title */
+static int toluaI_player_set_subrace_title00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int racem = ((int)  tolua_getnumber(tolua_S,1,0));
+  cptr name = ((cptr)  tolua_getstring(tolua_S,2,0));
+ {
+  set_subrace_title(racem,name);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_subrace_title'.");
+ return 0;
+}
+
+/* function: do_rebirth */
+static int toluaI_player_do_rebirth00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  do_rebirth();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'do_rebirth'.");
+ return 0;
+}
+
+/* function: lua_test_race_flags */
+static int toluaI_player_test_race_flags00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int slot = ((int)  tolua_getnumber(tolua_S,1,0));
+  u32b flags = ((u32b)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  lua_test_race_flags(slot,flags);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'test_race_flags'.");
+ return 0;
+}
+
+/* get function: wizard */
+static int toluaI_get_player_wizard(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)wizard);
+ return 1;
+}
+
+/* set function: wizard */
+static int toluaI_set_player_wizard(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  wizard = ((bool)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: total_winner */
+static int toluaI_get_player_total_winner(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)total_winner);
+ return 1;
+}
+
+/* set function: total_winner */
+static int toluaI_set_player_total_winner(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  total_winner = ((u16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: has_won */
+static int toluaI_get_player_has_won(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)has_won);
+ return 1;
+}
+
+/* set function: has_won */
+static int toluaI_set_player_has_won(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  has_won = ((u16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: joke_monsters */
+static int toluaI_get_player_joke_monsters(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)joke_monsters);
+ return 1;
+}
+
+/* set function: joke_monsters */
+static int toluaI_set_player_joke_monsters(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  joke_monsters = ((bool)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: max_dlv */
+static int toluaI_get_player_max_dlv(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=999999)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)max_dlv[toluaI_index]);
+ return 1;
+}
+
+/* set function: max_dlv */
+static int toluaI_set_player_max_dlv(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=999999)
+ tolua_error(tolua_S,"array indexing out of range.");
+  max_dlv[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* Open function */
+int tolua_player_open (lua_State* tolua_S)
+{
+ tolua_open(tolua_S);
+ toluaI_reg_types(tolua_S);
+ tolua_constant(tolua_S,NULL,"PY_MAX_LEVEL",PY_MAX_LEVEL);
+ tolua_globalarray(tolua_S,"player_exp",toluaI_get_player_player_exp,toluaI_set_player_player_exp);
+ tolua_constant(tolua_S,NULL,"A_STR",A_STR);
+ tolua_constant(tolua_S,NULL,"A_INT",A_INT);
+ tolua_constant(tolua_S,NULL,"A_WIS",A_WIS);
+ tolua_constant(tolua_S,NULL,"A_DEX",A_DEX);
+ tolua_constant(tolua_S,NULL,"A_CON",A_CON);
+ tolua_constant(tolua_S,NULL,"A_CHR",A_CHR);
+ tolua_constant(tolua_S,NULL,"SUBRACE_SAVE",SUBRACE_SAVE);
+ tolua_constant(tolua_S,NULL,"SEX_FEMALE",SEX_FEMALE);
+ tolua_constant(tolua_S,NULL,"SEX_MALE",SEX_MALE);
+ tolua_constant(tolua_S,NULL,"SEX_NEUTER",SEX_NEUTER);
+ tolua_constant(tolua_S,NULL,"MAX_SEXES",MAX_SEXES);
+ tolua_constant(tolua_S,NULL,"PR1_EXPERIMENTAL",PR1_EXPERIMENTAL);
+ tolua_constant(tolua_S,NULL,"PR1_RESIST_BLACK_BREATH",PR1_RESIST_BLACK_BREATH);
+ tolua_constant(tolua_S,NULL,"PR1_NO_STUN",PR1_NO_STUN);
+ tolua_constant(tolua_S,NULL,"PR1_XTRA_MIGHT_BOW",PR1_XTRA_MIGHT_BOW);
+ tolua_constant(tolua_S,NULL,"PR1_XTRA_MIGHT_XBOW",PR1_XTRA_MIGHT_XBOW);
+ tolua_constant(tolua_S,NULL,"PR1_XTRA_MIGHT_SLING",PR1_XTRA_MIGHT_SLING);
+ tolua_constant(tolua_S,NULL,"PR1_AC_LEVEL",PR1_AC_LEVEL);
+ tolua_constant(tolua_S,NULL,"PR1_HURT_LITE",PR1_HURT_LITE);
+ tolua_constant(tolua_S,NULL,"PR1_VAMPIRE",PR1_VAMPIRE);
+ tolua_constant(tolua_S,NULL,"PR1_UNDEAD",PR1_UNDEAD);
+ tolua_constant(tolua_S,NULL,"PR1_NO_CUT",PR1_NO_CUT);
+ tolua_constant(tolua_S,NULL,"PR1_CORRUPT",PR1_CORRUPT);
+ tolua_constant(tolua_S,NULL,"PR1_NO_FOOD",PR1_NO_FOOD);
+ tolua_constant(tolua_S,NULL,"PR1_NO_GOD",PR1_NO_GOD);
+ tolua_constant(tolua_S,NULL,"PR1_ELF",PR1_ELF);
+ tolua_constant(tolua_S,NULL,"PR1_SEMI_WRAITH",PR1_SEMI_WRAITH);
+ tolua_constant(tolua_S,NULL,"PR1_NO_SUBRACE_CHANGE",PR1_NO_SUBRACE_CHANGE);
+ tolua_constant(tolua_S,NULL,"PR1_ANTIMAGIC",PR1_ANTIMAGIC);
+ tolua_constant(tolua_S,NULL,"PR1_MOLD_FRIEND",PR1_MOLD_FRIEND);
+ tolua_constant(tolua_S,NULL,"PR1_GOD_FRIEND",PR1_GOD_FRIEND);
+ tolua_constant(tolua_S,NULL,"PR1_INNATE_SPELLS",PR1_INNATE_SPELLS);
+ tolua_constant(tolua_S,NULL,"PR1_EASE_STEAL",PR1_EASE_STEAL);
+ tolua_constant(tolua_S,NULL,"PR2_ASTRAL",PR2_ASTRAL);
+ tolua_constant(tolua_S,NULL,"PN_COMBINE",PN_COMBINE);
+ tolua_constant(tolua_S,NULL,"PN_REORDER",PN_REORDER);
+ tolua_constant(tolua_S,NULL,"PU_BONUS",PU_BONUS);
+ tolua_constant(tolua_S,NULL,"PU_TORCH",PU_TORCH);
+ tolua_constant(tolua_S,NULL,"PU_BODY",PU_BODY);
+ tolua_constant(tolua_S,NULL,"PU_SANITY",PU_SANITY);
+ tolua_constant(tolua_S,NULL,"PU_HP",PU_HP);
+ tolua_constant(tolua_S,NULL,"PU_MANA",PU_MANA);
+ tolua_constant(tolua_S,NULL,"PU_SPELLS",PU_SPELLS);
+ tolua_constant(tolua_S,NULL,"PU_POWERS",PU_POWERS);
+ tolua_constant(tolua_S,NULL,"PU_UN_VIEW",PU_UN_VIEW);
+ tolua_constant(tolua_S,NULL,"PU_VIEW",PU_VIEW);
+ tolua_constant(tolua_S,NULL,"PU_MON_LITE",PU_MON_LITE);
+ tolua_constant(tolua_S,NULL,"PU_MONSTERS",PU_MONSTERS);
+ tolua_constant(tolua_S,NULL,"PU_DISTANCE",PU_DISTANCE);
+ tolua_constant(tolua_S,NULL,"PU_FLOW",PU_FLOW);
+ tolua_constant(tolua_S,NULL,"PR_MISC",PR_MISC);
+ tolua_constant(tolua_S,NULL,"PR_TITLE",PR_TITLE);
+ tolua_constant(tolua_S,NULL,"PR_LEV",PR_LEV);
+ tolua_constant(tolua_S,NULL,"PR_EXP",PR_EXP);
+ tolua_constant(tolua_S,NULL,"PR_STATS",PR_STATS);
+ tolua_constant(tolua_S,NULL,"PR_ARMOR",PR_ARMOR);
+ tolua_constant(tolua_S,NULL,"PR_HP",PR_HP);
+ tolua_constant(tolua_S,NULL,"PR_MANA",PR_MANA);
+ tolua_constant(tolua_S,NULL,"PR_GOLD",PR_GOLD);
+ tolua_constant(tolua_S,NULL,"PR_DEPTH",PR_DEPTH);
+ tolua_constant(tolua_S,NULL,"PR_HEALTH",PR_HEALTH);
+ tolua_constant(tolua_S,NULL,"PR_CUT",PR_CUT);
+ tolua_constant(tolua_S,NULL,"PR_STUN",PR_STUN);
+ tolua_constant(tolua_S,NULL,"PR_HUNGER",PR_HUNGER);
+ tolua_constant(tolua_S,NULL,"PR_PIETY",PR_PIETY);
+ tolua_constant(tolua_S,NULL,"PR_BLIND",PR_BLIND);
+ tolua_constant(tolua_S,NULL,"PR_CONFUSED",PR_CONFUSED);
+ tolua_constant(tolua_S,NULL,"PR_AFRAID",PR_AFRAID);
+ tolua_constant(tolua_S,NULL,"PR_POISONED",PR_POISONED);
+ tolua_constant(tolua_S,NULL,"PR_STATE",PR_STATE);
+ tolua_constant(tolua_S,NULL,"PR_SPEED",PR_SPEED);
+ tolua_constant(tolua_S,NULL,"PR_STUDY",PR_STUDY);
+ tolua_constant(tolua_S,NULL,"PR_SANITY",PR_SANITY);
+ tolua_constant(tolua_S,NULL,"PR_EXTRA",PR_EXTRA);
+ tolua_constant(tolua_S,NULL,"PR_BASIC",PR_BASIC);
+ tolua_constant(tolua_S,NULL,"PR_MAP",PR_MAP);
+ tolua_constant(tolua_S,NULL,"PR_WIPE",PR_WIPE);
+ tolua_constant(tolua_S,NULL,"PR_MH",PR_MH);
+ tolua_constant(tolua_S,NULL,"PR_MH",PR_MH);
+ tolua_constant(tolua_S,NULL,"PR_DTRAP",PR_DTRAP);
+ tolua_constant(tolua_S,NULL,"PW_INVEN",PW_INVEN);
+ tolua_constant(tolua_S,NULL,"PW_EQUIP",PW_EQUIP);
+ tolua_constant(tolua_S,NULL,"PW_PLAYER",PW_PLAYER);
+ tolua_constant(tolua_S,NULL,"PW_M_LIST",PW_M_LIST);
+ tolua_constant(tolua_S,NULL,"PW_MESSAGE",PW_MESSAGE);
+ tolua_constant(tolua_S,NULL,"PW_OVERHEAD",PW_OVERHEAD);
+ tolua_constant(tolua_S,NULL,"PW_MONSTER",PW_MONSTER);
+ tolua_constant(tolua_S,NULL,"PW_OBJECT",PW_OBJECT);
+ tolua_constant(tolua_S,NULL,"PW_SNAPSHOT",PW_SNAPSHOT);
+ tolua_constant(tolua_S,NULL,"PW_BORG_1",PW_BORG_1);
+ tolua_constant(tolua_S,NULL,"PW_BORG_2",PW_BORG_2);
+ tolua_cclass(tolua_S,"deity_type","");
+ tolua_tablevar(tolua_S,"deity_type","name",toluaI_get_player_deity_type_name,toluaI_set_player_deity_type_name);
+ tolua_globalarray(tolua_S,"deity_info",toluaI_get_player_deity_info,toluaI_set_player_deity_info);
+ tolua_constant(tolua_S,NULL,"BODY_WEAPON",BODY_WEAPON);
+ tolua_constant(tolua_S,NULL,"BODY_TORSO",BODY_TORSO);
+ tolua_constant(tolua_S,NULL,"BODY_ARMS",BODY_ARMS);
+ tolua_constant(tolua_S,NULL,"BODY_FINGER",BODY_FINGER);
+ tolua_constant(tolua_S,NULL,"BODY_HEAD",BODY_HEAD);
+ tolua_constant(tolua_S,NULL,"BODY_LEGS",BODY_LEGS);
+ tolua_constant(tolua_S,NULL,"BODY_MAX",BODY_MAX);
+ tolua_cclass(tolua_S,"player_type","");
+ tolua_tablevar(tolua_S,"player_type","lives",toluaI_get_player_player_type_lives,toluaI_set_player_player_type_lives);
+ tolua_tablevar(tolua_S,"player_type","oldpy",toluaI_get_player_player_type_oldpy,toluaI_set_player_player_type_oldpy);
+ tolua_tablevar(tolua_S,"player_type","oldpx",toluaI_get_player_player_type_oldpx,toluaI_set_player_player_type_oldpx);
+ tolua_tablevar(tolua_S,"player_type","py",toluaI_get_player_player_type_py,toluaI_set_player_player_type_py);
+ tolua_tablevar(tolua_S,"player_type","px",toluaI_get_player_player_type_px,toluaI_set_player_player_type_px);
+ tolua_tablevar(tolua_S,"player_type","psex",toluaI_get_player_player_type_psex,toluaI_set_player_player_type_psex);
+ tolua_tablevar(tolua_S,"player_type","prace",toluaI_get_player_player_type_prace,toluaI_set_player_player_type_prace);
+ tolua_tablevar(tolua_S,"player_type","pracem",toluaI_get_player_player_type_pracem,toluaI_set_player_player_type_pracem);
+ tolua_tablevar(tolua_S,"player_type","pclass",toluaI_get_player_player_type_pclass,toluaI_set_player_player_type_pclass);
+ tolua_tablevar(tolua_S,"player_type","mimic_form",toluaI_get_player_player_type_mimic_form,toluaI_set_player_player_type_mimic_form);
+ tolua_tablevar(tolua_S,"player_type","mimic_level",toluaI_get_player_player_type_mimic_level,toluaI_set_player_player_type_mimic_level);
+ tolua_tablevar(tolua_S,"player_type","oops",toluaI_get_player_player_type_oops,toluaI_set_player_player_type_oops);
+ tolua_tablearray(tolua_S,"player_type","inventory_real",toluaI_get_player_player_type_inventory_real,toluaI_set_player_player_type_inventory_real);
+ tolua_tablevar(tolua_S,"player_type","hitdie",toluaI_get_player_player_type_hitdie,toluaI_set_player_player_type_hitdie);
+ tolua_tablevar(tolua_S,"player_type","expfact",toluaI_get_player_player_type_expfact,toluaI_set_player_player_type_expfact);
+ tolua_tablevar(tolua_S,"player_type","allow_one_death",toluaI_get_player_player_type_allow_one_death,toluaI_set_player_player_type_allow_one_death);
+ tolua_tablevar(tolua_S,"player_type","age",toluaI_get_player_player_type_age,toluaI_set_player_player_type_age);
+ tolua_tablevar(tolua_S,"player_type","ht",toluaI_get_player_player_type_ht,toluaI_set_player_player_type_ht);
+ tolua_tablevar(tolua_S,"player_type","wt",toluaI_get_player_player_type_wt,toluaI_set_player_player_type_wt);
+ tolua_tablevar(tolua_S,"player_type","sc",toluaI_get_player_player_type_sc,toluaI_set_player_player_type_sc);
+ tolua_tablevar(tolua_S,"player_type","au",toluaI_get_player_player_type_au,toluaI_set_player_player_type_au);
+ tolua_tablevar(tolua_S,"player_type","max_exp",toluaI_get_player_player_type_max_exp,toluaI_set_player_player_type_max_exp);
+ tolua_tablevar(tolua_S,"player_type","exp",toluaI_get_player_player_type_exp,toluaI_set_player_player_type_exp);
+ tolua_tablevar(tolua_S,"player_type","exp_frac",toluaI_get_player_player_type_exp_frac,toluaI_set_player_player_type_exp_frac);
+ tolua_tablevar(tolua_S,"player_type","lev",toluaI_get_player_player_type_lev,toluaI_set_player_player_type_lev);
+ tolua_tablevar(tolua_S,"player_type","town_num",toluaI_get_player_player_type_town_num,toluaI_set_player_player_type_town_num);
+ tolua_tablevar(tolua_S,"player_type","inside_quest",toluaI_get_player_player_type_inside_quest,toluaI_set_player_player_type_inside_quest);
+ tolua_tablevar(tolua_S,"player_type","exit_bldg",toluaI_get_player_player_type_exit_bldg,toluaI_set_player_player_type_exit_bldg);
+ tolua_tablevar(tolua_S,"player_type","wilderness_x",toluaI_get_player_player_type_wilderness_x,toluaI_set_player_player_type_wilderness_x);
+ tolua_tablevar(tolua_S,"player_type","wilderness_y",toluaI_get_player_player_type_wilderness_y,toluaI_set_player_player_type_wilderness_y);
+ tolua_tablevar(tolua_S,"player_type","wild_mode",toluaI_get_player_player_type_wild_mode,toluaI_set_player_player_type_wild_mode);
+ tolua_tablevar(tolua_S,"player_type","old_wild_mode",toluaI_get_player_player_type_old_wild_mode,toluaI_set_player_player_type_old_wild_mode);
+ tolua_tablevar(tolua_S,"player_type","mhp",toluaI_get_player_player_type_mhp,toluaI_set_player_player_type_mhp);
+ tolua_tablevar(tolua_S,"player_type","chp",toluaI_get_player_player_type_chp,toluaI_set_player_player_type_chp);
+ tolua_tablevar(tolua_S,"player_type","chp_frac",toluaI_get_player_player_type_chp_frac,toluaI_set_player_player_type_chp_frac);
+ tolua_tablevar(tolua_S,"player_type","hp_mod",toluaI_get_player_player_type_hp_mod,toluaI_set_player_player_type_hp_mod);
+ tolua_tablevar(tolua_S,"player_type","msp",toluaI_get_player_player_type_msp,toluaI_set_player_player_type_msp);
+ tolua_tablevar(tolua_S,"player_type","csp",toluaI_get_player_player_type_csp,toluaI_set_player_player_type_csp);
+ tolua_tablevar(tolua_S,"player_type","csp_frac",toluaI_get_player_player_type_csp_frac,toluaI_set_player_player_type_csp_frac);
+ tolua_tablevar(tolua_S,"player_type","msane",toluaI_get_player_player_type_msane,toluaI_set_player_player_type_msane);
+ tolua_tablevar(tolua_S,"player_type","csane",toluaI_get_player_player_type_csane,toluaI_set_player_player_type_csane);
+ tolua_tablevar(tolua_S,"player_type","csane_frac",toluaI_get_player_player_type_csane_frac,toluaI_set_player_player_type_csane_frac);
+ tolua_tablevar(tolua_S,"player_type","grace",toluaI_get_player_player_type_grace,toluaI_set_player_player_type_grace);
+ tolua_tablevar(tolua_S,"player_type","pgod",toluaI_get_player_player_type_pgod,toluaI_set_player_player_type_pgod);
+ tolua_tablevar(tolua_S,"player_type","praying",toluaI_get_player_player_type_praying,toluaI_set_player_player_type_praying);
+ tolua_tablevar(tolua_S,"player_type","max_plv",toluaI_get_player_player_type_max_plv,toluaI_set_player_player_type_max_plv);
+ tolua_tablearray(tolua_S,"player_type","stat_max",toluaI_get_player_player_type_stat_max,toluaI_set_player_player_type_stat_max);
+ tolua_tablearray(tolua_S,"player_type","stat_cur",toluaI_get_player_player_type_stat_cur,toluaI_set_player_player_type_stat_cur);
+ tolua_tablevar(tolua_S,"player_type","luck_cur",toluaI_get_player_player_type_luck_cur,toluaI_set_player_player_type_luck_cur);
+ tolua_tablevar(tolua_S,"player_type","luck_max",toluaI_get_player_player_type_luck_max,toluaI_set_player_player_type_luck_max);
+ tolua_tablevar(tolua_S,"player_type","luck_base",toluaI_get_player_player_type_luck_base,toluaI_set_player_player_type_luck_base);
+ tolua_tablevar(tolua_S,"player_type","fast",toluaI_get_player_player_type_fast,toluaI_set_player_player_type_fast);
+ tolua_tablevar(tolua_S,"player_type","lightspeed",toluaI_get_player_player_type_lightspeed,toluaI_set_player_player_type_lightspeed);
+ tolua_tablevar(tolua_S,"player_type","slow",toluaI_get_player_player_type_slow,toluaI_set_player_player_type_slow);
+ tolua_tablevar(tolua_S,"player_type","blind",toluaI_get_player_player_type_blind,toluaI_set_player_player_type_blind);
+ tolua_tablevar(tolua_S,"player_type","paralyzed",toluaI_get_player_player_type_paralyzed,toluaI_set_player_player_type_paralyzed);
+ tolua_tablevar(tolua_S,"player_type","confused",toluaI_get_player_player_type_confused,toluaI_set_player_player_type_confused);
+ tolua_tablevar(tolua_S,"player_type","afraid",toluaI_get_player_player_type_afraid,toluaI_set_player_player_type_afraid);
+ tolua_tablevar(tolua_S,"player_type","image",toluaI_get_player_player_type_image,toluaI_set_player_player_type_image);
+ tolua_tablevar(tolua_S,"player_type","poisoned",toluaI_get_player_player_type_poisoned,toluaI_set_player_player_type_poisoned);
+ tolua_tablevar(tolua_S,"player_type","cut",toluaI_get_player_player_type_cut,toluaI_set_player_player_type_cut);
+ tolua_tablevar(tolua_S,"player_type","stun",toluaI_get_player_player_type_stun,toluaI_set_player_player_type_stun);
+ tolua_tablevar(tolua_S,"player_type","protevil",toluaI_get_player_player_type_protevil,toluaI_set_player_player_type_protevil);
+ tolua_tablevar(tolua_S,"player_type","protgood",toluaI_get_player_player_type_protgood,toluaI_set_player_player_type_protgood);
+ tolua_tablevar(tolua_S,"player_type","protundead",toluaI_get_player_player_type_protundead,toluaI_set_player_player_type_protundead);
+ tolua_tablevar(tolua_S,"player_type","invuln",toluaI_get_player_player_type_invuln,toluaI_set_player_player_type_invuln);
+ tolua_tablevar(tolua_S,"player_type","hero",toluaI_get_player_player_type_hero,toluaI_set_player_player_type_hero);
+ tolua_tablevar(tolua_S,"player_type","shero",toluaI_get_player_player_type_shero,toluaI_set_player_player_type_shero);
+ tolua_tablevar(tolua_S,"player_type","shield",toluaI_get_player_player_type_shield,toluaI_set_player_player_type_shield);
+ tolua_tablevar(tolua_S,"player_type","shield_power",toluaI_get_player_player_type_shield_power,toluaI_set_player_player_type_shield_power);
+ tolua_tablevar(tolua_S,"player_type","shield_opt",toluaI_get_player_player_type_shield_opt,toluaI_set_player_player_type_shield_opt);
+ tolua_tablevar(tolua_S,"player_type","blessed",toluaI_get_player_player_type_blessed,toluaI_set_player_player_type_blessed);
+ tolua_tablevar(tolua_S,"player_type","tim_invis",toluaI_get_player_player_type_tim_invis,toluaI_set_player_player_type_tim_invis);
+ tolua_tablevar(tolua_S,"player_type","tim_infra",toluaI_get_player_player_type_tim_infra,toluaI_set_player_player_type_tim_infra);
+ tolua_tablevar(tolua_S,"player_type","oppose_acid",toluaI_get_player_player_type_oppose_acid,toluaI_set_player_player_type_oppose_acid);
+ tolua_tablevar(tolua_S,"player_type","oppose_elec",toluaI_get_player_player_type_oppose_elec,toluaI_set_player_player_type_oppose_elec);
+ tolua_tablevar(tolua_S,"player_type","oppose_fire",toluaI_get_player_player_type_oppose_fire,toluaI_set_player_player_type_oppose_fire);
+ tolua_tablevar(tolua_S,"player_type","oppose_cold",toluaI_get_player_player_type_oppose_cold,toluaI_set_player_player_type_oppose_cold);
+ tolua_tablevar(tolua_S,"player_type","oppose_pois",toluaI_get_player_player_type_oppose_pois,toluaI_set_player_player_type_oppose_pois);
+ tolua_tablevar(tolua_S,"player_type","oppose_ld",toluaI_get_player_player_type_oppose_ld,toluaI_set_player_player_type_oppose_ld);
+ tolua_tablevar(tolua_S,"player_type","oppose_cc",toluaI_get_player_player_type_oppose_cc,toluaI_set_player_player_type_oppose_cc);
+ tolua_tablevar(tolua_S,"player_type","oppose_ss",toluaI_get_player_player_type_oppose_ss,toluaI_set_player_player_type_oppose_ss);
+ tolua_tablevar(tolua_S,"player_type","oppose_nex",toluaI_get_player_player_type_oppose_nex,toluaI_set_player_player_type_oppose_nex);
+ tolua_tablevar(tolua_S,"player_type","tim_esp",toluaI_get_player_player_type_tim_esp,toluaI_set_player_player_type_tim_esp);
+ tolua_tablevar(tolua_S,"player_type","tim_wraith",toluaI_get_player_player_type_tim_wraith,toluaI_set_player_player_type_tim_wraith);
+ tolua_tablevar(tolua_S,"player_type","tim_ffall",toluaI_get_player_player_type_tim_ffall,toluaI_set_player_player_type_tim_ffall);
+ tolua_tablevar(tolua_S,"player_type","tim_fly",toluaI_get_player_player_type_tim_fly,toluaI_set_player_player_type_tim_fly);
+ tolua_tablevar(tolua_S,"player_type","tim_fire_aura",toluaI_get_player_player_type_tim_fire_aura,toluaI_set_player_player_type_tim_fire_aura);
+ tolua_tablevar(tolua_S,"player_type","tim_regen",toluaI_get_player_player_type_tim_regen,toluaI_set_player_player_type_tim_regen);
+ tolua_tablevar(tolua_S,"player_type","tim_regen_pow",toluaI_get_player_player_type_tim_regen_pow,toluaI_set_player_player_type_tim_regen_pow);
+ tolua_tablevar(tolua_S,"player_type","tim_poison",toluaI_get_player_player_type_tim_poison,toluaI_set_player_player_type_tim_poison);
+ tolua_tablevar(tolua_S,"player_type","tim_thunder",toluaI_get_player_player_type_tim_thunder,toluaI_set_player_player_type_tim_thunder);
+ tolua_tablevar(tolua_S,"player_type","tim_thunder_p1",toluaI_get_player_player_type_tim_thunder_p1,toluaI_set_player_player_type_tim_thunder_p1);
+ tolua_tablevar(tolua_S,"player_type","tim_thunder_p2",toluaI_get_player_player_type_tim_thunder_p2,toluaI_set_player_player_type_tim_thunder_p2);
+ tolua_tablevar(tolua_S,"player_type","resist_magic",toluaI_get_player_player_type_resist_magic,toluaI_set_player_player_type_resist_magic);
+ tolua_tablevar(tolua_S,"player_type","tim_invisible",toluaI_get_player_player_type_tim_invisible,toluaI_set_player_player_type_tim_invisible);
+ tolua_tablevar(tolua_S,"player_type","tim_inv_pow",toluaI_get_player_player_type_tim_inv_pow,toluaI_set_player_player_type_tim_inv_pow);
+ tolua_tablevar(tolua_S,"player_type","tim_mimic",toluaI_get_player_player_type_tim_mimic,toluaI_set_player_player_type_tim_mimic);
+ tolua_tablevar(tolua_S,"player_type","tim_lite",toluaI_get_player_player_type_tim_lite,toluaI_set_player_player_type_tim_lite);
+ tolua_tablevar(tolua_S,"player_type","holy",toluaI_get_player_player_type_holy,toluaI_set_player_player_type_holy);
+ tolua_tablevar(tolua_S,"player_type","walk_water",toluaI_get_player_player_type_walk_water,toluaI_set_player_player_type_walk_water);
+ tolua_tablevar(tolua_S,"player_type","tim_mental_barrier",toluaI_get_player_player_type_tim_mental_barrier,toluaI_set_player_player_type_tim_mental_barrier);
+ tolua_tablevar(tolua_S,"player_type","strike",toluaI_get_player_player_type_strike,toluaI_set_player_player_type_strike);
+ tolua_tablevar(tolua_S,"player_type","meditation",toluaI_get_player_player_type_meditation,toluaI_set_player_player_type_meditation);
+ tolua_tablevar(tolua_S,"player_type","tim_reflect",toluaI_get_player_player_type_tim_reflect,toluaI_set_player_player_type_tim_reflect);
+ tolua_tablevar(tolua_S,"player_type","tim_res_time",toluaI_get_player_player_type_tim_res_time,toluaI_set_player_player_type_tim_res_time);
+ tolua_tablevar(tolua_S,"player_type","tim_deadly",toluaI_get_player_player_type_tim_deadly,toluaI_set_player_player_type_tim_deadly);
+ tolua_tablevar(tolua_S,"player_type","prob_travel",toluaI_get_player_player_type_prob_travel,toluaI_set_player_player_type_prob_travel);
+ tolua_tablevar(tolua_S,"player_type","disrupt_shield",toluaI_get_player_player_type_disrupt_shield,toluaI_set_player_player_type_disrupt_shield);
+ tolua_tablevar(tolua_S,"player_type","parasite",toluaI_get_player_player_type_parasite,toluaI_set_player_player_type_parasite);
+ tolua_tablevar(tolua_S,"player_type","parasite_r_idx",toluaI_get_player_player_type_parasite_r_idx,toluaI_set_player_player_type_parasite_r_idx);
+ tolua_tablevar(tolua_S,"player_type","loan",toluaI_get_player_player_type_loan,toluaI_set_player_player_type_loan);
+ tolua_tablevar(tolua_S,"player_type","loan_time",toluaI_get_player_player_type_loan_time,toluaI_set_player_player_type_loan_time);
+ tolua_tablevar(tolua_S,"player_type","tim_magic_breath",toluaI_get_player_player_type_tim_magic_breath,toluaI_set_player_player_type_tim_magic_breath);
+ tolua_tablevar(tolua_S,"player_type","tim_water_breath",toluaI_get_player_player_type_tim_water_breath,toluaI_set_player_player_type_tim_water_breath);
+ tolua_tablevar(tolua_S,"player_type","immov_cntr",toluaI_get_player_player_type_immov_cntr,toluaI_set_player_player_type_immov_cntr);
+ tolua_tablevar(tolua_S,"player_type","music_extra",toluaI_get_player_player_type_music_extra,toluaI_set_player_player_type_music_extra);
+ tolua_tablevar(tolua_S,"player_type","music_extra2",toluaI_get_player_player_type_music_extra2,toluaI_set_player_player_type_music_extra2);
+ tolua_tablevar(tolua_S,"player_type","chaos_patron",toluaI_get_player_player_type_chaos_patron,toluaI_set_player_player_type_chaos_patron);
+ tolua_tablevar(tolua_S,"player_type","recall_dungeon",toluaI_get_player_player_type_recall_dungeon,toluaI_set_player_player_type_recall_dungeon);
+ tolua_tablevar(tolua_S,"player_type","word_recall",toluaI_get_player_player_type_word_recall,toluaI_set_player_player_type_word_recall);
+ tolua_tablevar(tolua_S,"player_type","energy",toluaI_get_player_player_type_energy,toluaI_set_player_player_type_energy);
+ tolua_tablevar(tolua_S,"player_type","food",toluaI_get_player_player_type_food,toluaI_set_player_player_type_food);
+ tolua_tablevar(tolua_S,"player_type","confusing",toluaI_get_player_player_type_confusing,toluaI_set_player_player_type_confusing);
+ tolua_tablevar(tolua_S,"player_type","searching",toluaI_get_player_player_type_searching,toluaI_set_player_player_type_searching);
+ tolua_tablevar(tolua_S,"player_type","new_spells",toluaI_get_player_player_type_new_spells,toluaI_set_player_player_type_new_spells);
+ tolua_tablevar(tolua_S,"player_type","old_spells",toluaI_get_player_player_type_old_spells,toluaI_set_player_player_type_old_spells);
+ tolua_tablevar(tolua_S,"player_type","xtra_spells",toluaI_get_player_player_type_xtra_spells,toluaI_set_player_player_type_xtra_spells);
+ tolua_tablevar(tolua_S,"player_type","cur_lite",toluaI_get_player_player_type_cur_lite,toluaI_set_player_player_type_cur_lite);
+ tolua_tablevar(tolua_S,"player_type","xtra_f1",toluaI_get_player_player_type_xtra_f1,toluaI_set_player_player_type_xtra_f1);
+ tolua_tablevar(tolua_S,"player_type","xtra_f2",toluaI_get_player_player_type_xtra_f2,toluaI_set_player_player_type_xtra_f2);
+ tolua_tablevar(tolua_S,"player_type","xtra_f3",toluaI_get_player_player_type_xtra_f3,toluaI_set_player_player_type_xtra_f3);
+ tolua_tablevar(tolua_S,"player_type","xtra_f4",toluaI_get_player_player_type_xtra_f4,toluaI_set_player_player_type_xtra_f4);
+ tolua_tablevar(tolua_S,"player_type","xtra_f5",toluaI_get_player_player_type_xtra_f5,toluaI_set_player_player_type_xtra_f5);
+ tolua_tablevar(tolua_S,"player_type","xtra_esp",toluaI_get_player_player_type_xtra_esp,toluaI_set_player_player_type_xtra_esp);
+ tolua_tablevar(tolua_S,"player_type","pspeed",toluaI_get_player_player_type_pspeed,toluaI_set_player_player_type_pspeed);
+ tolua_tablevar(tolua_S,"player_type","notice",toluaI_get_player_player_type_notice,toluaI_set_player_player_type_notice);
+ tolua_tablevar(tolua_S,"player_type","update",toluaI_get_player_player_type_update,toluaI_set_player_player_type_update);
+ tolua_tablevar(tolua_S,"player_type","redraw",toluaI_get_player_player_type_redraw,toluaI_set_player_player_type_redraw);
+ tolua_tablevar(tolua_S,"player_type","window",toluaI_get_player_player_type_window,toluaI_set_player_player_type_window);
+ tolua_tablearray(tolua_S,"player_type","stat_use",toluaI_get_player_player_type_stat_use,toluaI_set_player_player_type_stat_use);
+ tolua_tablearray(tolua_S,"player_type","stat_top",toluaI_get_player_player_type_stat_top,toluaI_set_player_player_type_stat_top);
+ tolua_tablearray(tolua_S,"player_type","stat_add",toluaI_get_player_player_type_stat_add,toluaI_set_player_player_type_stat_add);
+ tolua_tablearray(tolua_S,"player_type","stat_ind",toluaI_get_player_player_type_stat_ind,toluaI_set_player_player_type_stat_ind);
+ tolua_tablearray(tolua_S,"player_type","stat_cnt",toluaI_get_player_player_type_stat_cnt,toluaI_set_player_player_type_stat_cnt);
+ tolua_tablearray(tolua_S,"player_type","stat_los",toluaI_get_player_player_type_stat_los,toluaI_set_player_player_type_stat_los);
+ tolua_tablevar(tolua_S,"player_type","immune_acid",toluaI_get_player_player_type_immune_acid,toluaI_set_player_player_type_immune_acid);
+ tolua_tablevar(tolua_S,"player_type","immune_elec",toluaI_get_player_player_type_immune_elec,toluaI_set_player_player_type_immune_elec);
+ tolua_tablevar(tolua_S,"player_type","immune_fire",toluaI_get_player_player_type_immune_fire,toluaI_set_player_player_type_immune_fire);
+ tolua_tablevar(tolua_S,"player_type","immune_cold",toluaI_get_player_player_type_immune_cold,toluaI_set_player_player_type_immune_cold);
+ tolua_tablevar(tolua_S,"player_type","immune_neth",toluaI_get_player_player_type_immune_neth,toluaI_set_player_player_type_immune_neth);
+ tolua_tablevar(tolua_S,"player_type","resist_acid",toluaI_get_player_player_type_resist_acid,toluaI_set_player_player_type_resist_acid);
+ tolua_tablevar(tolua_S,"player_type","resist_elec",toluaI_get_player_player_type_resist_elec,toluaI_set_player_player_type_resist_elec);
+ tolua_tablevar(tolua_S,"player_type","resist_fire",toluaI_get_player_player_type_resist_fire,toluaI_set_player_player_type_resist_fire);
+ tolua_tablevar(tolua_S,"player_type","resist_cold",toluaI_get_player_player_type_resist_cold,toluaI_set_player_player_type_resist_cold);
+ tolua_tablevar(tolua_S,"player_type","resist_pois",toluaI_get_player_player_type_resist_pois,toluaI_set_player_player_type_resist_pois);
+ tolua_tablevar(tolua_S,"player_type","resist_conf",toluaI_get_player_player_type_resist_conf,toluaI_set_player_player_type_resist_conf);
+ tolua_tablevar(tolua_S,"player_type","resist_sound",toluaI_get_player_player_type_resist_sound,toluaI_set_player_player_type_resist_sound);
+ tolua_tablevar(tolua_S,"player_type","resist_lite",toluaI_get_player_player_type_resist_lite,toluaI_set_player_player_type_resist_lite);
+ tolua_tablevar(tolua_S,"player_type","resist_dark",toluaI_get_player_player_type_resist_dark,toluaI_set_player_player_type_resist_dark);
+ tolua_tablevar(tolua_S,"player_type","resist_chaos",toluaI_get_player_player_type_resist_chaos,toluaI_set_player_player_type_resist_chaos);
+ tolua_tablevar(tolua_S,"player_type","resist_disen",toluaI_get_player_player_type_resist_disen,toluaI_set_player_player_type_resist_disen);
+ tolua_tablevar(tolua_S,"player_type","resist_shard",toluaI_get_player_player_type_resist_shard,toluaI_set_player_player_type_resist_shard);
+ tolua_tablevar(tolua_S,"player_type","resist_nexus",toluaI_get_player_player_type_resist_nexus,toluaI_set_player_player_type_resist_nexus);
+ tolua_tablevar(tolua_S,"player_type","resist_blind",toluaI_get_player_player_type_resist_blind,toluaI_set_player_player_type_resist_blind);
+ tolua_tablevar(tolua_S,"player_type","resist_neth",toluaI_get_player_player_type_resist_neth,toluaI_set_player_player_type_resist_neth);
+ tolua_tablevar(tolua_S,"player_type","resist_fear",toluaI_get_player_player_type_resist_fear,toluaI_set_player_player_type_resist_fear);
+ tolua_tablevar(tolua_S,"player_type","resist_continuum",toluaI_get_player_player_type_resist_continuum,toluaI_set_player_player_type_resist_continuum);
+ tolua_tablevar(tolua_S,"player_type","sensible_fire",toluaI_get_player_player_type_sensible_fire,toluaI_set_player_player_type_sensible_fire);
+ tolua_tablevar(tolua_S,"player_type","sensible_lite",toluaI_get_player_player_type_sensible_lite,toluaI_set_player_player_type_sensible_lite);
+ tolua_tablevar(tolua_S,"player_type","reflect",toluaI_get_player_player_type_reflect,toluaI_set_player_player_type_reflect);
+ tolua_tablevar(tolua_S,"player_type","sh_fire",toluaI_get_player_player_type_sh_fire,toluaI_set_player_player_type_sh_fire);
+ tolua_tablevar(tolua_S,"player_type","sh_elec",toluaI_get_player_player_type_sh_elec,toluaI_set_player_player_type_sh_elec);
+ tolua_tablevar(tolua_S,"player_type","wraith_form",toluaI_get_player_player_type_wraith_form,toluaI_set_player_player_type_wraith_form);
+ tolua_tablevar(tolua_S,"player_type","anti_magic",toluaI_get_player_player_type_anti_magic,toluaI_set_player_player_type_anti_magic);
+ tolua_tablevar(tolua_S,"player_type","anti_tele",toluaI_get_player_player_type_anti_tele,toluaI_set_player_player_type_anti_tele);
+ tolua_tablevar(tolua_S,"player_type","sustain_str",toluaI_get_player_player_type_sustain_str,toluaI_set_player_player_type_sustain_str);
+ tolua_tablevar(tolua_S,"player_type","sustain_int",toluaI_get_player_player_type_sustain_int,toluaI_set_player_player_type_sustain_int);
+ tolua_tablevar(tolua_S,"player_type","sustain_wis",toluaI_get_player_player_type_sustain_wis,toluaI_set_player_player_type_sustain_wis);
+ tolua_tablevar(tolua_S,"player_type","sustain_dex",toluaI_get_player_player_type_sustain_dex,toluaI_set_player_player_type_sustain_dex);
+ tolua_tablevar(tolua_S,"player_type","sustain_con",toluaI_get_player_player_type_sustain_con,toluaI_set_player_player_type_sustain_con);
+ tolua_tablevar(tolua_S,"player_type","sustain_chr",toluaI_get_player_player_type_sustain_chr,toluaI_set_player_player_type_sustain_chr);
+ tolua_tablevar(tolua_S,"player_type","aggravate",toluaI_get_player_player_type_aggravate,toluaI_set_player_player_type_aggravate);
+ tolua_tablevar(tolua_S,"player_type","teleport",toluaI_get_player_player_type_teleport,toluaI_set_player_player_type_teleport);
+ tolua_tablevar(tolua_S,"player_type","exp_drain",toluaI_get_player_player_type_exp_drain,toluaI_set_player_player_type_exp_drain);
+ tolua_tablevar(tolua_S,"player_type","drain_mana",toluaI_get_player_player_type_drain_mana,toluaI_set_player_player_type_drain_mana);
+ tolua_tablevar(tolua_S,"player_type","drain_life",toluaI_get_player_player_type_drain_life,toluaI_set_player_player_type_drain_life);
+ tolua_tablevar(tolua_S,"player_type","magical_breath",toluaI_get_player_player_type_magical_breath,toluaI_set_player_player_type_magical_breath);
+ tolua_tablevar(tolua_S,"player_type","water_breath",toluaI_get_player_player_type_water_breath,toluaI_set_player_player_type_water_breath);
+ tolua_tablevar(tolua_S,"player_type","climb",toluaI_get_player_player_type_climb,toluaI_set_player_player_type_climb);
+ tolua_tablevar(tolua_S,"player_type","fly",toluaI_get_player_player_type_fly,toluaI_set_player_player_type_fly);
+ tolua_tablevar(tolua_S,"player_type","ffall",toluaI_get_player_player_type_ffall,toluaI_set_player_player_type_ffall);
+ tolua_tablevar(tolua_S,"player_type","lite",toluaI_get_player_player_type_lite,toluaI_set_player_player_type_lite);
+ tolua_tablevar(tolua_S,"player_type","free_act",toluaI_get_player_player_type_free_act,toluaI_set_player_player_type_free_act);
+ tolua_tablevar(tolua_S,"player_type","see_inv",toluaI_get_player_player_type_see_inv,toluaI_set_player_player_type_see_inv);
+ tolua_tablevar(tolua_S,"player_type","regenerate",toluaI_get_player_player_type_regenerate,toluaI_set_player_player_type_regenerate);
+ tolua_tablevar(tolua_S,"player_type","hold_life",toluaI_get_player_player_type_hold_life,toluaI_set_player_player_type_hold_life);
+ tolua_tablevar(tolua_S,"player_type","telepathy",toluaI_get_player_player_type_telepathy,toluaI_set_player_player_type_telepathy);
+ tolua_tablevar(tolua_S,"player_type","slow_digest",toluaI_get_player_player_type_slow_digest,toluaI_set_player_player_type_slow_digest);
+ tolua_tablevar(tolua_S,"player_type","bless_blade",toluaI_get_player_player_type_bless_blade,toluaI_set_player_player_type_bless_blade);
+ tolua_tablevar(tolua_S,"player_type","xtra_might",toluaI_get_player_player_type_xtra_might,toluaI_set_player_player_type_xtra_might);
+ tolua_tablevar(tolua_S,"player_type","impact",toluaI_get_player_player_type_impact,toluaI_set_player_player_type_impact);
+ tolua_tablevar(tolua_S,"player_type","auto_id",toluaI_get_player_player_type_auto_id,toluaI_set_player_player_type_auto_id);
+ tolua_tablevar(tolua_S,"player_type","dis_to_h",toluaI_get_player_player_type_dis_to_h,toluaI_set_player_player_type_dis_to_h);
+ tolua_tablevar(tolua_S,"player_type","dis_to_d",toluaI_get_player_player_type_dis_to_d,toluaI_set_player_player_type_dis_to_d);
+ tolua_tablevar(tolua_S,"player_type","dis_to_a",toluaI_get_player_player_type_dis_to_a,toluaI_set_player_player_type_dis_to_a);
+ tolua_tablevar(tolua_S,"player_type","dis_ac",toluaI_get_player_player_type_dis_ac,toluaI_set_player_player_type_dis_ac);
+ tolua_tablevar(tolua_S,"player_type","to_m",toluaI_get_player_player_type_to_m,toluaI_set_player_player_type_to_m);
+ tolua_tablevar(tolua_S,"player_type","to_s",toluaI_get_player_player_type_to_s,toluaI_set_player_player_type_to_s);
+ tolua_tablevar(tolua_S,"player_type","to_h",toluaI_get_player_player_type_to_h,toluaI_set_player_player_type_to_h);
+ tolua_tablevar(tolua_S,"player_type","to_d",toluaI_get_player_player_type_to_d,toluaI_set_player_player_type_to_d);
+ tolua_tablevar(tolua_S,"player_type","to_a",toluaI_get_player_player_type_to_a,toluaI_set_player_player_type_to_a);
+ tolua_tablevar(tolua_S,"player_type","to_h_melee",toluaI_get_player_player_type_to_h_melee,toluaI_set_player_player_type_to_h_melee);
+ tolua_tablevar(tolua_S,"player_type","to_d_melee",toluaI_get_player_player_type_to_d_melee,toluaI_set_player_player_type_to_d_melee);
+ tolua_tablevar(tolua_S,"player_type","to_h_ranged",toluaI_get_player_player_type_to_h_ranged,toluaI_set_player_player_type_to_h_ranged);
+ tolua_tablevar(tolua_S,"player_type","to_d_ranged",toluaI_get_player_player_type_to_d_ranged,toluaI_set_player_player_type_to_d_ranged);
+ tolua_tablevar(tolua_S,"player_type","num_blow",toluaI_get_player_player_type_num_blow,toluaI_set_player_player_type_num_blow);
+ tolua_tablevar(tolua_S,"player_type","num_fire",toluaI_get_player_player_type_num_fire,toluaI_set_player_player_type_num_fire);
+ tolua_tablevar(tolua_S,"player_type","ac",toluaI_get_player_player_type_ac,toluaI_set_player_player_type_ac);
+ tolua_tablevar(tolua_S,"player_type","antimagic",toluaI_get_player_player_type_antimagic,toluaI_set_player_player_type_antimagic);
+ tolua_tablevar(tolua_S,"player_type","antimagic_dis",toluaI_get_player_player_type_antimagic_dis,toluaI_set_player_player_type_antimagic_dis);
+ tolua_tablevar(tolua_S,"player_type","see_infra",toluaI_get_player_player_type_see_infra,toluaI_set_player_player_type_see_infra);
+ tolua_tablevar(tolua_S,"player_type","skill_dis",toluaI_get_player_player_type_skill_dis,toluaI_set_player_player_type_skill_dis);
+ tolua_tablevar(tolua_S,"player_type","skill_dev",toluaI_get_player_player_type_skill_dev,toluaI_set_player_player_type_skill_dev);
+ tolua_tablevar(tolua_S,"player_type","skill_sav",toluaI_get_player_player_type_skill_sav,toluaI_set_player_player_type_skill_sav);
+ tolua_tablevar(tolua_S,"player_type","skill_stl",toluaI_get_player_player_type_skill_stl,toluaI_set_player_player_type_skill_stl);
+ tolua_tablevar(tolua_S,"player_type","skill_srh",toluaI_get_player_player_type_skill_srh,toluaI_set_player_player_type_skill_srh);
+ tolua_tablevar(tolua_S,"player_type","skill_fos",toluaI_get_player_player_type_skill_fos,toluaI_set_player_player_type_skill_fos);
+ tolua_tablevar(tolua_S,"player_type","skill_thn",toluaI_get_player_player_type_skill_thn,toluaI_set_player_player_type_skill_thn);
+ tolua_tablevar(tolua_S,"player_type","skill_thb",toluaI_get_player_player_type_skill_thb,toluaI_set_player_player_type_skill_thb);
+ tolua_tablevar(tolua_S,"player_type","skill_tht",toluaI_get_player_player_type_skill_tht,toluaI_set_player_player_type_skill_tht);
+ tolua_tablevar(tolua_S,"player_type","skill_dig",toluaI_get_player_player_type_skill_dig,toluaI_set_player_player_type_skill_dig);
+ tolua_tablevar(tolua_S,"player_type","skill_points",toluaI_get_player_player_type_skill_points,toluaI_set_player_player_type_skill_points);
+ tolua_tablevar(tolua_S,"player_type","control",toluaI_get_player_player_type_control,toluaI_set_player_player_type_control);
+ tolua_tablevar(tolua_S,"player_type","control_dir",toluaI_get_player_player_type_control_dir,toluaI_set_player_player_type_control_dir);
+ tolua_tablevar(tolua_S,"player_type","companion_killed",toluaI_get_player_player_type_companion_killed,toluaI_set_player_player_type_companion_killed);
+ tolua_tablevar(tolua_S,"player_type","black_breath",toluaI_get_player_player_type_black_breath,toluaI_set_player_player_type_black_breath);
+ tolua_tablevar(tolua_S,"player_type","body_monster",toluaI_get_player_player_type_body_monster,toluaI_set_player_player_type_body_monster);
+ tolua_tablearray(tolua_S,"player_type","body_parts",toluaI_get_player_player_type_body_parts,toluaI_set_player_player_type_body_parts);
+ tolua_tablearray(tolua_S,"player_type","extra_body_parts",toluaI_get_player_player_type_extra_body_parts,toluaI_set_player_player_type_extra_body_parts);
+ tolua_tablearray(tolua_S,"player_type","powers_mod",toluaI_get_player_player_type_powers_mod,toluaI_set_player_player_type_powers_mod);
+ tolua_tablearray(tolua_S,"player_type","powers",toluaI_get_player_player_type_powers,toluaI_set_player_player_type_powers);
+ tolua_tablevar(tolua_S,"player_type","spellbinder_num",toluaI_get_player_player_type_spellbinder_num,toluaI_set_player_player_type_spellbinder_num);
+ tolua_tablearray(tolua_S,"player_type","spellbinder",toluaI_get_player_player_type_spellbinder,toluaI_set_player_player_type_spellbinder);
+ tolua_tablevar(tolua_S,"player_type","spellbinder_trigger",toluaI_get_player_player_type_spellbinder_trigger,toluaI_set_player_player_type_spellbinder_trigger);
+ tolua_tablearray(tolua_S,"player_type","corruptions_aux",toluaI_get_player_player_type_corruptions_aux,toluaI_set_player_player_type_corruptions_aux);
+ tolua_tablevar(tolua_S,"player_type","astral",toluaI_get_player_player_type_astral,toluaI_set_player_player_type_astral);
+ tolua_tablevar(tolua_S,"player_type","leaving",toluaI_get_player_player_type_leaving,toluaI_set_player_player_type_leaving);
+ tolua_constant(tolua_S,NULL,"SPELLBINDER_HP75",SPELLBINDER_HP75);
+ tolua_constant(tolua_S,NULL,"SPELLBINDER_HP50",SPELLBINDER_HP50);
+ tolua_constant(tolua_S,NULL,"SPELLBINDER_HP25",SPELLBINDER_HP25);
+ tolua_cclass(tolua_S,"player_race","");
+ tolua_tablevar(tolua_S,"player_race","title",toluaI_get_player_player_race_title,toluaI_set_player_player_race_title);
+ tolua_tablevar(tolua_S,"player_race","desc",toluaI_get_player_player_race_desc,toluaI_set_player_player_race_desc);
+ tolua_tablevar(tolua_S,"player_race","infra",toluaI_get_player_player_race_infra,toluaI_set_player_player_race_infra);
+ tolua_cclass(tolua_S,"player_race_mod","");
+ tolua_tablevar(tolua_S,"player_race_mod","title",toluaI_get_player_player_race_mod_title,toluaI_set_player_player_race_mod_title);
+ tolua_tablevar(tolua_S,"player_race_mod","desc",toluaI_get_player_player_race_mod_desc,toluaI_set_player_player_race_mod_desc);
+ tolua_tablevar(tolua_S,"player_race_mod","place",toluaI_get_player_player_race_mod_place,toluaI_set_player_player_race_mod_place);
+ tolua_tablearray(tolua_S,"player_race_mod","r_adj",toluaI_get_player_player_race_mod_r_adj,toluaI_set_player_player_race_mod_r_adj);
+ tolua_tablevar(tolua_S,"player_race_mod","luck",toluaI_get_player_player_race_mod_luck,toluaI_set_player_player_race_mod_luck);
+ tolua_tablevar(tolua_S,"player_race_mod","mana",toluaI_get_player_player_race_mod_mana,toluaI_set_player_player_race_mod_mana);
+ tolua_tablevar(tolua_S,"player_race_mod","r_dis",toluaI_get_player_player_race_mod_r_dis,toluaI_set_player_player_race_mod_r_dis);
+ tolua_tablevar(tolua_S,"player_race_mod","r_dev",toluaI_get_player_player_race_mod_r_dev,toluaI_set_player_player_race_mod_r_dev);
+ tolua_tablevar(tolua_S,"player_race_mod","r_sav",toluaI_get_player_player_race_mod_r_sav,toluaI_set_player_player_race_mod_r_sav);
+ tolua_tablevar(tolua_S,"player_race_mod","r_stl",toluaI_get_player_player_race_mod_r_stl,toluaI_set_player_player_race_mod_r_stl);
+ tolua_tablevar(tolua_S,"player_race_mod","r_srh",toluaI_get_player_player_race_mod_r_srh,toluaI_set_player_player_race_mod_r_srh);
+ tolua_tablevar(tolua_S,"player_race_mod","r_fos",toluaI_get_player_player_race_mod_r_fos,toluaI_set_player_player_race_mod_r_fos);
+ tolua_tablevar(tolua_S,"player_race_mod","r_thn",toluaI_get_player_player_race_mod_r_thn,toluaI_set_player_player_race_mod_r_thn);
+ tolua_tablevar(tolua_S,"player_race_mod","r_thb",toluaI_get_player_player_race_mod_r_thb,toluaI_set_player_player_race_mod_r_thb);
+ tolua_tablevar(tolua_S,"player_race_mod","r_mhp",toluaI_get_player_player_race_mod_r_mhp,toluaI_set_player_player_race_mod_r_mhp);
+ tolua_tablevar(tolua_S,"player_race_mod","r_exp",toluaI_get_player_player_race_mod_r_exp,toluaI_set_player_player_race_mod_r_exp);
+ tolua_tablevar(tolua_S,"player_race_mod","b_age",toluaI_get_player_player_race_mod_b_age,toluaI_set_player_player_race_mod_b_age);
+ tolua_tablevar(tolua_S,"player_race_mod","m_age",toluaI_get_player_player_race_mod_m_age,toluaI_set_player_player_race_mod_m_age);
+ tolua_tablevar(tolua_S,"player_race_mod","m_b_ht",toluaI_get_player_player_race_mod_m_b_ht,toluaI_set_player_player_race_mod_m_b_ht);
+ tolua_tablevar(tolua_S,"player_race_mod","m_m_ht",toluaI_get_player_player_race_mod_m_m_ht,toluaI_set_player_player_race_mod_m_m_ht);
+ tolua_tablevar(tolua_S,"player_race_mod","m_b_wt",toluaI_get_player_player_race_mod_m_b_wt,toluaI_set_player_player_race_mod_m_b_wt);
+ tolua_tablevar(tolua_S,"player_race_mod","m_m_wt",toluaI_get_player_player_race_mod_m_m_wt,toluaI_set_player_player_race_mod_m_m_wt);
+ tolua_tablevar(tolua_S,"player_race_mod","f_b_ht",toluaI_get_player_player_race_mod_f_b_ht,toluaI_set_player_player_race_mod_f_b_ht);
+ tolua_tablevar(tolua_S,"player_race_mod","f_m_ht",toluaI_get_player_player_race_mod_f_m_ht,toluaI_set_player_player_race_mod_f_m_ht);
+ tolua_tablevar(tolua_S,"player_race_mod","f_b_wt",toluaI_get_player_player_race_mod_f_b_wt,toluaI_set_player_player_race_mod_f_b_wt);
+ tolua_tablevar(tolua_S,"player_race_mod","f_m_wt",toluaI_get_player_player_race_mod_f_m_wt,toluaI_set_player_player_race_mod_f_m_wt);
+ tolua_tablevar(tolua_S,"player_race_mod","infra",toluaI_get_player_player_race_mod_infra,toluaI_set_player_player_race_mod_infra);
+ tolua_tablearray(tolua_S,"player_race_mod","choice",toluaI_get_player_player_race_mod_choice,toluaI_set_player_player_race_mod_choice);
+ tolua_tablearray(tolua_S,"player_race_mod","pclass",toluaI_get_player_player_race_mod_pclass,toluaI_set_player_player_race_mod_pclass);
+ tolua_tablearray(tolua_S,"player_race_mod","mclass",toluaI_get_player_player_race_mod_mclass,toluaI_set_player_player_race_mod_mclass);
+ tolua_tablearray(tolua_S,"player_race_mod","powers",toluaI_get_player_player_race_mod_powers,toluaI_set_player_player_race_mod_powers);
+ tolua_tablearray(tolua_S,"player_race_mod","body_parts",toluaI_get_player_player_race_mod_body_parts,toluaI_set_player_player_race_mod_body_parts);
+ tolua_tablevar(tolua_S,"player_race_mod","flags1",toluaI_get_player_player_race_mod_flags1,toluaI_set_player_player_race_mod_flags1);
+ tolua_tablevar(tolua_S,"player_race_mod","flags2",toluaI_get_player_player_race_mod_flags2,toluaI_set_player_player_race_mod_flags2);
+ tolua_tablearray(tolua_S,"player_race_mod","oflags1",toluaI_get_player_player_race_mod_oflags1,toluaI_set_player_player_race_mod_oflags1);
+ tolua_tablearray(tolua_S,"player_race_mod","oflags2",toluaI_get_player_player_race_mod_oflags2,toluaI_set_player_player_race_mod_oflags2);
+ tolua_tablearray(tolua_S,"player_race_mod","oflags3",toluaI_get_player_player_race_mod_oflags3,toluaI_set_player_player_race_mod_oflags3);
+ tolua_tablearray(tolua_S,"player_race_mod","oflags4",toluaI_get_player_player_race_mod_oflags4,toluaI_set_player_player_race_mod_oflags4);
+ tolua_tablearray(tolua_S,"player_race_mod","oflags5",toluaI_get_player_player_race_mod_oflags5,toluaI_set_player_player_race_mod_oflags5);
+ tolua_tablearray(tolua_S,"player_race_mod","oesp",toluaI_get_player_player_race_mod_oesp,toluaI_set_player_player_race_mod_oesp);
+ tolua_tablearray(tolua_S,"player_race_mod","opval",toluaI_get_player_player_race_mod_opval,toluaI_set_player_player_race_mod_opval);
+ tolua_tablevar(tolua_S,"player_race_mod","g_attr",toluaI_get_player_player_race_mod_g_attr,toluaI_set_player_player_race_mod_g_attr);
+ tolua_tablevar(tolua_S,"player_race_mod","g_char",toluaI_get_player_player_race_mod_g_char,toluaI_set_player_player_race_mod_g_char);
+ tolua_tablearray(tolua_S,"player_race_mod","skill_basem",toluaI_get_player_player_race_mod_skill_basem,toluaI_set_player_player_race_mod_skill_basem);
+ tolua_tablearray(tolua_S,"player_race_mod","skill_base",toluaI_get_player_player_race_mod_skill_base,toluaI_set_player_player_race_mod_skill_base);
+ tolua_tablearray(tolua_S,"player_race_mod","skill_modm",toluaI_get_player_player_race_mod_skill_modm,toluaI_set_player_player_race_mod_skill_modm);
+ tolua_tablearray(tolua_S,"player_race_mod","skill_mod",toluaI_get_player_player_race_mod_skill_mod,toluaI_set_player_player_race_mod_skill_mod);
+ tolua_globalvar(tolua_S,"energy_use",toluaI_get_player_energy_use,toluaI_set_player_energy_use);
+ tolua_globalvar(tolua_S,"player",toluaI_get_player_player,toluaI_set_player_player);
+ tolua_globalvar(tolua_S,"max_rp_idx",toluaI_get_player_max_rp_idx,toluaI_set_player_max_rp_idx);
+ tolua_globalarray(tolua_S,"race_info",toluaI_get_player_race_info,toluaI_set_player_race_info);
+ tolua_globalvar(tolua_S,"rp_name",toluaI_get_player_rp_name,toluaI_set_player_rp_name);
+ tolua_globalvar(tolua_S,"rp_text",toluaI_get_player_rp_text,toluaI_set_player_rp_text);
+ tolua_globalvar(tolua_S,"max_rmp_idx",toluaI_get_player_max_rmp_idx,toluaI_set_player_max_rmp_idx);
+ tolua_globalarray(tolua_S,"race_mod_info",toluaI_get_player_race_mod_info,toluaI_set_player_race_mod_info);
+ tolua_globalvar(tolua_S,"rmp_name",toluaI_get_player_rmp_name,toluaI_set_player_rmp_name);
+ tolua_globalvar(tolua_S,"rmp_text",toluaI_get_player_rmp_text,toluaI_set_player_rmp_text);
+ tolua_globalarray(tolua_S,"class_info",toluaI_get_player_class_info,toluaI_set_player_class_info);
+ tolua_globalvar(tolua_S,"c_name",toluaI_get_player_c_name,toluaI_set_player_c_name);
+ tolua_globalvar(tolua_S,"c_text",toluaI_get_player_c_text,toluaI_set_player_c_text);
+ tolua_globalvar(tolua_S,"flush_failure",toluaI_get_player_flush_failure,toluaI_set_player_flush_failure);
+ tolua_function(tolua_S,NULL,"set_roots",toluaI_player_set_roots00);
+ tolua_function(tolua_S,NULL,"set_shadow",toluaI_player_set_shadow00);
+ tolua_function(tolua_S,NULL,"set_parasite",toluaI_player_set_parasite00);
+ tolua_function(tolua_S,NULL,"set_disrupt_shield",toluaI_player_set_disrupt_shield00);
+ tolua_function(tolua_S,NULL,"set_prob_travel",toluaI_player_set_prob_travel00);
+ tolua_function(tolua_S,NULL,"set_project",toluaI_player_set_project00);
+ tolua_function(tolua_S,NULL,"set_tim_deadly",toluaI_player_set_tim_deadly00);
+ tolua_function(tolua_S,NULL,"set_tim_res_time",toluaI_player_set_tim_res_time00);
+ tolua_function(tolua_S,NULL,"set_tim_reflect",toluaI_player_set_tim_reflect00);
+ tolua_function(tolua_S,NULL,"set_meditation",toluaI_player_set_meditation00);
+ tolua_function(tolua_S,NULL,"set_strike",toluaI_player_set_strike00);
+ tolua_function(tolua_S,NULL,"set_walk_water",toluaI_player_set_walk_water00);
+ tolua_function(tolua_S,NULL,"set_tim_ffall",toluaI_player_set_tim_ffall00);
+ tolua_function(tolua_S,NULL,"set_tim_fire_aura",toluaI_player_set_tim_fire_aura00);
+ tolua_function(tolua_S,NULL,"set_tim_regen",toluaI_player_set_tim_regen00);
+ tolua_function(tolua_S,NULL,"set_holy",toluaI_player_set_holy00);
+ tolua_function(tolua_S,NULL,"set_grace",toluaI_player_set_grace00);
+ tolua_function(tolua_S,NULL,"set_mimic",toluaI_player_set_mimic00);
+ tolua_function(tolua_S,NULL,"set_no_breeders",toluaI_player_set_no_breeders00);
+ tolua_function(tolua_S,NULL,"set_tim_esp",toluaI_player_set_tim_esp00);
+ tolua_function(tolua_S,NULL,"set_invis",toluaI_player_set_invis00);
+ tolua_function(tolua_S,NULL,"set_lite",toluaI_player_set_lite00);
+ tolua_function(tolua_S,NULL,"set_blind",toluaI_player_set_blind00);
+ tolua_function(tolua_S,NULL,"set_confused",toluaI_player_set_confused00);
+ tolua_function(tolua_S,NULL,"set_poisoned",toluaI_player_set_poisoned00);
+ tolua_function(tolua_S,NULL,"set_afraid",toluaI_player_set_afraid00);
+ tolua_function(tolua_S,NULL,"set_paralyzed",toluaI_player_set_paralyzed00);
+ tolua_function(tolua_S,NULL,"set_image",toluaI_player_set_image00);
+ tolua_function(tolua_S,NULL,"set_fast",toluaI_player_set_fast00);
+ tolua_function(tolua_S,NULL,"set_light_speed",toluaI_player_set_light_speed00);
+ tolua_function(tolua_S,NULL,"set_slow",toluaI_player_set_slow00);
+ tolua_function(tolua_S,NULL,"set_shield",toluaI_player_set_shield00);
+ tolua_function(tolua_S,NULL,"apply_flags",toluaI_player_apply_flags00);
+ tolua_constant(tolua_S,NULL,"SHIELD_NONE",SHIELD_NONE);
+ tolua_constant(tolua_S,NULL,"SHIELD_COUNTER",SHIELD_COUNTER);
+ tolua_constant(tolua_S,NULL,"SHIELD_FIRE",SHIELD_FIRE);
+ tolua_constant(tolua_S,NULL,"SHIELD_GREAT_FIRE",SHIELD_GREAT_FIRE);
+ tolua_constant(tolua_S,NULL,"SHIELD_FEAR",SHIELD_FEAR);
+ tolua_function(tolua_S,NULL,"set_tim_thunder",toluaI_player_set_tim_thunder00);
+ tolua_function(tolua_S,NULL,"set_tim_breath",toluaI_player_set_tim_breath00);
+ tolua_function(tolua_S,NULL,"set_tim_fly",toluaI_player_set_tim_fly00);
+ tolua_function(tolua_S,NULL,"set_blessed",toluaI_player_set_blessed00);
+ tolua_function(tolua_S,NULL,"set_hero",toluaI_player_set_hero00);
+ tolua_function(tolua_S,NULL,"set_shero",toluaI_player_set_shero00);
+ tolua_function(tolua_S,NULL,"set_protevil",toluaI_player_set_protevil00);
+ tolua_function(tolua_S,NULL,"set_protgood",toluaI_player_set_protgood00);
+ tolua_function(tolua_S,NULL,"set_protundead",toluaI_player_set_protundead00);
+ tolua_function(tolua_S,NULL,"set_invuln",toluaI_player_set_invuln00);
+ tolua_function(tolua_S,NULL,"set_tim_invis",toluaI_player_set_tim_invis00);
+ tolua_function(tolua_S,NULL,"set_tim_infra",toluaI_player_set_tim_infra00);
+ tolua_function(tolua_S,NULL,"set_mental_barrier",toluaI_player_set_mental_barrier00);
+ tolua_function(tolua_S,NULL,"set_poison",toluaI_player_set_poison00);
+ tolua_function(tolua_S,NULL,"set_oppose_acid",toluaI_player_set_oppose_acid00);
+ tolua_function(tolua_S,NULL,"set_oppose_elec",toluaI_player_set_oppose_elec00);
+ tolua_function(tolua_S,NULL,"set_oppose_fire",toluaI_player_set_oppose_fire00);
+ tolua_function(tolua_S,NULL,"set_oppose_cold",toluaI_player_set_oppose_cold00);
+ tolua_function(tolua_S,NULL,"set_oppose_pois",toluaI_player_set_oppose_pois00);
+ tolua_function(tolua_S,NULL,"set_oppose_ld",toluaI_player_set_oppose_ld00);
+ tolua_function(tolua_S,NULL,"set_oppose_cc",toluaI_player_set_oppose_cc00);
+ tolua_function(tolua_S,NULL,"set_oppose_ss",toluaI_player_set_oppose_ss00);
+ tolua_function(tolua_S,NULL,"set_oppose_nex",toluaI_player_set_oppose_nex00);
+ tolua_function(tolua_S,NULL,"set_stun",toluaI_player_set_stun00);
+ tolua_function(tolua_S,NULL,"set_cut",toluaI_player_set_cut00);
+ tolua_function(tolua_S,NULL,"set_food",toluaI_player_set_food00);
+ tolua_constant(tolua_S,NULL,"PY_FOOD_MAX",PY_FOOD_MAX);
+ tolua_constant(tolua_S,NULL,"PY_FOOD_FULL",PY_FOOD_FULL);
+ tolua_constant(tolua_S,NULL,"PY_FOOD_ALERT",PY_FOOD_ALERT);
+ tolua_constant(tolua_S,NULL,"PY_FOOD_WEAK",PY_FOOD_WEAK);
+ tolua_constant(tolua_S,NULL,"PY_FOOD_FAINT",PY_FOOD_FAINT);
+ tolua_constant(tolua_S,NULL,"PY_FOOD_STARVE",PY_FOOD_STARVE);
+ tolua_function(tolua_S,NULL,"check_experience",toluaI_player_check_experience00);
+ tolua_function(tolua_S,NULL,"check_experience_obj",toluaI_player_check_experience_obj00);
+ tolua_function(tolua_S,NULL,"gain_exp",toluaI_player_gain_exp00);
+ tolua_function(tolua_S,NULL,"lose_exp",toluaI_player_lose_exp00);
+ tolua_function(tolua_S,NULL,"no_lite",toluaI_player_no_lite00);
+ tolua_globalvar(tolua_S,"dun_level",toluaI_get_player_dun_level,toluaI_set_player_dun_level);
+ tolua_constant(tolua_S,NULL,"GOD_ALL",GOD_ALL);
+ tolua_constant(tolua_S,NULL,"GOD_NONE",GOD_NONE);
+ tolua_constant(tolua_S,NULL,"GOD_ERU",GOD_ERU);
+ tolua_constant(tolua_S,NULL,"GOD_MANWE",GOD_MANWE);
+ tolua_constant(tolua_S,NULL,"GOD_TULKAS",GOD_TULKAS);
+ tolua_constant(tolua_S,NULL,"GOD_MELKOR",GOD_MELKOR);
+ tolua_constant(tolua_S,NULL,"GOD_YAVANNA",GOD_YAVANNA);
+ tolua_function(tolua_S,NULL,"inc_piety",toluaI_player_inc_piety00);
+ tolua_function(tolua_S,NULL,"abandon_god",toluaI_player_abandon_god00);
+ tolua_function(tolua_S,NULL,"wisdom_scale",toluaI_player_wisdom_scale00);
+ tolua_function(tolua_S,NULL,"follow_god",toluaI_player_follow_god00);
+ tolua_function(tolua_S,NULL,"add_new_gods",toluaI_player_add_new_gods00);
+ tolua_function(tolua_S,NULL,"desc_god",toluaI_player_desc_god00);
+ tolua_constant(tolua_S,NULL,"PWR_SPIT_ACID",PWR_SPIT_ACID);
+ tolua_constant(tolua_S,NULL,"PWR_BR_FIRE",PWR_BR_FIRE);
+ tolua_constant(tolua_S,NULL,"PWR_HYPN_GAZE",PWR_HYPN_GAZE);
+ tolua_constant(tolua_S,NULL,"PWR_TELEKINES",PWR_TELEKINES);
+ tolua_constant(tolua_S,NULL,"PWR_VTELEPORT",PWR_VTELEPORT);
+ tolua_constant(tolua_S,NULL,"PWR_MIND_BLST",PWR_MIND_BLST);
+ tolua_constant(tolua_S,NULL,"PWR_RADIATION",PWR_RADIATION);
+ tolua_constant(tolua_S,NULL,"PWR_VAMPIRISM",PWR_VAMPIRISM);
+ tolua_constant(tolua_S,NULL,"PWR_SMELL_MET",PWR_SMELL_MET);
+ tolua_constant(tolua_S,NULL,"PWR_SMELL_MON",PWR_SMELL_MON);
+ tolua_constant(tolua_S,NULL,"PWR_BLINK",PWR_BLINK);
+ tolua_constant(tolua_S,NULL,"PWR_EAT_ROCK",PWR_EAT_ROCK);
+ tolua_constant(tolua_S,NULL,"PWR_SWAP_POS",PWR_SWAP_POS);
+ tolua_constant(tolua_S,NULL,"PWR_SHRIEK",PWR_SHRIEK);
+ tolua_constant(tolua_S,NULL,"PWR_ILLUMINE",PWR_ILLUMINE);
+ tolua_constant(tolua_S,NULL,"PWR_DET_CURSE",PWR_DET_CURSE);
+ tolua_constant(tolua_S,NULL,"PWR_BERSERK",PWR_BERSERK);
+ tolua_constant(tolua_S,NULL,"PWR_POLYMORPH",PWR_POLYMORPH);
+ tolua_constant(tolua_S,NULL,"PWR_MIDAS_TCH",PWR_MIDAS_TCH);
+ tolua_constant(tolua_S,NULL,"PWR_GROW_MOLD",PWR_GROW_MOLD);
+ tolua_constant(tolua_S,NULL,"PWR_RESIST",PWR_RESIST);
+ tolua_constant(tolua_S,NULL,"PWR_EARTHQUAKE",PWR_EARTHQUAKE);
+ tolua_constant(tolua_S,NULL,"PWR_EAT_MAGIC",PWR_EAT_MAGIC);
+ tolua_constant(tolua_S,NULL,"PWR_WEIGH_MAG",PWR_WEIGH_MAG);
+ tolua_constant(tolua_S,NULL,"PWR_STERILITY",PWR_STERILITY);
+ tolua_constant(tolua_S,NULL,"PWR_PANIC_HIT",PWR_PANIC_HIT);
+ tolua_constant(tolua_S,NULL,"PWR_DAZZLE",PWR_DAZZLE);
+ tolua_constant(tolua_S,NULL,"PWR_DARKRAY",PWR_DARKRAY);
+ tolua_constant(tolua_S,NULL,"PWR_RECALL",PWR_RECALL);
+ tolua_constant(tolua_S,NULL,"PWR_BANISH",PWR_BANISH);
+ tolua_constant(tolua_S,NULL,"PWR_COLD_TOUCH",PWR_COLD_TOUCH);
+ tolua_constant(tolua_S,NULL,"PWR_LAUNCHER",PWR_LAUNCHER);
+ tolua_constant(tolua_S,NULL,"PWR_PASSWALL",PWR_PASSWALL);
+ tolua_constant(tolua_S,NULL,"PWR_DETECT_TD",PWR_DETECT_TD);
+ tolua_constant(tolua_S,NULL,"PWR_COOK_FOOD",PWR_COOK_FOOD);
+ tolua_constant(tolua_S,NULL,"PWR_UNFEAR",PWR_UNFEAR);
+ tolua_constant(tolua_S,NULL,"PWR_EXPL_RUNE",PWR_EXPL_RUNE);
+ tolua_constant(tolua_S,NULL,"PWR_STM",PWR_STM);
+ tolua_constant(tolua_S,NULL,"PWR_POIS_DART",PWR_POIS_DART);
+ tolua_constant(tolua_S,NULL,"PWR_MAGIC_MISSILE",PWR_MAGIC_MISSILE);
+ tolua_constant(tolua_S,NULL,"PWR_GROW_TREE",PWR_GROW_TREE);
+ tolua_constant(tolua_S,NULL,"PWR_BR_COLD",PWR_BR_COLD);
+ tolua_constant(tolua_S,NULL,"PWR_BR_CHAOS",PWR_BR_CHAOS);
+ tolua_constant(tolua_S,NULL,"PWR_BR_ELEM",PWR_BR_ELEM);
+ tolua_constant(tolua_S,NULL,"PWR_WRECK_WORLD",PWR_WRECK_WORLD);
+ tolua_constant(tolua_S,NULL,"PWR_SCARE",PWR_SCARE);
+ tolua_constant(tolua_S,NULL,"PWR_REST_LIFE",PWR_REST_LIFE);
+ tolua_constant(tolua_S,NULL,"PWR_SUMMON_MONSTER",PWR_SUMMON_MONSTER);
+ tolua_constant(tolua_S,NULL,"PWR_NECRO",PWR_NECRO);
+ tolua_constant(tolua_S,NULL,"PWR_ROHAN",PWR_ROHAN);
+ tolua_constant(tolua_S,NULL,"PWR_THUNDER",PWR_THUNDER);
+ tolua_constant(tolua_S,NULL,"PWR_DEATHMOLD",PWR_DEATHMOLD);
+ tolua_constant(tolua_S,NULL,"PWR_HYPNO",PWR_HYPNO);
+ tolua_constant(tolua_S,NULL,"PWR_UNHYPNO",PWR_UNHYPNO);
+ tolua_constant(tolua_S,NULL,"PWR_INCARNATE",PWR_INCARNATE);
+ tolua_constant(tolua_S,NULL,"PWR_MAGIC_MAP",PWR_MAGIC_MAP);
+ tolua_constant(tolua_S,NULL,"PWR_LAY_TRAP",PWR_LAY_TRAP);
+ tolua_constant(tolua_S,NULL,"PWR_MERCHANT",PWR_MERCHANT);
+ tolua_constant(tolua_S,NULL,"PWR_COMPANION",PWR_COMPANION);
+ tolua_constant(tolua_S,NULL,"PWR_BEAR",PWR_BEAR);
+ tolua_constant(tolua_S,NULL,"PWR_DODGE",PWR_DODGE);
+ tolua_constant(tolua_S,NULL,"PWR_BALROG",PWR_BALROG);
+ tolua_function(tolua_S,NULL,"do_cmd_throw",toluaI_player_do_cmd_throw00);
+ tolua_function(tolua_S,NULL,"change_wild_mode",toluaI_player_change_wild_mode00);
+ tolua_function(tolua_S,NULL,"switch_class",toluaI_player_switch_class00);
+ tolua_function(tolua_S,NULL,"switch_subclass",toluaI_player_switch_subclass00);
+ tolua_function(tolua_S,NULL,"switch_subrace",toluaI_player_switch_subrace00);
+ tolua_function(tolua_S,NULL,"get_subrace_title",toluaI_player_get_subrace_title00);
+ tolua_function(tolua_S,NULL,"set_subrace_title",toluaI_player_set_subrace_title00);
+ tolua_function(tolua_S,NULL,"do_rebirth",toluaI_player_do_rebirth00);
+ tolua_function(tolua_S,NULL,"test_race_flags",toluaI_player_test_race_flags00);
+ tolua_constant(tolua_S,NULL,"WINNER_NORMAL",WINNER_NORMAL);
+ tolua_constant(tolua_S,NULL,"WINNER_ULTRA",WINNER_ULTRA);
+ tolua_globalvar(tolua_S,"wizard",toluaI_get_player_wizard,toluaI_set_player_wizard);
+ tolua_globalvar(tolua_S,"total_winner",toluaI_get_player_total_winner,toluaI_set_player_total_winner);
+ tolua_globalvar(tolua_S,"has_won",toluaI_get_player_has_won,toluaI_set_player_has_won);
+ tolua_globalvar(tolua_S,"joke_monsters",toluaI_get_player_joke_monsters,toluaI_set_player_joke_monsters);
+ tolua_globalarray(tolua_S,"max_dlv",toluaI_get_player_max_dlv,toluaI_set_player_max_dlv);
+ return 1;
+}
+/* Close function */
+void tolua_player_close (lua_State* tolua_S)
+{
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PY_MAX_LEVEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"player_exp");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"A_STR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"A_INT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"A_WIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"A_DEX");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"A_CON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"A_CHR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SUBRACE_SAVE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SEX_FEMALE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SEX_MALE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SEX_NEUTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MAX_SEXES");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_EXPERIMENTAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_RESIST_BLACK_BREATH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_NO_STUN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_XTRA_MIGHT_BOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_XTRA_MIGHT_XBOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_XTRA_MIGHT_SLING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_AC_LEVEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_HURT_LITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_VAMPIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_UNDEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_NO_CUT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_CORRUPT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_NO_FOOD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_NO_GOD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_ELF");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_SEMI_WRAITH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_NO_SUBRACE_CHANGE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_ANTIMAGIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_MOLD_FRIEND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_GOD_FRIEND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_INNATE_SPELLS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR1_EASE_STEAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR2_ASTRAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PN_COMBINE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PN_REORDER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PU_BONUS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PU_TORCH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PU_BODY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PU_SANITY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PU_HP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PU_MANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PU_SPELLS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PU_POWERS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PU_UN_VIEW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PU_VIEW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PU_MON_LITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PU_MONSTERS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PU_DISTANCE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PU_FLOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_MISC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_TITLE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_LEV");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_EXP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_STATS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_ARMOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_HP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_MANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_GOLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_DEPTH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_HEALTH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_CUT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_STUN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_HUNGER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_PIETY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_BLIND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_CONFUSED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_AFRAID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_POISONED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_STATE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_SPEED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_STUDY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_SANITY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_EXTRA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_BASIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_MAP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_WIPE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_MH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_MH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PR_DTRAP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PW_INVEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PW_EQUIP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PW_PLAYER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PW_M_LIST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PW_MESSAGE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PW_OVERHEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PW_MONSTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PW_OBJECT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PW_SNAPSHOT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PW_BORG_1");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PW_BORG_2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"deity_type");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"deity_info");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"BODY_WEAPON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"BODY_TORSO");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"BODY_ARMS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"BODY_FINGER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"BODY_HEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"BODY_LEGS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"BODY_MAX");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"player_type");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SPELLBINDER_HP75");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SPELLBINDER_HP50");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SPELLBINDER_HP25");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"player_race");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"player_race_mod");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"energy_use"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"player"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"max_rp_idx"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"race_info");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"rp_name"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"rp_text"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"max_rmp_idx"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"race_mod_info");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"rmp_name"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"rmp_text"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"class_info");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"c_name"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"c_text"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"flush_failure"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_roots");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_shadow");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_parasite");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_disrupt_shield");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_prob_travel");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_project");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_tim_deadly");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_tim_res_time");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_tim_reflect");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_meditation");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_strike");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_walk_water");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_tim_ffall");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_tim_fire_aura");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_tim_regen");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_holy");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_grace");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_mimic");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_no_breeders");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_tim_esp");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_invis");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_lite");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_blind");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_confused");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_poisoned");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_afraid");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_paralyzed");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_image");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_fast");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_light_speed");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_slow");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_shield");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"apply_flags");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SHIELD_NONE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SHIELD_COUNTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SHIELD_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SHIELD_GREAT_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"SHIELD_FEAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_tim_thunder");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_tim_breath");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_tim_fly");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_blessed");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_hero");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_shero");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_protevil");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_protgood");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_protundead");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_invuln");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_tim_invis");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_tim_infra");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_mental_barrier");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_poison");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_oppose_acid");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_oppose_elec");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_oppose_fire");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_oppose_cold");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_oppose_pois");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_oppose_ld");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_oppose_cc");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_oppose_ss");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_oppose_nex");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_stun");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_cut");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_food");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PY_FOOD_MAX");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PY_FOOD_FULL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PY_FOOD_ALERT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PY_FOOD_WEAK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PY_FOOD_FAINT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PY_FOOD_STARVE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"check_experience");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"check_experience_obj");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"gain_exp");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"lose_exp");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"no_lite");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"dun_level"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GOD_ALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GOD_NONE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GOD_ERU");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GOD_MANWE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GOD_TULKAS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GOD_MELKOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GOD_YAVANNA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"inc_piety");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"abandon_god");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"wisdom_scale");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"follow_god");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"add_new_gods");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"desc_god");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_SPIT_ACID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_BR_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_HYPN_GAZE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_TELEKINES");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_VTELEPORT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_MIND_BLST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_RADIATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_VAMPIRISM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_SMELL_MET");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_SMELL_MON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_BLINK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_EAT_ROCK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_SWAP_POS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_SHRIEK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_ILLUMINE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_DET_CURSE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_BERSERK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_POLYMORPH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_MIDAS_TCH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_GROW_MOLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_RESIST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_EARTHQUAKE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_EAT_MAGIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_WEIGH_MAG");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_STERILITY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_PANIC_HIT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_DAZZLE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_DARKRAY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_RECALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_BANISH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_COLD_TOUCH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_LAUNCHER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_PASSWALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_DETECT_TD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_COOK_FOOD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_UNFEAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_EXPL_RUNE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_STM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_POIS_DART");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_MAGIC_MISSILE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_GROW_TREE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_BR_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_BR_CHAOS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_BR_ELEM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_WRECK_WORLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_SCARE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_REST_LIFE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_SUMMON_MONSTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_NECRO");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_ROHAN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_THUNDER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_DEATHMOLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_HYPNO");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_UNHYPNO");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_INCARNATE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_MAGIC_MAP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_LAY_TRAP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_MERCHANT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_COMPANION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_BEAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_DODGE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PWR_BALROG");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"do_cmd_throw");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"change_wild_mode");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"switch_class");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"switch_subclass");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"switch_subrace");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_subrace_title");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_subrace_title");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"do_rebirth");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"test_race_flags");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"WINNER_NORMAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"WINNER_ULTRA");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"wizard"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"total_winner"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"has_won"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"joke_monsters"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"max_dlv");
+}
diff -Nru --strip-trailing-cr tome-2.5.3/src/w_quest.c tome-2.5.3-lua.files/src/w_quest.c
--- tome-2.5.3/src/w_quest.c	1969-12-31 16:00:00.000000000 -0800
+++ tome-2.5.3-lua.files/src/w_quest.c	2010-09-26 07:37:16.000000000 -0700
@@ -0,0 +1,305 @@
+/*
+** Lua binding: quest
+** Generated automatically by tolua 4.0a - angband on Sun Sep 26 07:37:16 2010.
+*/
+
+#include "lua/tolua.h"
+
+/* Exported function */
+int tolua_quest_open (lua_State* tolua_S);
+void tolua_quest_close (lua_State* tolua_S);
+
+#include "angband.h"
+static quest_type *lua_get_quest(int q_idx){return &quest[q_idx];}
+
+/* function to register type */
+static void toluaI_reg_types (lua_State* tolua_S)
+{
+ tolua_usertype(tolua_S,"quest_type");
+}
+
+/* error messages */
+#define TOLUA_ERR_SELF tolua_error(tolua_S,"invalid 'self'")
+#define TOLUA_ERR_ASSIGN tolua_error(tolua_S,"#vinvalid type in variable assignment.")
+
+/* get function: silent of class  quest_type */
+static int toluaI_get_quest_quest_type_silent(lua_State* tolua_S)
+{
+  quest_type* self = (quest_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->silent);
+ return 1;
+}
+
+/* set function: silent of class  quest_type */
+static int toluaI_set_quest_quest_type_silent(lua_State* tolua_S)
+{
+  quest_type* self = (quest_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->silent = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: dynamic_desc of class  quest_type */
+static int toluaI_get_quest_quest_type_dynamic_desc(lua_State* tolua_S)
+{
+  quest_type* self = (quest_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->dynamic_desc);
+ return 1;
+}
+
+/* set function: dynamic_desc of class  quest_type */
+static int toluaI_set_quest_quest_type_dynamic_desc(lua_State* tolua_S)
+{
+  quest_type* self = (quest_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->dynamic_desc = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: status of class  quest_type */
+static int toluaI_get_quest_quest_type_status(lua_State* tolua_S)
+{
+  quest_type* self = (quest_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->status);
+ return 1;
+}
+
+/* set function: status of class  quest_type */
+static int toluaI_set_quest_quest_type_status(lua_State* tolua_S)
+{
+  quest_type* self = (quest_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->status = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: level of class  quest_type */
+static int toluaI_get_quest_quest_type_level(lua_State* tolua_S)
+{
+  quest_type* self = (quest_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->level);
+ return 1;
+}
+
+/* set function: level of class  quest_type */
+static int toluaI_set_quest_quest_type_level(lua_State* tolua_S)
+{
+  quest_type* self = (quest_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->level = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: type of class  quest_type */
+static int toluaI_get_quest_quest_type_type(lua_State* tolua_S)
+{
+  quest_type* self = (quest_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->type);
+ return 1;
+}
+
+/* set function: type of class  quest_type */
+static int toluaI_set_quest_quest_type_type(lua_State* tolua_S)
+{
+  quest_type* self = (quest_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->type = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: max_q_idx */
+static int toluaI_get_quest_max_q_idx(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)max_q_idx);
+ return 1;
+}
+
+/* set function: max_q_idx */
+static int toluaI_set_quest_max_q_idx(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  max_q_idx = ((s16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: quest */
+static int toluaI_get_quest_quest_aux(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_q_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushusertype(tolua_S,(void*)&quest[toluaI_index],tolua_tag(tolua_S,"quest_type"));
+ return 1;
+}
+
+/* set function: quest */
+static int toluaI_set_quest_quest_aux(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_q_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  quest[toluaI_index] = *((quest_type*)  tolua_getusertype(tolua_S,3,0));
+ return 0;
+}
+
+/* function: lua_get_quest */
+static int toluaI_quest_quest00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int q_idx = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  quest_type* toluaI_ret = (quest_type*)  lua_get_quest(q_idx);
+ tolua_pushusertype(tolua_S,(void*)toluaI_ret,tolua_tag(tolua_S,"quest_type"));
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'quest'.");
+ return 0;
+}
+
+/* function: add_new_quest */
+static int toluaI_quest_new_quest00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  char* name = ((char*)  tolua_getstring(tolua_S,1,0));
+ {
+  s16b toluaI_ret = (s16b)  add_new_quest(name);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'new_quest'.");
+ return 0;
+}
+
+/* function: desc_quest */
+static int toluaI_quest_quest_desc00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int q_idx = ((int)  tolua_getnumber(tolua_S,1,0));
+  int d = ((int)  tolua_getnumber(tolua_S,2,0));
+  char* desc = ((char*)  tolua_getstring(tolua_S,3,0));
+ {
+  desc_quest(q_idx,d,desc);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'quest_desc'.");
+ return 0;
+}
+
+/* function: lua_get_new_bounty_monster */
+static int toluaI_quest_get_new_bounty_monster00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int lev = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  int toluaI_ret = (int)  lua_get_new_bounty_monster(lev);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_new_bounty_monster'.");
+ return 0;
+}
+
+/* Open function */
+int tolua_quest_open (lua_State* tolua_S)
+{
+ tolua_open(tolua_S);
+ toluaI_reg_types(tolua_S);
+ tolua_constant(tolua_S,NULL,"QUEST_STATUS_IGNORED",QUEST_STATUS_IGNORED);
+ tolua_constant(tolua_S,NULL,"QUEST_STATUS_UNTAKEN",QUEST_STATUS_UNTAKEN);
+ tolua_constant(tolua_S,NULL,"QUEST_STATUS_TAKEN",QUEST_STATUS_TAKEN);
+ tolua_constant(tolua_S,NULL,"QUEST_STATUS_COMPLETED",QUEST_STATUS_COMPLETED);
+ tolua_constant(tolua_S,NULL,"QUEST_STATUS_REWARDED",QUEST_STATUS_REWARDED);
+ tolua_constant(tolua_S,NULL,"QUEST_STATUS_FAILED",QUEST_STATUS_FAILED);
+ tolua_constant(tolua_S,NULL,"QUEST_STATUS_FINISHED",QUEST_STATUS_FINISHED);
+ tolua_constant(tolua_S,NULL,"QUEST_STATUS_FAILED_DONE",QUEST_STATUS_FAILED_DONE);
+ tolua_cclass(tolua_S,"quest_type","");
+ tolua_tablevar(tolua_S,"quest_type","silent",toluaI_get_quest_quest_type_silent,toluaI_set_quest_quest_type_silent);
+ tolua_tablevar(tolua_S,"quest_type","dynamic_desc",toluaI_get_quest_quest_type_dynamic_desc,toluaI_set_quest_quest_type_dynamic_desc);
+ tolua_tablevar(tolua_S,"quest_type","status",toluaI_get_quest_quest_type_status,toluaI_set_quest_quest_type_status);
+ tolua_tablevar(tolua_S,"quest_type","level",toluaI_get_quest_quest_type_level,toluaI_set_quest_quest_type_level);
+ tolua_tablevar(tolua_S,"quest_type","type",toluaI_get_quest_quest_type_type,toluaI_set_quest_quest_type_type);
+ tolua_globalvar(tolua_S,"max_q_idx",toluaI_get_quest_max_q_idx,toluaI_set_quest_max_q_idx);
+ tolua_globalarray(tolua_S,"quest_aux",toluaI_get_quest_quest_aux,toluaI_set_quest_quest_aux);
+ tolua_function(tolua_S,NULL,"quest",toluaI_quest_quest00);
+ tolua_function(tolua_S,NULL,"new_quest",toluaI_quest_new_quest00);
+ tolua_function(tolua_S,NULL,"quest_desc",toluaI_quest_quest_desc00);
+ tolua_function(tolua_S,NULL,"get_new_bounty_monster",toluaI_quest_get_new_bounty_monster00);
+ return 1;
+}
+/* Close function */
+void tolua_quest_close (lua_State* tolua_S)
+{
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"QUEST_STATUS_IGNORED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"QUEST_STATUS_UNTAKEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"QUEST_STATUS_TAKEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"QUEST_STATUS_COMPLETED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"QUEST_STATUS_REWARDED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"QUEST_STATUS_FAILED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"QUEST_STATUS_FINISHED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"QUEST_STATUS_FAILED_DONE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"quest_type");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"max_q_idx"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"quest_aux");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"quest");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"new_quest");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"quest_desc");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_new_bounty_monster");
+}
diff -Nru --strip-trailing-cr tome-2.5.3/src/w_spells.c tome-2.5.3-lua.files/src/w_spells.c
--- tome-2.5.3/src/w_spells.c	1969-12-31 16:00:00.000000000 -0800
+++ tome-2.5.3-lua.files/src/w_spells.c	2010-09-26 07:37:12.000000000 -0700
@@ -0,0 +1,3691 @@
+/*
+** Lua binding: spells
+** Generated automatically by tolua 4.0a - angband on Sun Sep 26 07:37:12 2010.
+*/
+
+#include "lua/tolua.h"
+
+/* Exported function */
+int tolua_spells_open (lua_State* tolua_S);
+void tolua_spells_close (lua_State* tolua_S);
+
+#include "angband.h"
+#include "lua.h"
+
+/* function to register type */
+static void toluaI_reg_types (lua_State* tolua_S)
+{
+ tolua_usertype(tolua_S,"magic_power");
+ tolua_usertype(tolua_S,"school_type");
+ tolua_usertype(tolua_S,"spell_type");
+ tolua_usertype(tolua_S,"object_type");
+ tolua_usertype(tolua_S,"FILE");
+}
+
+/* error messages */
+#define TOLUA_ERR_SELF tolua_error(tolua_S,"invalid 'self'")
+#define TOLUA_ERR_ASSIGN tolua_error(tolua_S,"#vinvalid type in variable assignment.")
+
+/* get function: project_time */
+static int toluaI_get_spells_project_time(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)project_time);
+ return 1;
+}
+
+/* set function: project_time */
+static int toluaI_set_spells_project_time(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  project_time = ((int)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* function: teleport_player_directed */
+static int toluaI_spells_teleport_player_directed00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+  int dir = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  teleport_player_directed(rad,dir);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'teleport_player_directed'.");
+ return 0;
+}
+
+/* function: teleport_away */
+static int toluaI_spells_teleport_away00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int m_idx = ((int)  tolua_getnumber(tolua_S,1,0));
+  int dis = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  teleport_away(m_idx,dis);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'teleport_away'.");
+ return 0;
+}
+
+/* function: teleport_player */
+static int toluaI_spells_teleport_player00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dis = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  teleport_player(dis);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'teleport_player'.");
+ return 0;
+}
+
+/* function: teleport_player_to */
+static int toluaI_spells_teleport_player_to00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int ny = ((int)  tolua_getnumber(tolua_S,1,0));
+  int nx = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  teleport_player_to(ny,nx);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'teleport_player_to'.");
+ return 0;
+}
+
+/* function: teleport_monster_to */
+static int toluaI_spells_teleport_monster_to00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int m_idx = ((int)  tolua_getnumber(tolua_S,1,0));
+  int ny = ((int)  tolua_getnumber(tolua_S,2,0));
+  int nx = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  teleport_monster_to(m_idx,ny,nx);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'teleport_monster_to'.");
+ return 0;
+}
+
+/* function: teleport_monster */
+static int toluaI_spells_teleport_monster00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dir = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  teleport_monster(dir);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'teleport_monster'.");
+ return 0;
+}
+
+/* function: teleport_player_level */
+static int toluaI_spells_teleport_player_level00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  teleport_player_level();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'teleport_player_level'.");
+ return 0;
+}
+
+/* function: fetch */
+static int toluaI_spells_fetch00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dir = ((int)  tolua_getnumber(tolua_S,1,0));
+  int wgt = ((int)  tolua_getnumber(tolua_S,2,0));
+  bool require_los = ((bool)  tolua_getnumber(tolua_S,3,0));
+ {
+  fetch(dir,wgt,require_los);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'fetch'.");
+ return 0;
+}
+
+/* function: recall_player */
+static int toluaI_spells_recall_player00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int d = ((int)  tolua_getnumber(tolua_S,1,0));
+  int f = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  recall_player(d,f);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'recall_player'.");
+ return 0;
+}
+
+/* function: take_hit */
+static int toluaI_spells_take_hit00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int damage = ((int)  tolua_getnumber(tolua_S,1,0));
+  cptr kb_str = ((cptr)  tolua_getstring(tolua_S,2,0));
+ {
+  take_hit(damage,kb_str);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'take_hit'.");
+ return 0;
+}
+
+/* function: take_sanity_hit */
+static int toluaI_spells_take_sanity_hit00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int damage = ((int)  tolua_getnumber(tolua_S,1,0));
+  cptr hit_from = ((cptr)  tolua_getstring(tolua_S,2,0));
+ {
+  take_sanity_hit(damage,hit_from);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'take_sanity_hit'.");
+ return 0;
+}
+
+/* function: project */
+static int toluaI_spells_project00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,6,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,7,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,8)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int who = ((int)  tolua_getnumber(tolua_S,1,0));
+  int rad = ((int)  tolua_getnumber(tolua_S,2,0));
+  int y = ((int)  tolua_getnumber(tolua_S,3,0));
+  int x = ((int)  tolua_getnumber(tolua_S,4,0));
+  int dam = ((int)  tolua_getnumber(tolua_S,5,0));
+  int typ = ((int)  tolua_getnumber(tolua_S,6,0));
+  int flg = ((int)  tolua_getnumber(tolua_S,7,0));
+ {
+  bool toluaI_ret = (bool)  project(who,rad,y,x,dam,typ,flg);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'project'.");
+ return 0;
+}
+
+/* function: corrupt_player */
+static int toluaI_spells_corrupt_player00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  corrupt_player();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'corrupt_player'.");
+ return 0;
+}
+
+/* function: grow_things */
+static int toluaI_spells_grow_things00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s16b type = ((s16b)  tolua_getnumber(tolua_S,1,0));
+  int rad = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  grow_things(type,rad);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'grow_things'.");
+ return 0;
+}
+
+/* function: grow_grass */
+static int toluaI_spells_grow_grass00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  grow_grass(rad);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'grow_grass'.");
+ return 0;
+}
+
+/* function: grow_trees */
+static int toluaI_spells_grow_trees00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  grow_trees(rad);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'grow_trees'.");
+ return 0;
+}
+
+/* function: hp_player */
+static int toluaI_spells_hp_player00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int num = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  hp_player(num);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'hp_player'.");
+ return 0;
+}
+
+/* function: heal_insanity */
+static int toluaI_spells_heal_insanity00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int val = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  heal_insanity(val);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'heal_insanity'.");
+ return 0;
+}
+
+/* function: warding_glyph */
+static int toluaI_spells_warding_glyph00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  warding_glyph();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'warding_glyph'.");
+ return 0;
+}
+
+/* function: explosive_rune */
+static int toluaI_spells_explosive_rune00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  explosive_rune();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'explosive_rune'.");
+ return 0;
+}
+
+/* function: do_dec_stat */
+static int toluaI_spells_do_dec_stat00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int stat = ((int)  tolua_getnumber(tolua_S,1,0));
+  int mode = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  do_dec_stat(stat,mode);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'do_dec_stat'.");
+ return 0;
+}
+
+/* function: do_res_stat */
+static int toluaI_spells_do_res_stat00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int stat = ((int)  tolua_getnumber(tolua_S,1,0));
+  bool full = ((bool)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  do_res_stat(stat,full);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'do_res_stat'.");
+ return 0;
+}
+
+/* function: do_inc_stat */
+static int toluaI_spells_do_inc_stat00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int stat = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  do_inc_stat(stat);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'do_inc_stat'.");
+ return 0;
+}
+
+/* function: identify_pack */
+static int toluaI_spells_identify_pack00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  identify_pack();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'identify_pack'.");
+ return 0;
+}
+
+/* function: remove_curse */
+static int toluaI_spells_remove_curse00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  remove_curse();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'remove_curse'.");
+ return 0;
+}
+
+/* function: remove_all_curse */
+static int toluaI_spells_remove_all_curse00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  remove_all_curse();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'remove_all_curse'.");
+ return 0;
+}
+
+/* function: restore_level */
+static int toluaI_spells_restore_level00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  restore_level();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'restore_level'.");
+ return 0;
+}
+
+/* function: self_knowledge */
+static int toluaI_spells_self_knowledge00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"FILE"),1) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  FILE* fff = ((FILE*)  tolua_getusertype(tolua_S,1,NULL));
+ {
+  self_knowledge(fff);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'self_knowledge'.");
+ return 0;
+}
+
+/* function: lose_all_info */
+static int toluaI_spells_lose_all_info00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  lose_all_info();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'lose_all_info'.");
+ return 0;
+}
+
+/* function: detect_traps */
+static int toluaI_spells_detect_traps00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  detect_traps(rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'detect_traps'.");
+ return 0;
+}
+
+/* function: detect_doors */
+static int toluaI_spells_detect_doors00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  detect_doors(rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'detect_doors'.");
+ return 0;
+}
+
+/* function: detect_stairs */
+static int toluaI_spells_detect_stairs00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  detect_stairs(rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'detect_stairs'.");
+ return 0;
+}
+
+/* function: detect_treasure */
+static int toluaI_spells_detect_treasure00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  detect_treasure(rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'detect_treasure'.");
+ return 0;
+}
+
+/* get function: hack_no_detect_message */
+static int toluaI_get_spells_hack_no_detect_message(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)hack_no_detect_message);
+ return 1;
+}
+
+/* set function: hack_no_detect_message */
+static int toluaI_set_spells_hack_no_detect_message(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  hack_no_detect_message = ((bool)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* function: detect_objects_gold */
+static int toluaI_spells_detect_objects_gold00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  detect_objects_gold(rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'detect_objects_gold'.");
+ return 0;
+}
+
+/* function: detect_objects_normal */
+static int toluaI_spells_detect_objects_normal00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  detect_objects_normal(rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'detect_objects_normal'.");
+ return 0;
+}
+
+/* function: detect_objects_magic */
+static int toluaI_spells_detect_objects_magic00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  detect_objects_magic(rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'detect_objects_magic'.");
+ return 0;
+}
+
+/* function: detect_monsters_normal */
+static int toluaI_spells_detect_monsters_normal00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  detect_monsters_normal(rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'detect_monsters_normal'.");
+ return 0;
+}
+
+/* function: detect_monsters_invis */
+static int toluaI_spells_detect_monsters_invis00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  detect_monsters_invis(rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'detect_monsters_invis'.");
+ return 0;
+}
+
+/* function: detect_monsters_evil */
+static int toluaI_spells_detect_monsters_evil00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  detect_monsters_evil(rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'detect_monsters_evil'.");
+ return 0;
+}
+
+/* function: detect_monsters_good */
+static int toluaI_spells_detect_monsters_good00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  detect_monsters_good(rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'detect_monsters_good'.");
+ return 0;
+}
+
+/* function: detect_monsters_xxx */
+static int toluaI_spells_detect_monsters_xxx00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  u32b match_flag = ((u32b)  tolua_getnumber(tolua_S,1,0));
+  int rad = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  detect_monsters_xxx(match_flag,rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'detect_monsters_xxx'.");
+ return 0;
+}
+
+/* function: detect_monsters_string */
+static int toluaI_spells_detect_monsters_string00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr chars = ((cptr)  tolua_getstring(tolua_S,1,0));
+  int rad = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  detect_monsters_string(chars,rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'detect_monsters_string'.");
+ return 0;
+}
+
+/* function: detect_monsters_nonliving */
+static int toluaI_spells_detect_monsters_nonliving00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  detect_monsters_nonliving(rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'detect_monsters_nonliving'.");
+ return 0;
+}
+
+/* function: detect_all */
+static int toluaI_spells_detect_all00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int rad = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  detect_all(rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'detect_all'.");
+ return 0;
+}
+
+/* function: stair_creation */
+static int toluaI_spells_stair_creation00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  stair_creation();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'stair_creation'.");
+ return 0;
+}
+
+/* function: tgt_pt */
+static int toluaI_spells_tgt_pt00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,1) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int x = ((int)  tolua_getnumber(tolua_S,1,0));
+  int y = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  tgt_pt(&x,&y);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ tolua_pushnumber(tolua_S,(long)x);
+ tolua_pushnumber(tolua_S,(long)y);
+ }
+ }
+ return 3;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'tgt_pt'.");
+ return 0;
+}
+
+/* function: wall_stone */
+static int toluaI_spells_wall_stone00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  wall_stone(y,x);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'wall_stone'.");
+ return 0;
+}
+
+/* function: create_artifact */
+static int toluaI_spells_create_artifact00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"object_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  object_type* o_ptr = ((object_type*)  tolua_getusertype(tolua_S,1,0));
+  bool a_scroll = ((bool)  tolua_getnumber(tolua_S,2,0));
+  bool get_name = ((bool)  tolua_getnumber(tolua_S,3,0));
+ {
+  bool toluaI_ret = (bool)  create_artifact(o_ptr,a_scroll,get_name);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'create_artifact'.");
+ return 0;
+}
+
+/* function: wall_to_mud */
+static int toluaI_spells_wall_to_mud00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dir = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  wall_to_mud(dir);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'wall_to_mud'.");
+ return 0;
+}
+
+/* function: ident_spell */
+static int toluaI_spells_ident_spell00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  ident_spell();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'ident_spell'.");
+ return 0;
+}
+
+/* function: identify_fully */
+static int toluaI_spells_identify_fully00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  identify_fully();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'identify_fully'.");
+ return 0;
+}
+
+/* function: recharge */
+static int toluaI_spells_recharge00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int num = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  recharge(num);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'recharge'.");
+ return 0;
+}
+
+/* function: aggravate_monsters */
+static int toluaI_spells_aggravate_monsters00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int who = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  aggravate_monsters(who);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'aggravate_monsters'.");
+ return 0;
+}
+
+/* function: genocide_aux */
+static int toluaI_spells_genocide_aux00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  bool player_cast = ((bool)  tolua_getnumber(tolua_S,1,0));
+  char typ = ((char)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  genocide_aux(player_cast,typ);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'genocide_aux'.");
+ return 0;
+}
+
+/* function: genocide */
+static int toluaI_spells_genocide00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  bool player_cast = ((bool)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  genocide(player_cast);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'genocide'.");
+ return 0;
+}
+
+/* function: mass_genocide */
+static int toluaI_spells_mass_genocide00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  bool player_cast = ((bool)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  mass_genocide(player_cast);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'mass_genocide'.");
+ return 0;
+}
+
+/* function: probing */
+static int toluaI_spells_probing00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  probing();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'probing'.");
+ return 0;
+}
+
+/* function: banish_evil */
+static int toluaI_spells_banish_evil00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dist = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  banish_evil(dist);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'banish_evil'.");
+ return 0;
+}
+
+/* function: dispel_evil */
+static int toluaI_spells_dispel_evil00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dam = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  dispel_evil(dam);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'dispel_evil'.");
+ return 0;
+}
+
+/* function: dispel_good */
+static int toluaI_spells_dispel_good00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dam = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  dispel_good(dam);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'dispel_good'.");
+ return 0;
+}
+
+/* function: dispel_undead */
+static int toluaI_spells_dispel_undead00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dam = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  dispel_undead(dam);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'dispel_undead'.");
+ return 0;
+}
+
+/* function: dispel_monsters */
+static int toluaI_spells_dispel_monsters00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dam = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  dispel_monsters(dam);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'dispel_monsters'.");
+ return 0;
+}
+
+/* function: dispel_living */
+static int toluaI_spells_dispel_living00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dam = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  dispel_living(dam);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'dispel_living'.");
+ return 0;
+}
+
+/* function: dispel_demons */
+static int toluaI_spells_dispel_demons00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dam = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  dispel_demons(dam);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'dispel_demons'.");
+ return 0;
+}
+
+/* function: turn_undead */
+static int toluaI_spells_turn_undead00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  turn_undead();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'turn_undead'.");
+ return 0;
+}
+
+/* function: door_creation */
+static int toluaI_spells_door_creation00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  door_creation();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'door_creation'.");
+ return 0;
+}
+
+/* function: trap_creation */
+static int toluaI_spells_trap_creation00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  trap_creation();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'trap_creation'.");
+ return 0;
+}
+
+/* function: glyph_creation */
+static int toluaI_spells_glyph_creation00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  glyph_creation();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'glyph_creation'.");
+ return 0;
+}
+
+/* function: wipe */
+static int toluaI_spells_wipe00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y1 = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x1 = ((int)  tolua_getnumber(tolua_S,2,0));
+  int r = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  wipe(y1,x1,r);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'wipe'.");
+ return 0;
+}
+
+/* function: destroy_area */
+static int toluaI_spells_destroy_area00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,6)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y1 = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x1 = ((int)  tolua_getnumber(tolua_S,2,0));
+  int r = ((int)  tolua_getnumber(tolua_S,3,0));
+  bool full = ((bool)  tolua_getnumber(tolua_S,4,0));
+  bool bypass = ((bool)  tolua_getnumber(tolua_S,5,0));
+ {
+  destroy_area(y1,x1,r,full,bypass);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'destroy_area'.");
+ return 0;
+}
+
+/* function: earthquake */
+static int toluaI_spells_earthquake00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int cy = ((int)  tolua_getnumber(tolua_S,1,0));
+  int cx = ((int)  tolua_getnumber(tolua_S,2,0));
+  int r = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  earthquake(cy,cx,r);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'earthquake'.");
+ return 0;
+}
+
+/* function: lite_room */
+static int toluaI_spells_lite_room00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y1 = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x1 = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  lite_room(y1,x1);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'lite_room'.");
+ return 0;
+}
+
+/* function: unlite_room */
+static int toluaI_spells_unlite_room00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y1 = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x1 = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  unlite_room(y1,x1);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'unlite_room'.");
+ return 0;
+}
+
+/* function: lite_area */
+static int toluaI_spells_lite_area00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dam = ((int)  tolua_getnumber(tolua_S,1,0));
+  int rad = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  lite_area(dam,rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'lite_area'.");
+ return 0;
+}
+
+/* function: unlite_area */
+static int toluaI_spells_unlite_area00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dam = ((int)  tolua_getnumber(tolua_S,1,0));
+  int rad = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  unlite_area(dam,rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'unlite_area'.");
+ return 0;
+}
+
+/* function: fire_ball_beam */
+static int toluaI_spells_fire_ball_beam00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int typ = ((int)  tolua_getnumber(tolua_S,1,0));
+  int dir = ((int)  tolua_getnumber(tolua_S,2,0));
+  int dam = ((int)  tolua_getnumber(tolua_S,3,0));
+  int rad = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  bool toluaI_ret = (bool)  fire_ball_beam(typ,dir,dam,rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'fire_ball_beam'.");
+ return 0;
+}
+
+/* function: make_wish */
+static int toluaI_spells_make_wish00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  make_wish();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'make_wish'.");
+ return 0;
+}
+
+/* function: fire_wave */
+static int toluaI_spells_fire_wave00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,6,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,7)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int typ = ((int)  tolua_getnumber(tolua_S,1,0));
+  int dir = ((int)  tolua_getnumber(tolua_S,2,0));
+  int dam = ((int)  tolua_getnumber(tolua_S,3,0));
+  int rad = ((int)  tolua_getnumber(tolua_S,4,0));
+  int time = ((int)  tolua_getnumber(tolua_S,5,0));
+  s32b eff = ((s32b)  tolua_getnumber(tolua_S,6,0));
+ {
+  bool toluaI_ret = (bool)  fire_wave(typ,dir,dam,rad,time,eff);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'fire_wave'.");
+ return 0;
+}
+
+/* function: fire_cloud */
+static int toluaI_spells_fire_cloud00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,6)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int typ = ((int)  tolua_getnumber(tolua_S,1,0));
+  int dir = ((int)  tolua_getnumber(tolua_S,2,0));
+  int dam = ((int)  tolua_getnumber(tolua_S,3,0));
+  int rad = ((int)  tolua_getnumber(tolua_S,4,0));
+  int time = ((int)  tolua_getnumber(tolua_S,5,0));
+ {
+  bool toluaI_ret = (bool)  fire_cloud(typ,dir,dam,rad,time);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'fire_cloud'.");
+ return 0;
+}
+
+/* function: fire_wall */
+static int toluaI_spells_fire_wall00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int typ = ((int)  tolua_getnumber(tolua_S,1,0));
+  int dir = ((int)  tolua_getnumber(tolua_S,2,0));
+  int dam = ((int)  tolua_getnumber(tolua_S,3,0));
+  int time = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  bool toluaI_ret = (bool)  fire_wall(typ,dir,dam,time);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'fire_wall'.");
+ return 0;
+}
+
+/* function: fire_ball */
+static int toluaI_spells_fire_ball00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int typ = ((int)  tolua_getnumber(tolua_S,1,0));
+  int dir = ((int)  tolua_getnumber(tolua_S,2,0));
+  int dam = ((int)  tolua_getnumber(tolua_S,3,0));
+  int rad = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  bool toluaI_ret = (bool)  fire_ball(typ,dir,dam,rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'fire_ball'.");
+ return 0;
+}
+
+/* function: fire_bolt */
+static int toluaI_spells_fire_bolt00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int typ = ((int)  tolua_getnumber(tolua_S,1,0));
+  int dir = ((int)  tolua_getnumber(tolua_S,2,0));
+  int dam = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  bool toluaI_ret = (bool)  fire_bolt(typ,dir,dam);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'fire_bolt'.");
+ return 0;
+}
+
+/* function: fire_beam */
+static int toluaI_spells_fire_beam00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int typ = ((int)  tolua_getnumber(tolua_S,1,0));
+  int dir = ((int)  tolua_getnumber(tolua_S,2,0));
+  int dam = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  bool toluaI_ret = (bool)  fire_beam(typ,dir,dam);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'fire_beam'.");
+ return 0;
+}
+
+/* function: fire_druid_ball */
+static int toluaI_spells_fire_druid_ball00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int typ = ((int)  tolua_getnumber(tolua_S,1,0));
+  int dir = ((int)  tolua_getnumber(tolua_S,2,0));
+  int dam = ((int)  tolua_getnumber(tolua_S,3,0));
+  int rad = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  bool toluaI_ret = (bool)  fire_druid_ball(typ,dir,dam,rad);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'fire_druid_ball'.");
+ return 0;
+}
+
+/* function: fire_druid_bolt */
+static int toluaI_spells_fire_druid_bolt00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int typ = ((int)  tolua_getnumber(tolua_S,1,0));
+  int dir = ((int)  tolua_getnumber(tolua_S,2,0));
+  int dam = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  bool toluaI_ret = (bool)  fire_druid_bolt(typ,dir,dam);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'fire_druid_bolt'.");
+ return 0;
+}
+
+/* function: fire_druid_beam */
+static int toluaI_spells_fire_druid_beam00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int typ = ((int)  tolua_getnumber(tolua_S,1,0));
+  int dir = ((int)  tolua_getnumber(tolua_S,2,0));
+  int dam = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  bool toluaI_ret = (bool)  fire_druid_beam(typ,dir,dam);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'fire_druid_beam'.");
+ return 0;
+}
+
+/* function: fire_bolt_or_beam */
+static int toluaI_spells_fire_bolt_or_beam00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int prob = ((int)  tolua_getnumber(tolua_S,1,0));
+  int typ = ((int)  tolua_getnumber(tolua_S,2,0));
+  int dir = ((int)  tolua_getnumber(tolua_S,3,0));
+  int dam = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  bool toluaI_ret = (bool)  fire_bolt_or_beam(prob,typ,dir,dam);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'fire_bolt_or_beam'.");
+ return 0;
+}
+
+/* function: alchemy */
+static int toluaI_spells_alchemy00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  alchemy();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'alchemy'.");
+ return 0;
+}
+
+/* function: alter_reality */
+static int toluaI_spells_alter_reality00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  alter_reality();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'alter_reality'.");
+ return 0;
+}
+
+/* function: swap_position */
+static int toluaI_spells_swap_position00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int lty = ((int)  tolua_getnumber(tolua_S,1,0));
+  int ltx = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  swap_position(lty,ltx);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'swap_position'.");
+ return 0;
+}
+
+/* function: teleport_swap */
+static int toluaI_spells_teleport_swap00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dir = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  teleport_swap(dir);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'teleport_swap'.");
+ return 0;
+}
+
+/* function: project_meteor */
+static int toluaI_spells_project_meteor00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int radius = ((int)  tolua_getnumber(tolua_S,1,0));
+  int typ = ((int)  tolua_getnumber(tolua_S,2,0));
+  int dam = ((int)  tolua_getnumber(tolua_S,3,0));
+  u32b flg = ((u32b)  tolua_getnumber(tolua_S,4,0));
+ {
+  project_meteor(radius,typ,dam,flg);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'project_meteor'.");
+ return 0;
+}
+
+/* function: passwall */
+static int toluaI_spells_passwall00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dir = ((int)  tolua_getnumber(tolua_S,1,0));
+  bool safe = ((bool)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  passwall(dir,safe);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'passwall'.");
+ return 0;
+}
+
+/* function: project_hook */
+static int toluaI_spells_project_hook00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int typ = ((int)  tolua_getnumber(tolua_S,1,0));
+  int dir = ((int)  tolua_getnumber(tolua_S,2,0));
+  int dam = ((int)  tolua_getnumber(tolua_S,3,0));
+  int flg = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  bool toluaI_ret = (bool)  project_hook(typ,dir,dam,flg);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'project_hook'.");
+ return 0;
+}
+
+/* function: wizard_lock */
+static int toluaI_spells_wizard_lock00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dir = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  wizard_lock(dir);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'wizard_lock'.");
+ return 0;
+}
+
+/* function: reset_recall */
+static int toluaI_spells_reset_recall00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  bool no_trepas_max_depth = ((bool)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  reset_recall(no_trepas_max_depth);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'reset_recall'.");
+ return 0;
+}
+
+/* function: get_aim_dir */
+static int toluaI_spells_get_aim_dir00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,1) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dp = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  get_aim_dir(&dp);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ tolua_pushnumber(tolua_S,(long)dp);
+ }
+ }
+ return 2;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_aim_dir'.");
+ return 0;
+}
+
+/* function: get_rep_dir */
+static int toluaI_spells_get_rep_dir00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,1) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dp = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  get_rep_dir(&dp);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ tolua_pushnumber(tolua_S,(long)dp);
+ }
+ }
+ return 2;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_rep_dir'.");
+ return 0;
+}
+
+/* function: project_hack */
+static int toluaI_spells_project_los00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int typ = ((int)  tolua_getnumber(tolua_S,1,0));
+  int dam = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  project_hack(typ,dam);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'project_los'.");
+ return 0;
+}
+
+/* function: map_area */
+static int toluaI_spells_map_area00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  map_area();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'map_area'.");
+ return 0;
+}
+
+/* function: wiz_lite */
+static int toluaI_spells_wiz_lite00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  wiz_lite();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'wiz_lite'.");
+ return 0;
+}
+
+/* function: wiz_lite_extra */
+static int toluaI_spells_wiz_lite_extra00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  wiz_lite_extra();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'wiz_lite_extra'.");
+ return 0;
+}
+
+/* function: wiz_dark */
+static int toluaI_spells_wiz_dark00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  wiz_dark();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'wiz_dark'.");
+ return 0;
+}
+
+/* function: create_between_gate */
+static int toluaI_spells_create_between_gate00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dist = ((int)  tolua_getnumber(tolua_S,1,0));
+  int y = ((int)  tolua_getnumber(tolua_S,2,0));
+  int x = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  create_between_gate(dist,y,x);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'create_between_gate'.");
+ return 0;
+}
+
+/* function: destroy_doors_touch */
+static int toluaI_spells_destroy_doors_touch00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  destroy_doors_touch();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'destroy_doors_touch'.");
+ return 0;
+}
+
+/* function: destroy_traps_touch */
+static int toluaI_spells_destroy_traps_touch00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  bool toluaI_ret = (bool)  destroy_traps_touch();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'destroy_traps_touch'.");
+ return 0;
+}
+
+/* get function: min_lev of class  magic_power */
+static int toluaI_get_spells_magic_power_min_lev(lua_State* tolua_S)
+{
+  magic_power* self = (magic_power*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->min_lev);
+ return 1;
+}
+
+/* set function: min_lev of class  magic_power */
+static int toluaI_set_spells_magic_power_min_lev(lua_State* tolua_S)
+{
+  magic_power* self = (magic_power*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->min_lev = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mana_cost of class  magic_power */
+static int toluaI_get_spells_magic_power_mana_cost(lua_State* tolua_S)
+{
+  magic_power* self = (magic_power*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mana_cost);
+ return 1;
+}
+
+/* set function: mana_cost of class  magic_power */
+static int toluaI_set_spells_magic_power_mana_cost(lua_State* tolua_S)
+{
+  magic_power* self = (magic_power*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mana_cost = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: fail of class  magic_power */
+static int toluaI_get_spells_magic_power_fail(lua_State* tolua_S)
+{
+  magic_power* self = (magic_power*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->fail);
+ return 1;
+}
+
+/* set function: fail of class  magic_power */
+static int toluaI_set_spells_magic_power_fail(lua_State* tolua_S)
+{
+  magic_power* self = (magic_power*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->fail = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: name of class  magic_power */
+static int toluaI_get_spells_magic_power_name(lua_State* tolua_S)
+{
+  magic_power* self = (magic_power*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushstring(tolua_S,(const char*)self->name);
+ return 1;
+}
+
+/* set function: name of class  magic_power */
+static int toluaI_set_spells_magic_power_name(lua_State* tolua_S)
+{
+  magic_power* self = (magic_power*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  self->name = ((cptr)  tolua_getstring(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: desc of class  magic_power */
+static int toluaI_get_spells_magic_power_desc(lua_State* tolua_S)
+{
+  magic_power* self = (magic_power*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushstring(tolua_S,(const char*)self->desc);
+ return 1;
+}
+
+/* set function: desc of class  magic_power */
+static int toluaI_set_spells_magic_power_desc(lua_State* tolua_S)
+{
+  magic_power* self = (magic_power*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  self->desc = ((cptr)  tolua_getstring(tolua_S,2,0));
+ return 0;
+}
+
+/* function: new_magic_power */
+static int toluaI_spells_new_magic_power00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int num = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  magic_power* toluaI_ret = (magic_power*)  new_magic_power(num);
+ tolua_pushusertype(tolua_S,(void*)toluaI_ret,tolua_tag(tolua_S,"magic_power"));
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'new_magic_power'.");
+ return 0;
+}
+
+/* function: grab_magic_power */
+static int toluaI_spells_get_magic_power00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"magic_power"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  magic_power* m_ptr = ((magic_power*)  tolua_getusertype(tolua_S,1,0));
+  int num = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  magic_power* toluaI_ret = (magic_power*)  grab_magic_power(m_ptr,num);
+ tolua_pushusertype(tolua_S,(void*)toluaI_ret,tolua_tag(tolua_S,"magic_power"));
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_magic_power'.");
+ return 0;
+}
+
+/* function: get_magic_power_lua */
+static int toluaI_spells_select_magic_power00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"magic_power"),0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,6,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,7)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int sn = ((int)  tolua_getnumber(tolua_S,1,0));
+  magic_power* powers = ((magic_power*)  tolua_getusertype(tolua_S,2,0));
+  int max_powers = ((int)  tolua_getnumber(tolua_S,3,0));
+  char* info_fct = ((char*)  tolua_getstring(tolua_S,4,0));
+  int plev = ((int)  tolua_getnumber(tolua_S,5,0));
+  int cast_stat = ((int)  tolua_getnumber(tolua_S,6,0));
+ {
+  bool toluaI_ret = (bool)  get_magic_power_lua(&sn,powers,max_powers,info_fct,plev,cast_stat);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ tolua_pushnumber(tolua_S,(long)sn);
+ }
+ }
+ return 2;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'select_magic_power'.");
+ return 0;
+}
+
+/* function: lua_spell_success */
+static int toluaI_spells_magic_power_sucess00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"magic_power"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TSTRING,1) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  magic_power* spell = ((magic_power*)  tolua_getusertype(tolua_S,1,0));
+  int stat = ((int)  tolua_getnumber(tolua_S,2,0));
+  char* oups_fct = ((char*)  tolua_getstring(tolua_S,3,NULL));
+ {
+  bool toluaI_ret = (bool)  lua_spell_success(spell,stat,oups_fct);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'magic_power_sucess'.");
+ return 0;
+}
+
+/* function: add_new_power */
+static int toluaI_spells_add_new_power00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,3,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,4,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,6,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,7,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,8,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,9)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr name = ((cptr)  tolua_getstring(tolua_S,1,0));
+  cptr desc = ((cptr)  tolua_getstring(tolua_S,2,0));
+  cptr gain = ((cptr)  tolua_getstring(tolua_S,3,0));
+  cptr lose = ((cptr)  tolua_getstring(tolua_S,4,0));
+  byte level = ((byte)  tolua_getnumber(tolua_S,5,0));
+  byte cost = ((byte)  tolua_getnumber(tolua_S,6,0));
+  byte stat = ((byte)  tolua_getnumber(tolua_S,7,0));
+  byte diff = ((byte)  tolua_getnumber(tolua_S,8,0));
+ {
+  s16b toluaI_ret = (s16b)  add_new_power(name,desc,gain,lose,level,cost,stat,diff);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'add_new_power'.");
+ return 0;
+}
+
+/* get function: power_max */
+static int toluaI_get_spells_power_max(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)power_max);
+ return 1;
+}
+
+/* set function: power_max */
+static int toluaI_set_spells_power_max(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  power_max = ((s16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: name of class  spell_type */
+static int toluaI_get_spells_spell_type_name(lua_State* tolua_S)
+{
+  spell_type* self = (spell_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushstring(tolua_S,(const char*)self->name);
+ return 1;
+}
+
+/* set function: name of class  spell_type */
+static int toluaI_set_spells_spell_type_name(lua_State* tolua_S)
+{
+  spell_type* self = (spell_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  self->name = ((cptr)  tolua_getstring(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: skill_level of class  spell_type */
+static int toluaI_get_spells_spell_type_skill_level(lua_State* tolua_S)
+{
+  spell_type* self = (spell_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->skill_level);
+ return 1;
+}
+
+/* set function: skill_level of class  spell_type */
+static int toluaI_set_spells_spell_type_skill_level(lua_State* tolua_S)
+{
+  spell_type* self = (spell_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->skill_level = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mana of class  spell_type */
+static int toluaI_get_spells_spell_type_mana(lua_State* tolua_S)
+{
+  spell_type* self = (spell_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mana);
+ return 1;
+}
+
+/* set function: mana of class  spell_type */
+static int toluaI_set_spells_spell_type_mana(lua_State* tolua_S)
+{
+  spell_type* self = (spell_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mana = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mana_max of class  spell_type */
+static int toluaI_get_spells_spell_type_mana_max(lua_State* tolua_S)
+{
+  spell_type* self = (spell_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mana_max);
+ return 1;
+}
+
+/* set function: mana_max of class  spell_type */
+static int toluaI_set_spells_spell_type_mana_max(lua_State* tolua_S)
+{
+  spell_type* self = (spell_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mana_max = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: fail of class  spell_type */
+static int toluaI_get_spells_spell_type_fail(lua_State* tolua_S)
+{
+  spell_type* self = (spell_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->fail);
+ return 1;
+}
+
+/* set function: fail of class  spell_type */
+static int toluaI_set_spells_spell_type_fail(lua_State* tolua_S)
+{
+  spell_type* self = (spell_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->fail = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: level of class  spell_type */
+static int toluaI_get_spells_spell_type_level(lua_State* tolua_S)
+{
+  spell_type* self = (spell_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->level);
+ return 1;
+}
+
+/* set function: level of class  spell_type */
+static int toluaI_set_spells_spell_type_level(lua_State* tolua_S)
+{
+  spell_type* self = (spell_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->level = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: name of class  school_type */
+static int toluaI_get_spells_school_type_name(lua_State* tolua_S)
+{
+  school_type* self = (school_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushstring(tolua_S,(const char*)self->name);
+ return 1;
+}
+
+/* set function: name of class  school_type */
+static int toluaI_set_spells_school_type_name(lua_State* tolua_S)
+{
+  school_type* self = (school_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  self->name = ((cptr)  tolua_getstring(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: skill of class  school_type */
+static int toluaI_get_spells_school_type_skill(lua_State* tolua_S)
+{
+  school_type* self = (school_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->skill);
+ return 1;
+}
+
+/* set function: skill of class  school_type */
+static int toluaI_set_spells_school_type_skill(lua_State* tolua_S)
+{
+  school_type* self = (school_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->skill = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* function: new_school */
+static int toluaI_spells_new_school00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int i = ((int)  tolua_getnumber(tolua_S,1,0));
+  cptr name = ((cptr)  tolua_getstring(tolua_S,2,0));
+  s16b skill = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ {
+  s16b toluaI_ret = (s16b)  new_school(i,name,skill);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'new_school'.");
+ return 0;
+}
+
+/* function: new_spell */
+static int toluaI_spells_new_spell00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int i = ((int)  tolua_getnumber(tolua_S,1,0));
+  cptr name = ((cptr)  tolua_getstring(tolua_S,2,0));
+ {
+  s16b toluaI_ret = (s16b)  new_spell(i,name);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'new_spell'.");
+ return 0;
+}
+
+/* function: grab_spell_type */
+static int toluaI_spells_spell00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s16b num = ((s16b)  tolua_getnumber(tolua_S,1,0));
+ {
+  spell_type* toluaI_ret = (spell_type*)  grab_spell_type(num);
+ tolua_pushusertype(tolua_S,(void*)toluaI_ret,tolua_tag(tolua_S,"spell_type"));
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'spell'.");
+ return 0;
+}
+
+/* function: grab_school_type */
+static int toluaI_spells_school00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s16b num = ((s16b)  tolua_getnumber(tolua_S,1,0));
+ {
+  school_type* toluaI_ret = (school_type*)  grab_school_type(num);
+ tolua_pushusertype(tolua_S,(void*)toluaI_ret,tolua_tag(tolua_S,"school_type"));
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'school'.");
+ return 0;
+}
+
+/* function: lua_get_level */
+static int toluaI_spells_lua_get_level00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,6)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s32b s = ((s32b)  tolua_getnumber(tolua_S,1,0));
+  s32b lvl = ((s32b)  tolua_getnumber(tolua_S,2,0));
+  s32b max = ((s32b)  tolua_getnumber(tolua_S,3,0));
+  s32b min = ((s32b)  tolua_getnumber(tolua_S,4,0));
+  s32b bonus = ((s32b)  tolua_getnumber(tolua_S,5,0));
+ {
+  s32b toluaI_ret = (s32b)  lua_get_level(s,lvl,max,min,bonus);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'lua_get_level'.");
+ return 0;
+}
+
+/* function: lua_spell_chance */
+static int toluaI_spells_lua_spell_chance00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,6,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,7)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s32b chance = ((s32b)  tolua_getnumber(tolua_S,1,0));
+  int level = ((int)  tolua_getnumber(tolua_S,2,0));
+  int skill_level = ((int)  tolua_getnumber(tolua_S,3,0));
+  int mana = ((int)  tolua_getnumber(tolua_S,4,0));
+  int cur_mana = ((int)  tolua_getnumber(tolua_S,5,0));
+  int stat = ((int)  tolua_getnumber(tolua_S,6,0));
+ {
+  s32b toluaI_ret = (s32b)  lua_spell_chance(chance,level,skill_level,mana,cur_mana,stat);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'lua_spell_chance'.");
+ return 0;
+}
+
+/* function: lua_spell_device_chance */
+static int toluaI_spells_lua_spell_device_chance00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s32b chance = ((s32b)  tolua_getnumber(tolua_S,1,0));
+  int level = ((int)  tolua_getnumber(tolua_S,2,0));
+  int base_level = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  s32b toluaI_ret = (s32b)  lua_spell_device_chance(chance,level,base_level);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'lua_spell_device_chance'.");
+ return 0;
+}
+
+/* function: get_school_spell */
+static int toluaI_spells_get_school_spell00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr do_what = ((cptr)  tolua_getstring(tolua_S,1,0));
+  cptr check_fct = ((cptr)  tolua_getstring(tolua_S,2,0));
+  s16b force_book = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ {
+  u32b toluaI_ret = (u32b)  get_school_spell(do_what,check_fct,force_book);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_school_spell'.");
+ return 0;
+}
+
+/* get function: last_teleportation_y */
+static int toluaI_get_spells_last_teleportation_y(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)last_teleportation_y);
+ return 1;
+}
+
+/* set function: last_teleportation_y */
+static int toluaI_set_spells_last_teleportation_y(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  last_teleportation_y = ((s16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: last_teleportation_x */
+static int toluaI_get_spells_last_teleportation_x(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)last_teleportation_x);
+ return 1;
+}
+
+/* set function: last_teleportation_x */
+static int toluaI_set_spells_last_teleportation_x(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  last_teleportation_x = ((s16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* function: get_pos_player */
+static int toluaI_spells_get_pos_player00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,1) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dis = ((int)  tolua_getnumber(tolua_S,1,0));
+  int ny = ((int)  tolua_getnumber(tolua_S,2,0));
+  int nx = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  get_pos_player(dis,&ny,&nx);
+ tolua_pushnumber(tolua_S,(long)ny);
+ tolua_pushnumber(tolua_S,(long)nx);
+ }
+ }
+ return 2;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_pos_player'.");
+ return 0;
+}
+
+/* Open function */
+int tolua_spells_open (lua_State* tolua_S)
+{
+ tolua_open(tolua_S);
+ toluaI_reg_types(tolua_S);
+ tolua_constant(tolua_S,NULL,"DEFAULT_RADIUS",DEFAULT_RADIUS);
+ tolua_constant(tolua_S,NULL,"GF_ELEC",GF_ELEC);
+ tolua_constant(tolua_S,NULL,"GF_POIS",GF_POIS);
+ tolua_constant(tolua_S,NULL,"GF_ACID",GF_ACID);
+ tolua_constant(tolua_S,NULL,"GF_COLD",GF_COLD);
+ tolua_constant(tolua_S,NULL,"GF_FIRE",GF_FIRE);
+ tolua_constant(tolua_S,NULL,"GF_UNBREATH",GF_UNBREATH);
+ tolua_constant(tolua_S,NULL,"GF_CORPSE_EXPL",GF_CORPSE_EXPL);
+ tolua_constant(tolua_S,NULL,"GF_MISSILE",GF_MISSILE);
+ tolua_constant(tolua_S,NULL,"GF_ARROW",GF_ARROW);
+ tolua_constant(tolua_S,NULL,"GF_PLASMA",GF_PLASMA);
+ tolua_constant(tolua_S,NULL,"GF_WAVE",GF_WAVE);
+ tolua_constant(tolua_S,NULL,"GF_WATER",GF_WATER);
+ tolua_constant(tolua_S,NULL,"GF_LITE",GF_LITE);
+ tolua_constant(tolua_S,NULL,"GF_DARK",GF_DARK);
+ tolua_constant(tolua_S,NULL,"GF_LITE_WEAK",GF_LITE_WEAK);
+ tolua_constant(tolua_S,NULL,"GF_DARK_WEAK",GF_DARK_WEAK);
+ tolua_constant(tolua_S,NULL,"GF_SHARDS",GF_SHARDS);
+ tolua_constant(tolua_S,NULL,"GF_SOUND",GF_SOUND);
+ tolua_constant(tolua_S,NULL,"GF_CONFUSION",GF_CONFUSION);
+ tolua_constant(tolua_S,NULL,"GF_FORCE",GF_FORCE);
+ tolua_constant(tolua_S,NULL,"GF_INERTIA",GF_INERTIA);
+ tolua_constant(tolua_S,NULL,"GF_MANA",GF_MANA);
+ tolua_constant(tolua_S,NULL,"GF_METEOR",GF_METEOR);
+ tolua_constant(tolua_S,NULL,"GF_ICE",GF_ICE);
+ tolua_constant(tolua_S,NULL,"GF_CHAOS",GF_CHAOS);
+ tolua_constant(tolua_S,NULL,"GF_NETHER",GF_NETHER);
+ tolua_constant(tolua_S,NULL,"GF_DISENCHANT",GF_DISENCHANT);
+ tolua_constant(tolua_S,NULL,"GF_NEXUS",GF_NEXUS);
+ tolua_constant(tolua_S,NULL,"GF_TIME",GF_TIME);
+ tolua_constant(tolua_S,NULL,"GF_GRAVITY",GF_GRAVITY);
+ tolua_constant(tolua_S,NULL,"GF_KILL_WALL",GF_KILL_WALL);
+ tolua_constant(tolua_S,NULL,"GF_KILL_DOOR",GF_KILL_DOOR);
+ tolua_constant(tolua_S,NULL,"GF_KILL_TRAP",GF_KILL_TRAP);
+ tolua_constant(tolua_S,NULL,"GF_MAKE_WALL",GF_MAKE_WALL);
+ tolua_constant(tolua_S,NULL,"GF_MAKE_DOOR",GF_MAKE_DOOR);
+ tolua_constant(tolua_S,NULL,"GF_MAKE_TRAP",GF_MAKE_TRAP);
+ tolua_constant(tolua_S,NULL,"GF_OLD_CLONE",GF_OLD_CLONE);
+ tolua_constant(tolua_S,NULL,"GF_OLD_POLY",GF_OLD_POLY);
+ tolua_constant(tolua_S,NULL,"GF_OLD_HEAL",GF_OLD_HEAL);
+ tolua_constant(tolua_S,NULL,"GF_OLD_SPEED",GF_OLD_SPEED);
+ tolua_constant(tolua_S,NULL,"GF_OLD_SLOW",GF_OLD_SLOW);
+ tolua_constant(tolua_S,NULL,"GF_OLD_CONF",GF_OLD_CONF);
+ tolua_constant(tolua_S,NULL,"GF_OLD_SLEEP",GF_OLD_SLEEP);
+ tolua_constant(tolua_S,NULL,"GF_OLD_DRAIN",GF_OLD_DRAIN);
+ tolua_constant(tolua_S,NULL,"GF_AWAY_UNDEAD",GF_AWAY_UNDEAD);
+ tolua_constant(tolua_S,NULL,"GF_AWAY_EVIL",GF_AWAY_EVIL);
+ tolua_constant(tolua_S,NULL,"GF_AWAY_ALL",GF_AWAY_ALL);
+ tolua_constant(tolua_S,NULL,"GF_TURN_UNDEAD",GF_TURN_UNDEAD);
+ tolua_constant(tolua_S,NULL,"GF_TURN_EVIL",GF_TURN_EVIL);
+ tolua_constant(tolua_S,NULL,"GF_TURN_ALL",GF_TURN_ALL);
+ tolua_constant(tolua_S,NULL,"GF_DISP_UNDEAD",GF_DISP_UNDEAD);
+ tolua_constant(tolua_S,NULL,"GF_DISP_EVIL",GF_DISP_EVIL);
+ tolua_constant(tolua_S,NULL,"GF_DISP_ALL",GF_DISP_ALL);
+ tolua_constant(tolua_S,NULL,"GF_DISP_DEMON",GF_DISP_DEMON);
+ tolua_constant(tolua_S,NULL,"GF_DISP_LIVING",GF_DISP_LIVING);
+ tolua_constant(tolua_S,NULL,"GF_ROCKET",GF_ROCKET);
+ tolua_constant(tolua_S,NULL,"GF_NUKE",GF_NUKE);
+ tolua_constant(tolua_S,NULL,"GF_MAKE_GLYPH",GF_MAKE_GLYPH);
+ tolua_constant(tolua_S,NULL,"GF_STASIS",GF_STASIS);
+ tolua_constant(tolua_S,NULL,"GF_STONE_WALL",GF_STONE_WALL);
+ tolua_constant(tolua_S,NULL,"GF_DEATH_RAY",GF_DEATH_RAY);
+ tolua_constant(tolua_S,NULL,"GF_STUN",GF_STUN);
+ tolua_constant(tolua_S,NULL,"GF_HOLY_FIRE",GF_HOLY_FIRE);
+ tolua_constant(tolua_S,NULL,"GF_HELL_FIRE",GF_HELL_FIRE);
+ tolua_constant(tolua_S,NULL,"GF_DISINTEGRATE",GF_DISINTEGRATE);
+ tolua_constant(tolua_S,NULL,"GF_CHARM",GF_CHARM);
+ tolua_constant(tolua_S,NULL,"GF_CONTROL_UNDEAD",GF_CONTROL_UNDEAD);
+ tolua_constant(tolua_S,NULL,"GF_CONTROL_ANIMAL",GF_CONTROL_ANIMAL);
+ tolua_constant(tolua_S,NULL,"GF_PSI",GF_PSI);
+ tolua_constant(tolua_S,NULL,"GF_PSI_DRAIN",GF_PSI_DRAIN);
+ tolua_constant(tolua_S,NULL,"GF_TELEKINESIS",GF_TELEKINESIS);
+ tolua_constant(tolua_S,NULL,"GF_JAM_DOOR",GF_JAM_DOOR);
+ tolua_constant(tolua_S,NULL,"GF_DOMINATION",GF_DOMINATION);
+ tolua_constant(tolua_S,NULL,"GF_DISP_GOOD",GF_DISP_GOOD);
+ tolua_constant(tolua_S,NULL,"GF_IDENTIFY",GF_IDENTIFY);
+ tolua_constant(tolua_S,NULL,"GF_RAISE",GF_RAISE);
+ tolua_constant(tolua_S,NULL,"GF_STAR_IDENTIFY",GF_STAR_IDENTIFY);
+ tolua_constant(tolua_S,NULL,"GF_DESTRUCTION",GF_DESTRUCTION);
+ tolua_constant(tolua_S,NULL,"GF_STUN_CONF",GF_STUN_CONF);
+ tolua_constant(tolua_S,NULL,"GF_STUN_DAM",GF_STUN_DAM);
+ tolua_constant(tolua_S,NULL,"GF_CONF_DAM",GF_CONF_DAM);
+ tolua_constant(tolua_S,NULL,"GF_STAR_CHARM",GF_STAR_CHARM);
+ tolua_constant(tolua_S,NULL,"GF_IMPLOSION",GF_IMPLOSION);
+ tolua_constant(tolua_S,NULL,"GF_LAVA_FLOW",GF_LAVA_FLOW);
+ tolua_constant(tolua_S,NULL,"GF_FEAR",GF_FEAR);
+ tolua_constant(tolua_S,NULL,"GF_BETWEEN_GATE",GF_BETWEEN_GATE);
+ tolua_constant(tolua_S,NULL,"GF_WINDS_MANA",GF_WINDS_MANA);
+ tolua_constant(tolua_S,NULL,"GF_DEATH",GF_DEATH);
+ tolua_constant(tolua_S,NULL,"GF_CONTROL_DEMON",GF_CONTROL_DEMON);
+ tolua_constant(tolua_S,NULL,"GF_RAISE_DEMON",GF_RAISE_DEMON);
+ tolua_constant(tolua_S,NULL,"GF_TRAP_DEMONSOUL",GF_TRAP_DEMONSOUL);
+ tolua_constant(tolua_S,NULL,"GF_ATTACK",GF_ATTACK);
+ tolua_constant(tolua_S,NULL,"GF_CHARM_UNMOVING",GF_CHARM_UNMOVING);
+ tolua_constant(tolua_S,NULL,"MAX_GF",MAX_GF);
+ tolua_constant(tolua_S,NULL,"PROJECT_JUMP",PROJECT_JUMP);
+ tolua_constant(tolua_S,NULL,"PROJECT_BEAM",PROJECT_BEAM);
+ tolua_constant(tolua_S,NULL,"PROJECT_THRU",PROJECT_THRU);
+ tolua_constant(tolua_S,NULL,"PROJECT_STOP",PROJECT_STOP);
+ tolua_constant(tolua_S,NULL,"PROJECT_GRID",PROJECT_GRID);
+ tolua_constant(tolua_S,NULL,"PROJECT_ITEM",PROJECT_ITEM);
+ tolua_constant(tolua_S,NULL,"PROJECT_KILL",PROJECT_KILL);
+ tolua_constant(tolua_S,NULL,"PROJECT_HIDE",PROJECT_HIDE);
+ tolua_constant(tolua_S,NULL,"PROJECT_VIEWABLE",PROJECT_VIEWABLE);
+ tolua_constant(tolua_S,NULL,"PROJECT_METEOR_SHOWER",PROJECT_METEOR_SHOWER);
+ tolua_constant(tolua_S,NULL,"PROJECT_BLAST",PROJECT_BLAST);
+ tolua_constant(tolua_S,NULL,"PROJECT_PANEL",PROJECT_PANEL);
+ tolua_constant(tolua_S,NULL,"PROJECT_ALL",PROJECT_ALL);
+ tolua_constant(tolua_S,NULL,"PROJECT_WALL",PROJECT_WALL);
+ tolua_constant(tolua_S,NULL,"PROJECT_MANA_PATH",PROJECT_MANA_PATH);
+ tolua_constant(tolua_S,NULL,"PROJECT_ABSORB_MANA",PROJECT_ABSORB_MANA);
+ tolua_constant(tolua_S,NULL,"PROJECT_STAY",PROJECT_STAY);
+ tolua_globalvar(tolua_S,"project_time",toluaI_get_spells_project_time,toluaI_set_spells_project_time);
+ tolua_function(tolua_S,NULL,"teleport_player_directed",toluaI_spells_teleport_player_directed00);
+ tolua_function(tolua_S,NULL,"teleport_away",toluaI_spells_teleport_away00);
+ tolua_function(tolua_S,NULL,"teleport_player",toluaI_spells_teleport_player00);
+ tolua_function(tolua_S,NULL,"teleport_player_to",toluaI_spells_teleport_player_to00);
+ tolua_function(tolua_S,NULL,"teleport_monster_to",toluaI_spells_teleport_monster_to00);
+ tolua_function(tolua_S,NULL,"teleport_monster",toluaI_spells_teleport_monster00);
+ tolua_function(tolua_S,NULL,"teleport_player_level",toluaI_spells_teleport_player_level00);
+ tolua_function(tolua_S,NULL,"fetch",toluaI_spells_fetch00);
+ tolua_function(tolua_S,NULL,"recall_player",toluaI_spells_recall_player00);
+ tolua_function(tolua_S,NULL,"take_hit",toluaI_spells_take_hit00);
+ tolua_function(tolua_S,NULL,"take_sanity_hit",toluaI_spells_take_sanity_hit00);
+ tolua_function(tolua_S,NULL,"project",toluaI_spells_project00);
+ tolua_function(tolua_S,NULL,"corrupt_player",toluaI_spells_corrupt_player00);
+ tolua_function(tolua_S,NULL,"grow_things",toluaI_spells_grow_things00);
+ tolua_function(tolua_S,NULL,"grow_grass",toluaI_spells_grow_grass00);
+ tolua_function(tolua_S,NULL,"grow_trees",toluaI_spells_grow_trees00);
+ tolua_function(tolua_S,NULL,"hp_player",toluaI_spells_hp_player00);
+ tolua_function(tolua_S,NULL,"heal_insanity",toluaI_spells_heal_insanity00);
+ tolua_function(tolua_S,NULL,"warding_glyph",toluaI_spells_warding_glyph00);
+ tolua_function(tolua_S,NULL,"explosive_rune",toluaI_spells_explosive_rune00);
+ tolua_function(tolua_S,NULL,"do_dec_stat",toluaI_spells_do_dec_stat00);
+ tolua_function(tolua_S,NULL,"do_res_stat",toluaI_spells_do_res_stat00);
+ tolua_function(tolua_S,NULL,"do_inc_stat",toluaI_spells_do_inc_stat00);
+ tolua_function(tolua_S,NULL,"identify_pack",toluaI_spells_identify_pack00);
+ tolua_function(tolua_S,NULL,"remove_curse",toluaI_spells_remove_curse00);
+ tolua_function(tolua_S,NULL,"remove_all_curse",toluaI_spells_remove_all_curse00);
+ tolua_function(tolua_S,NULL,"restore_level",toluaI_spells_restore_level00);
+ tolua_function(tolua_S,NULL,"self_knowledge",toluaI_spells_self_knowledge00);
+ tolua_function(tolua_S,NULL,"lose_all_info",toluaI_spells_lose_all_info00);
+ tolua_function(tolua_S,NULL,"detect_traps",toluaI_spells_detect_traps00);
+ tolua_function(tolua_S,NULL,"detect_doors",toluaI_spells_detect_doors00);
+ tolua_function(tolua_S,NULL,"detect_stairs",toluaI_spells_detect_stairs00);
+ tolua_function(tolua_S,NULL,"detect_treasure",toluaI_spells_detect_treasure00);
+ tolua_globalvar(tolua_S,"hack_no_detect_message",toluaI_get_spells_hack_no_detect_message,toluaI_set_spells_hack_no_detect_message);
+ tolua_function(tolua_S,NULL,"detect_objects_gold",toluaI_spells_detect_objects_gold00);
+ tolua_function(tolua_S,NULL,"detect_objects_normal",toluaI_spells_detect_objects_normal00);
+ tolua_function(tolua_S,NULL,"detect_objects_magic",toluaI_spells_detect_objects_magic00);
+ tolua_function(tolua_S,NULL,"detect_monsters_normal",toluaI_spells_detect_monsters_normal00);
+ tolua_function(tolua_S,NULL,"detect_monsters_invis",toluaI_spells_detect_monsters_invis00);
+ tolua_function(tolua_S,NULL,"detect_monsters_evil",toluaI_spells_detect_monsters_evil00);
+ tolua_function(tolua_S,NULL,"detect_monsters_good",toluaI_spells_detect_monsters_good00);
+ tolua_function(tolua_S,NULL,"detect_monsters_xxx",toluaI_spells_detect_monsters_xxx00);
+ tolua_function(tolua_S,NULL,"detect_monsters_string",toluaI_spells_detect_monsters_string00);
+ tolua_function(tolua_S,NULL,"detect_monsters_nonliving",toluaI_spells_detect_monsters_nonliving00);
+ tolua_function(tolua_S,NULL,"detect_all",toluaI_spells_detect_all00);
+ tolua_function(tolua_S,NULL,"stair_creation",toluaI_spells_stair_creation00);
+ tolua_function(tolua_S,NULL,"tgt_pt",toluaI_spells_tgt_pt00);
+ tolua_function(tolua_S,NULL,"wall_stone",toluaI_spells_wall_stone00);
+ tolua_function(tolua_S,NULL,"create_artifact",toluaI_spells_create_artifact00);
+ tolua_function(tolua_S,NULL,"wall_to_mud",toluaI_spells_wall_to_mud00);
+ tolua_function(tolua_S,NULL,"ident_spell",toluaI_spells_ident_spell00);
+ tolua_function(tolua_S,NULL,"identify_fully",toluaI_spells_identify_fully00);
+ tolua_function(tolua_S,NULL,"recharge",toluaI_spells_recharge00);
+ tolua_function(tolua_S,NULL,"aggravate_monsters",toluaI_spells_aggravate_monsters00);
+ tolua_function(tolua_S,NULL,"genocide_aux",toluaI_spells_genocide_aux00);
+ tolua_function(tolua_S,NULL,"genocide",toluaI_spells_genocide00);
+ tolua_function(tolua_S,NULL,"mass_genocide",toluaI_spells_mass_genocide00);
+ tolua_function(tolua_S,NULL,"probing",toluaI_spells_probing00);
+ tolua_function(tolua_S,NULL,"banish_evil",toluaI_spells_banish_evil00);
+ tolua_function(tolua_S,NULL,"dispel_evil",toluaI_spells_dispel_evil00);
+ tolua_function(tolua_S,NULL,"dispel_good",toluaI_spells_dispel_good00);
+ tolua_function(tolua_S,NULL,"dispel_undead",toluaI_spells_dispel_undead00);
+ tolua_function(tolua_S,NULL,"dispel_monsters",toluaI_spells_dispel_monsters00);
+ tolua_function(tolua_S,NULL,"dispel_living",toluaI_spells_dispel_living00);
+ tolua_function(tolua_S,NULL,"dispel_demons",toluaI_spells_dispel_demons00);
+ tolua_function(tolua_S,NULL,"turn_undead",toluaI_spells_turn_undead00);
+ tolua_function(tolua_S,NULL,"door_creation",toluaI_spells_door_creation00);
+ tolua_function(tolua_S,NULL,"trap_creation",toluaI_spells_trap_creation00);
+ tolua_function(tolua_S,NULL,"glyph_creation",toluaI_spells_glyph_creation00);
+ tolua_function(tolua_S,NULL,"wipe",toluaI_spells_wipe00);
+ tolua_function(tolua_S,NULL,"destroy_area",toluaI_spells_destroy_area00);
+ tolua_function(tolua_S,NULL,"earthquake",toluaI_spells_earthquake00);
+ tolua_function(tolua_S,NULL,"lite_room",toluaI_spells_lite_room00);
+ tolua_function(tolua_S,NULL,"unlite_room",toluaI_spells_unlite_room00);
+ tolua_function(tolua_S,NULL,"lite_area",toluaI_spells_lite_area00);
+ tolua_function(tolua_S,NULL,"unlite_area",toluaI_spells_unlite_area00);
+ tolua_function(tolua_S,NULL,"fire_ball_beam",toluaI_spells_fire_ball_beam00);
+ tolua_function(tolua_S,NULL,"make_wish",toluaI_spells_make_wish00);
+ tolua_function(tolua_S,NULL,"fire_wave",toluaI_spells_fire_wave00);
+ tolua_constant(tolua_S,NULL,"EFF_WAVE",EFF_WAVE);
+ tolua_constant(tolua_S,NULL,"EFF_LAST",EFF_LAST);
+ tolua_constant(tolua_S,NULL,"EFF_STORM",EFF_STORM);
+ tolua_constant(tolua_S,NULL,"EFF_DIR1",EFF_DIR1);
+ tolua_constant(tolua_S,NULL,"EFF_DIR2",EFF_DIR2);
+ tolua_constant(tolua_S,NULL,"EFF_DIR3",EFF_DIR3);
+ tolua_constant(tolua_S,NULL,"EFF_DIR4",EFF_DIR4);
+ tolua_constant(tolua_S,NULL,"EFF_DIR6",EFF_DIR6);
+ tolua_constant(tolua_S,NULL,"EFF_DIR7",EFF_DIR7);
+ tolua_constant(tolua_S,NULL,"EFF_DIR8",EFF_DIR8);
+ tolua_constant(tolua_S,NULL,"EFF_DIR9",EFF_DIR9);
+ tolua_function(tolua_S,NULL,"fire_cloud",toluaI_spells_fire_cloud00);
+ tolua_function(tolua_S,NULL,"fire_wall",toluaI_spells_fire_wall00);
+ tolua_function(tolua_S,NULL,"fire_ball",toluaI_spells_fire_ball00);
+ tolua_function(tolua_S,NULL,"fire_bolt",toluaI_spells_fire_bolt00);
+ tolua_function(tolua_S,NULL,"fire_beam",toluaI_spells_fire_beam00);
+ tolua_function(tolua_S,NULL,"fire_druid_ball",toluaI_spells_fire_druid_ball00);
+ tolua_function(tolua_S,NULL,"fire_druid_bolt",toluaI_spells_fire_druid_bolt00);
+ tolua_function(tolua_S,NULL,"fire_druid_beam",toluaI_spells_fire_druid_beam00);
+ tolua_function(tolua_S,NULL,"fire_bolt_or_beam",toluaI_spells_fire_bolt_or_beam00);
+ tolua_function(tolua_S,NULL,"alchemy",toluaI_spells_alchemy00);
+ tolua_function(tolua_S,NULL,"alter_reality",toluaI_spells_alter_reality00);
+ tolua_function(tolua_S,NULL,"swap_position",toluaI_spells_swap_position00);
+ tolua_function(tolua_S,NULL,"teleport_swap",toluaI_spells_teleport_swap00);
+ tolua_function(tolua_S,NULL,"project_meteor",toluaI_spells_project_meteor00);
+ tolua_function(tolua_S,NULL,"passwall",toluaI_spells_passwall00);
+ tolua_function(tolua_S,NULL,"project_hook",toluaI_spells_project_hook00);
+ tolua_function(tolua_S,NULL,"wizard_lock",toluaI_spells_wizard_lock00);
+ tolua_function(tolua_S,NULL,"reset_recall",toluaI_spells_reset_recall00);
+ tolua_function(tolua_S,NULL,"get_aim_dir",toluaI_spells_get_aim_dir00);
+ tolua_function(tolua_S,NULL,"get_rep_dir",toluaI_spells_get_rep_dir00);
+ tolua_function(tolua_S,NULL,"project_los",toluaI_spells_project_los00);
+ tolua_function(tolua_S,NULL,"map_area",toluaI_spells_map_area00);
+ tolua_function(tolua_S,NULL,"wiz_lite",toluaI_spells_wiz_lite00);
+ tolua_function(tolua_S,NULL,"wiz_lite_extra",toluaI_spells_wiz_lite_extra00);
+ tolua_function(tolua_S,NULL,"wiz_dark",toluaI_spells_wiz_dark00);
+ tolua_function(tolua_S,NULL,"create_between_gate",toluaI_spells_create_between_gate00);
+ tolua_function(tolua_S,NULL,"destroy_doors_touch",toluaI_spells_destroy_doors_touch00);
+ tolua_function(tolua_S,NULL,"destroy_traps_touch",toluaI_spells_destroy_traps_touch00);
+ tolua_cclass(tolua_S,"magic_power","");
+ tolua_tablevar(tolua_S,"magic_power","min_lev",toluaI_get_spells_magic_power_min_lev,toluaI_set_spells_magic_power_min_lev);
+ tolua_tablevar(tolua_S,"magic_power","mana_cost",toluaI_get_spells_magic_power_mana_cost,toluaI_set_spells_magic_power_mana_cost);
+ tolua_tablevar(tolua_S,"magic_power","fail",toluaI_get_spells_magic_power_fail,toluaI_set_spells_magic_power_fail);
+ tolua_tablevar(tolua_S,"magic_power","name",toluaI_get_spells_magic_power_name,toluaI_set_spells_magic_power_name);
+ tolua_tablevar(tolua_S,"magic_power","desc",toluaI_get_spells_magic_power_desc,toluaI_set_spells_magic_power_desc);
+ tolua_function(tolua_S,NULL,"new_magic_power",toluaI_spells_new_magic_power00);
+ tolua_function(tolua_S,NULL,"get_magic_power",toluaI_spells_get_magic_power00);
+ tolua_function(tolua_S,NULL,"select_magic_power",toluaI_spells_select_magic_power00);
+ tolua_function(tolua_S,NULL,"magic_power_sucess",toluaI_spells_magic_power_sucess00);
+ tolua_function(tolua_S,NULL,"add_new_power",toluaI_spells_add_new_power00);
+ tolua_globalvar(tolua_S,"power_max",toluaI_get_spells_power_max,toluaI_set_spells_power_max);
+ tolua_cclass(tolua_S,"spell_type","school_spell_type");
+ tolua_tablevar(tolua_S,"spell_type","name",toluaI_get_spells_spell_type_name,toluaI_set_spells_spell_type_name);
+ tolua_tablevar(tolua_S,"spell_type","skill_level",toluaI_get_spells_spell_type_skill_level,toluaI_set_spells_spell_type_skill_level);
+ tolua_tablevar(tolua_S,"spell_type","mana",toluaI_get_spells_spell_type_mana,toluaI_set_spells_spell_type_mana);
+ tolua_tablevar(tolua_S,"spell_type","mana_max",toluaI_get_spells_spell_type_mana_max,toluaI_set_spells_spell_type_mana_max);
+ tolua_tablevar(tolua_S,"spell_type","fail",toluaI_get_spells_spell_type_fail,toluaI_set_spells_spell_type_fail);
+ tolua_tablevar(tolua_S,"spell_type","level",toluaI_get_spells_spell_type_level,toluaI_set_spells_spell_type_level);
+ tolua_cclass(tolua_S,"school_type","");
+ tolua_tablevar(tolua_S,"school_type","name",toluaI_get_spells_school_type_name,toluaI_set_spells_school_type_name);
+ tolua_tablevar(tolua_S,"school_type","skill",toluaI_get_spells_school_type_skill,toluaI_set_spells_school_type_skill);
+ tolua_function(tolua_S,NULL,"new_school",toluaI_spells_new_school00);
+ tolua_function(tolua_S,NULL,"new_spell",toluaI_spells_new_spell00);
+ tolua_function(tolua_S,NULL,"spell",toluaI_spells_spell00);
+ tolua_function(tolua_S,NULL,"school",toluaI_spells_school00);
+ tolua_function(tolua_S,NULL,"lua_get_level",toluaI_spells_lua_get_level00);
+ tolua_function(tolua_S,NULL,"lua_spell_chance",toluaI_spells_lua_spell_chance00);
+ tolua_function(tolua_S,NULL,"lua_spell_device_chance",toluaI_spells_lua_spell_device_chance00);
+ tolua_function(tolua_S,NULL,"get_school_spell",toluaI_spells_get_school_spell00);
+ tolua_globalvar(tolua_S,"last_teleportation_y",toluaI_get_spells_last_teleportation_y,toluaI_set_spells_last_teleportation_y);
+ tolua_globalvar(tolua_S,"last_teleportation_x",toluaI_get_spells_last_teleportation_x,toluaI_set_spells_last_teleportation_x);
+ tolua_function(tolua_S,NULL,"get_pos_player",toluaI_spells_get_pos_player00);
+ return 1;
+}
+/* Close function */
+void tolua_spells_close (lua_State* tolua_S)
+{
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"DEFAULT_RADIUS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_ELEC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_POIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_ACID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_COLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_UNBREATH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_CORPSE_EXPL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_MISSILE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_ARROW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_PLASMA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_WAVE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_WATER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_LITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_DARK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_LITE_WEAK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_DARK_WEAK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_SHARDS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_SOUND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_CONFUSION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_FORCE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_INERTIA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_MANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_METEOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_ICE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_CHAOS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_NETHER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_DISENCHANT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_NEXUS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_TIME");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_GRAVITY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_KILL_WALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_KILL_DOOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_KILL_TRAP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_MAKE_WALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_MAKE_DOOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_MAKE_TRAP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_OLD_CLONE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_OLD_POLY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_OLD_HEAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_OLD_SPEED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_OLD_SLOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_OLD_CONF");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_OLD_SLEEP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_OLD_DRAIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_AWAY_UNDEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_AWAY_EVIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_AWAY_ALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_TURN_UNDEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_TURN_EVIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_TURN_ALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_DISP_UNDEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_DISP_EVIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_DISP_ALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_DISP_DEMON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_DISP_LIVING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_ROCKET");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_NUKE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_MAKE_GLYPH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_STASIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_STONE_WALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_DEATH_RAY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_STUN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_HOLY_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_HELL_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_DISINTEGRATE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_CHARM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_CONTROL_UNDEAD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_CONTROL_ANIMAL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_PSI");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_PSI_DRAIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_TELEKINESIS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_JAM_DOOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_DOMINATION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_DISP_GOOD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_IDENTIFY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_RAISE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_STAR_IDENTIFY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_DESTRUCTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_STUN_CONF");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_STUN_DAM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_CONF_DAM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_STAR_CHARM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_IMPLOSION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_LAVA_FLOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_FEAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_BETWEEN_GATE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_WINDS_MANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_DEATH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_CONTROL_DEMON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_RAISE_DEMON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_TRAP_DEMONSOUL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_ATTACK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"GF_CHARM_UNMOVING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"MAX_GF");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_JUMP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_BEAM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_THRU");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_STOP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_GRID");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_ITEM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_KILL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_HIDE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_VIEWABLE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_METEOR_SHOWER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_BLAST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_PANEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_ALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_WALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_MANA_PATH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_ABSORB_MANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"PROJECT_STAY");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"project_time"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"teleport_player_directed");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"teleport_away");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"teleport_player");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"teleport_player_to");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"teleport_monster_to");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"teleport_monster");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"teleport_player_level");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"fetch");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"recall_player");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"take_hit");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"take_sanity_hit");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"project");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"corrupt_player");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"grow_things");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"grow_grass");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"grow_trees");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"hp_player");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"heal_insanity");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"warding_glyph");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"explosive_rune");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"do_dec_stat");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"do_res_stat");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"do_inc_stat");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"identify_pack");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"remove_curse");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"remove_all_curse");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"restore_level");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"self_knowledge");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"lose_all_info");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"detect_traps");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"detect_doors");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"detect_stairs");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"detect_treasure");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"hack_no_detect_message"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"detect_objects_gold");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"detect_objects_normal");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"detect_objects_magic");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"detect_monsters_normal");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"detect_monsters_invis");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"detect_monsters_evil");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"detect_monsters_good");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"detect_monsters_xxx");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"detect_monsters_string");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"detect_monsters_nonliving");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"detect_all");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"stair_creation");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"tgt_pt");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"wall_stone");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"create_artifact");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"wall_to_mud");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ident_spell");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"identify_fully");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"recharge");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"aggravate_monsters");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"genocide_aux");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"genocide");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"mass_genocide");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"probing");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"banish_evil");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"dispel_evil");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"dispel_good");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"dispel_undead");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"dispel_monsters");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"dispel_living");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"dispel_demons");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"turn_undead");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"door_creation");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"trap_creation");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"glyph_creation");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"wipe");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"destroy_area");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"earthquake");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"lite_room");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"unlite_room");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"lite_area");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"unlite_area");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"fire_ball_beam");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"make_wish");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"fire_wave");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"EFF_WAVE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"EFF_LAST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"EFF_STORM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"EFF_DIR1");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"EFF_DIR2");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"EFF_DIR3");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"EFF_DIR4");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"EFF_DIR6");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"EFF_DIR7");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"EFF_DIR8");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"EFF_DIR9");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"fire_cloud");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"fire_wall");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"fire_ball");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"fire_bolt");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"fire_beam");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"fire_druid_ball");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"fire_druid_bolt");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"fire_druid_beam");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"fire_bolt_or_beam");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"alchemy");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"alter_reality");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"swap_position");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"teleport_swap");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"project_meteor");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"passwall");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"project_hook");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"wizard_lock");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"reset_recall");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_aim_dir");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_rep_dir");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"project_los");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"map_area");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"wiz_lite");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"wiz_lite_extra");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"wiz_dark");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"create_between_gate");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"destroy_doors_touch");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"destroy_traps_touch");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"magic_power");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"new_magic_power");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_magic_power");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"select_magic_power");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"magic_power_sucess");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"add_new_power");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"power_max"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"spell_type");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"school_type");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"new_school");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"new_spell");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"spell");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"school");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"lua_get_level");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"lua_spell_chance");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"lua_spell_device_chance");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_school_spell");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"last_teleportation_y"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"last_teleportation_x"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_pos_player");
+}
diff -Nru --strip-trailing-cr tome-2.5.3/src/w_util.c tome-2.5.3-lua.files/src/w_util.c
--- tome-2.5.3/src/w_util.c	1969-12-31 16:00:00.000000000 -0800
+++ tome-2.5.3-lua.files/src/w_util.c	2010-09-26 07:36:38.000000000 -0700
@@ -0,0 +1,4165 @@
+/*
+** Lua binding: util
+** Generated automatically by tolua 4.0a - angband on Sun Sep 26 07:36:38 2010.
+*/
+
+#include "lua/tolua.h"
+
+/* Exported function */
+int tolua_util_open (lua_State* tolua_S);
+void tolua_util_close (lua_State* tolua_S);
+
+#include "angband.h"
+#include "plots.h"
+static char *path_build_lua(cptr path, cptr file){static char buf[1025]; path_build(buf, 1024, path, file); return buf;}
+static bool lua_cave_is(cave_type *c_ptr, s32b flag) { return (f_info[c_ptr->feat].flags1 & flag) ? TRUE : FALSE; }
+static const char *player_name_lua(void){return (const char *)player_name;}
+
+/* function to register type */
+static void toluaI_reg_types (lua_State* tolua_S)
+{
+ tolua_usertype(tolua_S,"list_type");
+ tolua_usertype(tolua_S,"timer_type");
+ tolua_usertype(tolua_S,"cave_type");
+}
+
+/* error messages */
+#define TOLUA_ERR_SELF tolua_error(tolua_S,"invalid 'self'")
+#define TOLUA_ERR_ASSIGN tolua_error(tolua_S,"#vinvalid type in variable assignment.")
+
+/* get function: turn */
+static int toluaI_get_util_turn(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)turn);
+ return 1;
+}
+
+/* set function: turn */
+static int toluaI_set_util_turn(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  turn = ((s32b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: old_turn */
+static int toluaI_get_util_old_turn(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)old_turn);
+ return 1;
+}
+
+/* set function: old_turn */
+static int toluaI_set_util_old_turn(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  old_turn = ((s32b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: cur_wid */
+static int toluaI_get_util_cur_wid(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)cur_wid);
+ return 1;
+}
+
+/* set function: cur_wid */
+static int toluaI_set_util_cur_wid(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  cur_wid = ((s16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: cur_hgt */
+static int toluaI_get_util_cur_hgt(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)cur_hgt);
+ return 1;
+}
+
+/* set function: cur_hgt */
+static int toluaI_set_util_cur_hgt(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  cur_hgt = ((s16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* function: disturb */
+static int toluaI_util_disturb00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int stop_search = ((int)  tolua_getnumber(tolua_S,1,0));
+  int flush_output = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  disturb(stop_search,flush_output);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'disturb'.");
+ return 0;
+}
+
+/* function: bst */
+static int toluaI_util_bst00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s32b what = ((s32b)  tolua_getnumber(tolua_S,1,0));
+  s32b t = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ {
+  s32b toluaI_ret = (s32b)  bst(what,t);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'bst'.");
+ return 0;
+}
+
+/* function: path_build_lua */
+static int toluaI_util_path_build00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr path = ((cptr)  tolua_getstring(tolua_S,1,0));
+  cptr file = ((cptr)  tolua_getstring(tolua_S,2,0));
+ {
+  char* toluaI_ret = (char*)  path_build_lua(path,file);
+ tolua_pushstring(tolua_S,(const char*)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'path_build'.");
+ return 0;
+}
+
+/* function: move_cursor */
+static int toluaI_util_move_cursor00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int row = ((int)  tolua_getnumber(tolua_S,1,0));
+  int col = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  move_cursor(row,col);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'move_cursor'.");
+ return 0;
+}
+
+/* function: flush */
+static int toluaI_util_flush00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  flush();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'flush'.");
+ return 0;
+}
+
+/* get function: inkey_scan */
+static int toluaI_get_util_inkey_scan(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)inkey_scan);
+ return 1;
+}
+
+/* set function: inkey_scan */
+static int toluaI_set_util_inkey_scan(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  inkey_scan = ((bool)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* function: inkey */
+static int toluaI_util_inkey00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  char toluaI_ret = (char)  inkey();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'inkey'.");
+ return 0;
+}
+
+/* function: cmsg_print */
+static int toluaI_util_cmsg_print00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  byte color = ((byte)  tolua_getnumber(tolua_S,1,0));
+  cptr msg = ((cptr)  tolua_getstring(tolua_S,2,0));
+ {
+  cmsg_print(color,msg);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'cmsg_print'.");
+ return 0;
+}
+
+/* function: msg_print */
+static int toluaI_util_msg_print00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr msg = ((cptr)  tolua_getstring(tolua_S,1,0));
+ {
+  msg_print(msg);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'msg_print'.");
+ return 0;
+}
+
+/* function: screen_save */
+static int toluaI_util_screen_save00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  screen_save();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'screen_save'.");
+ return 0;
+}
+
+/* function: screen_load */
+static int toluaI_util_screen_load00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  screen_load();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'screen_load'.");
+ return 0;
+}
+
+/* function: Term_save */
+static int toluaI_util_Term_save00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  errr toluaI_ret = (errr)  Term_save();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'Term_save'.");
+ return 0;
+}
+
+/* function: Term_load */
+static int toluaI_util_Term_load00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  errr toluaI_ret = (errr)  Term_load();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'Term_load'.");
+ return 0;
+}
+
+/* function: c_put_str */
+static int toluaI_util_c_put_str00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  byte attr = ((byte)  tolua_getnumber(tolua_S,1,0));
+  cptr str = ((cptr)  tolua_getstring(tolua_S,2,0));
+  int row = ((int)  tolua_getnumber(tolua_S,3,0));
+  int col = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  c_put_str(attr,str,row,col);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'c_put_str'.");
+ return 0;
+}
+
+/* function: c_prt */
+static int toluaI_util_c_prt00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  byte attr = ((byte)  tolua_getnumber(tolua_S,1,0));
+  cptr str = ((cptr)  tolua_getstring(tolua_S,2,0));
+  int row = ((int)  tolua_getnumber(tolua_S,3,0));
+  int col = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  c_prt(attr,str,row,col);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'c_prt'.");
+ return 0;
+}
+
+/* function: prt */
+static int toluaI_util_prt00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr str = ((cptr)  tolua_getstring(tolua_S,1,0));
+  int row = ((int)  tolua_getnumber(tolua_S,2,0));
+  int col = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  prt(str,row,col);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'prt'.");
+ return 0;
+}
+
+/* function: message_add */
+static int toluaI_util_message_add00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  byte type = ((byte)  tolua_getnumber(tolua_S,1,0));
+  cptr msg = ((cptr)  tolua_getstring(tolua_S,2,0));
+  byte color = ((byte)  tolua_getnumber(tolua_S,3,0));
+ {
+  message_add(type,msg,color);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'message_add'.");
+ return 0;
+}
+
+/* function: display_message */
+static int toluaI_util_display_message00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,6)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int x = ((int)  tolua_getnumber(tolua_S,1,0));
+  int y = ((int)  tolua_getnumber(tolua_S,2,0));
+  int split = ((int)  tolua_getnumber(tolua_S,3,0));
+  byte color = ((byte)  tolua_getnumber(tolua_S,4,0));
+  cptr t = ((cptr)  tolua_getstring(tolua_S,5,0));
+ {
+  display_message(x,y,split,color,t);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'display_message'.");
+ return 0;
+}
+
+/* function: clear_from */
+static int toluaI_util_clear_from00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int row = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  clear_from(row);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'clear_from'.");
+ return 0;
+}
+
+/* function: askfor_aux */
+static int toluaI_util_askfor_aux00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  char* buf = ((char*)  tolua_getstring(tolua_S,1,0));
+  int len = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  askfor_aux(buf,len);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'askfor_aux'.");
+ return 0;
+}
+
+/* function: get_string */
+static int toluaI_util_get_string00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr prompt = ((cptr)  tolua_getstring(tolua_S,1,0));
+  char* buf = ((char*)  tolua_getstring(tolua_S,2,0));
+  int len = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  bool toluaI_ret = (bool)  get_string(prompt,buf,len);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_string'.");
+ return 0;
+}
+
+/* function: get_check */
+static int toluaI_util_get_check00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr prompt = ((cptr)  tolua_getstring(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  get_check(prompt);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_check'.");
+ return 0;
+}
+
+/* function: get_com_lua */
+static int toluaI_util_get_com00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,1) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr promtp = ((cptr)  tolua_getstring(tolua_S,1,0));
+  int com = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  get_com_lua(promtp,&com);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ tolua_pushnumber(tolua_S,(long)com);
+ }
+ }
+ return 2;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_com'.");
+ return 0;
+}
+
+/* function: get_quantity */
+static int toluaI_util_get_quantity00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr prompt = ((cptr)  tolua_getstring(tolua_S,1,0));
+  s32b max = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ {
+  s32b toluaI_ret = (s32b)  get_quantity(prompt,max);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_quantity'.");
+ return 0;
+}
+
+/* function: test_monster_name */
+static int toluaI_util_test_monster_name00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr name = ((cptr)  tolua_getstring(tolua_S,1,0));
+ {
+  int toluaI_ret = (int)  test_monster_name(name);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'test_monster_name'.");
+ return 0;
+}
+
+/* function: test_item_name */
+static int toluaI_util_test_item_name00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr name = ((cptr)  tolua_getstring(tolua_S,1,0));
+ {
+  int toluaI_ret = (int)  test_item_name(name);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'test_item_name'.");
+ return 0;
+}
+
+/* function: luck */
+static int toluaI_util_luck00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int min = ((int)  tolua_getnumber(tolua_S,1,0));
+  int max = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  int toluaI_ret = (int)  luck(min,max);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'luck'.");
+ return 0;
+}
+
+/* function: get_player_race_name */
+static int toluaI_util_get_player_race_name00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int pr = ((int)  tolua_getnumber(tolua_S,1,0));
+  int ps = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  cptr toluaI_ret = (cptr)  get_player_race_name(pr,ps);
+ tolua_pushstring(tolua_S,(const char*)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_player_race_name'.");
+ return 0;
+}
+
+/* function: quit */
+static int toluaI_util_quit00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr str = ((cptr)  tolua_getstring(tolua_S,1,0));
+ {
+  quit(str);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'quit'.");
+ return 0;
+}
+
+/* function: value_scale */
+static int toluaI_util_value_scale00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int value = ((int)  tolua_getnumber(tolua_S,1,0));
+  int vmax = ((int)  tolua_getnumber(tolua_S,2,0));
+  int max = ((int)  tolua_getnumber(tolua_S,3,0));
+  int min = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  s32b toluaI_ret = (s32b)  value_scale(value,vmax,max,min);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'value_scale'.");
+ return 0;
+}
+
+/* function: text_out_c */
+static int toluaI_util_text_out_c00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  byte a = ((byte)  tolua_getnumber(tolua_S,1,0));
+  cptr str = ((cptr)  tolua_getstring(tolua_S,2,0));
+ {
+  text_out_c(a,str);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'text_out_c'.");
+ return 0;
+}
+
+/* function: text_out */
+static int toluaI_util_text_out00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr str = ((cptr)  tolua_getstring(tolua_S,1,0));
+ {
+  text_out(str);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'text_out'.");
+ return 0;
+}
+
+/* function: change_option */
+static int toluaI_util_change_option00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr name = ((cptr)  tolua_getstring(tolua_S,1,0));
+  bool value = ((bool)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  change_option(name,value);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'change_option'.");
+ return 0;
+}
+
+/* get function: process_hooks_restart */
+static int toluaI_get_util_process_hooks_restart(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)process_hooks_restart);
+ return 1;
+}
+
+/* set function: process_hooks_restart */
+static int toluaI_set_util_process_hooks_restart(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  process_hooks_restart = ((int)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* function: dump_hooks */
+static int toluaI_util_dump_hooks00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int h_idx = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  dump_hooks(h_idx);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'dump_hooks'.");
+ return 0;
+}
+
+/* function: add_hook_script */
+static int toluaI_util_add_hook_script00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,3,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int h_idx = ((int)  tolua_getnumber(tolua_S,1,0));
+  char* script = ((char*)  tolua_getstring(tolua_S,2,0));
+  cptr name = ((cptr)  tolua_getstring(tolua_S,3,0));
+ {
+  add_hook_script(h_idx,script,name);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'add_hook_script'.");
+ return 0;
+}
+
+/* function: del_hook_name */
+static int toluaI_util_del_hook_name00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int h_idx = ((int)  tolua_getnumber(tolua_S,1,0));
+  cptr name = ((cptr)  tolua_getstring(tolua_S,2,0));
+ {
+  del_hook_name(h_idx,name);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'del_hook_name'.");
+ return 0;
+}
+
+/* function: tome_dofile */
+static int toluaI_util_tome_dofile00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  char* file = ((char*)  tolua_getstring(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  tome_dofile(file);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'tome_dofile'.");
+ return 0;
+}
+
+/* function: tome_dofile_anywhere */
+static int toluaI_util_tome_dofile_anywhere00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,1) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr dir = ((cptr)  tolua_getstring(tolua_S,1,0));
+  char* file = ((char*)  tolua_getstring(tolua_S,2,0));
+  bool test_exist = ((bool)  tolua_getnumber(tolua_S,3,TRUE));
+ {
+  bool toluaI_ret = (bool)  tome_dofile_anywhere(dir,file,test_exist);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'tome_dofile_anywhere'.");
+ return 0;
+}
+
+/* function: exec_lua */
+static int toluaI_util_exec_lua00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  char* file = ((char*)  tolua_getstring(tolua_S,1,0));
+ {
+  int toluaI_ret = (int)  exec_lua(file);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'exec_lua'.");
+ return 0;
+}
+
+/* function: dump_lua_stack */
+static int toluaI_util_dump_lua_stack00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int min = ((int)  tolua_getnumber(tolua_S,1,0));
+  int max = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  dump_lua_stack(min,max);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'dump_lua_stack'.");
+ return 0;
+}
+
+/* function: string_exec_lua */
+static int toluaI_util_string_exec_lua00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  char* file = ((char*)  tolua_getstring(tolua_S,1,0));
+ {
+  cptr toluaI_ret = (cptr)  string_exec_lua(file);
+ tolua_pushstring(tolua_S,(const char*)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'string_exec_lua'.");
+ return 0;
+}
+
+/* function: lua_print_hook */
+static int toluaI_util_print_hook00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr str = ((cptr)  tolua_getstring(tolua_S,1,0));
+ {
+  lua_print_hook(str);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'print_hook'.");
+ return 0;
+}
+
+/* function: register_savefile */
+static int toluaI_util_register_savefile00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int num = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  register_savefile(num);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'register_savefile'.");
+ return 0;
+}
+
+/* function: save_number_key */
+static int toluaI_util_save_number_key00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  char* key = ((char*)  tolua_getstring(tolua_S,1,0));
+  s32b val = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ {
+  save_number_key(key,val);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'save_number_key'.");
+ return 0;
+}
+
+/* get function: adj_mag_study */
+static int toluaI_get_util_adj_mag_study(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_mag_study[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_mag_study */
+static int toluaI_set_util_adj_mag_study(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_mag_study[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_mag_mana */
+static int toluaI_get_util_adj_mag_mana(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_mag_mana[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_mag_mana */
+static int toluaI_set_util_adj_mag_mana(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_mag_mana[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_mag_fail */
+static int toluaI_get_util_adj_mag_fail(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_mag_fail[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_mag_fail */
+static int toluaI_set_util_adj_mag_fail(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_mag_fail[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_mag_stat */
+static int toluaI_get_util_adj_mag_stat(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_mag_stat[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_mag_stat */
+static int toluaI_set_util_adj_mag_stat(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_mag_stat[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_chr_gold */
+static int toluaI_get_util_adj_chr_gold(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_chr_gold[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_chr_gold */
+static int toluaI_set_util_adj_chr_gold(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_chr_gold[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_int_dev */
+static int toluaI_get_util_adj_int_dev(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_int_dev[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_int_dev */
+static int toluaI_set_util_adj_int_dev(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_int_dev[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_wis_sav */
+static int toluaI_get_util_adj_wis_sav(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_wis_sav[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_wis_sav */
+static int toluaI_set_util_adj_wis_sav(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_wis_sav[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_dex_dis */
+static int toluaI_get_util_adj_dex_dis(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_dex_dis[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_dex_dis */
+static int toluaI_set_util_adj_dex_dis(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_dex_dis[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_int_dis */
+static int toluaI_get_util_adj_int_dis(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_int_dis[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_int_dis */
+static int toluaI_set_util_adj_int_dis(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_int_dis[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_dex_ta */
+static int toluaI_get_util_adj_dex_ta(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_dex_ta[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_dex_ta */
+static int toluaI_set_util_adj_dex_ta(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_dex_ta[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_str_td */
+static int toluaI_get_util_adj_str_td(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_str_td[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_str_td */
+static int toluaI_set_util_adj_str_td(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_str_td[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_dex_th */
+static int toluaI_get_util_adj_dex_th(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_dex_th[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_dex_th */
+static int toluaI_set_util_adj_dex_th(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_dex_th[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_str_th */
+static int toluaI_get_util_adj_str_th(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_str_th[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_str_th */
+static int toluaI_set_util_adj_str_th(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_str_th[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_str_wgt */
+static int toluaI_get_util_adj_str_wgt(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_str_wgt[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_str_wgt */
+static int toluaI_set_util_adj_str_wgt(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_str_wgt[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_str_hold */
+static int toluaI_get_util_adj_str_hold(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_str_hold[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_str_hold */
+static int toluaI_set_util_adj_str_hold(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_str_hold[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_str_dig */
+static int toluaI_get_util_adj_str_dig(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_str_dig[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_str_dig */
+static int toluaI_set_util_adj_str_dig(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_str_dig[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_str_blow */
+static int toluaI_get_util_adj_str_blow(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_str_blow[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_str_blow */
+static int toluaI_set_util_adj_str_blow(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_str_blow[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_dex_blow */
+static int toluaI_get_util_adj_dex_blow(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_dex_blow[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_dex_blow */
+static int toluaI_set_util_adj_dex_blow(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_dex_blow[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_dex_safe */
+static int toluaI_get_util_adj_dex_safe(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_dex_safe[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_dex_safe */
+static int toluaI_set_util_adj_dex_safe(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_dex_safe[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_con_fix */
+static int toluaI_get_util_adj_con_fix(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_con_fix[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_con_fix */
+static int toluaI_set_util_adj_con_fix(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_con_fix[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: adj_con_mhp */
+static int toluaI_get_util_adj_con_mhp(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)adj_con_mhp[toluaI_index]);
+ return 1;
+}
+
+/* set function: adj_con_mhp */
+static int toluaI_set_util_adj_con_mhp(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=100)
+ tolua_error(tolua_S,"array indexing out of range.");
+  adj_con_mhp[toluaI_index] = ((byte)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* function: repeat_push */
+static int toluaI_util_repeat_push00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int what = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  repeat_push(what);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'repeat_push'.");
+ return 0;
+}
+
+/* function: repeat_pull */
+static int toluaI_util_repeat_pull00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,1) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int what = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  repeat_pull(&what);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ tolua_pushnumber(tolua_S,(long)what);
+ }
+ }
+ return 2;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'repeat_pull'.");
+ return 0;
+}
+
+/* function: repeat_check */
+static int toluaI_util_repeat_check00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  repeat_check();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'repeat_check'.");
+ return 0;
+}
+
+/* function: get_count */
+static int toluaI_util_get_count00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int number = ((int)  tolua_getnumber(tolua_S,1,0));
+  int max = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  get_count(number,max);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_count'.");
+ return 0;
+}
+
+/* get function: info of class  cave_type */
+static int toluaI_get_util_cave_type_info(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->info);
+ return 1;
+}
+
+/* set function: info of class  cave_type */
+static int toluaI_set_util_cave_type_info(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->info = ((u16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: feat of class  cave_type */
+static int toluaI_get_util_cave_type_feat(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->feat);
+ return 1;
+}
+
+/* set function: feat of class  cave_type */
+static int toluaI_set_util_cave_type_feat(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->feat = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: o_idx of class  cave_type */
+static int toluaI_get_util_cave_type_o_idx(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->o_idx);
+ return 1;
+}
+
+/* set function: o_idx of class  cave_type */
+static int toluaI_set_util_cave_type_o_idx(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->o_idx = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: m_idx of class  cave_type */
+static int toluaI_get_util_cave_type_m_idx(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->m_idx);
+ return 1;
+}
+
+/* set function: m_idx of class  cave_type */
+static int toluaI_set_util_cave_type_m_idx(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->m_idx = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: t_idx of class  cave_type */
+static int toluaI_get_util_cave_type_t_idx(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->t_idx);
+ return 1;
+}
+
+/* set function: t_idx of class  cave_type */
+static int toluaI_set_util_cave_type_t_idx(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->t_idx = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: special of class  cave_type */
+static int toluaI_get_util_cave_type_special(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->special);
+ return 1;
+}
+
+/* set function: special of class  cave_type */
+static int toluaI_set_util_cave_type_special(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->special = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: special2 of class  cave_type */
+static int toluaI_get_util_cave_type_special2(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->special2);
+ return 1;
+}
+
+/* set function: special2 of class  cave_type */
+static int toluaI_set_util_cave_type_special2(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->special2 = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: inscription of class  cave_type */
+static int toluaI_get_util_cave_type_inscription(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->inscription);
+ return 1;
+}
+
+/* set function: inscription of class  cave_type */
+static int toluaI_set_util_cave_type_inscription(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->inscription = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mana of class  cave_type */
+static int toluaI_get_util_cave_type_mana(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mana);
+ return 1;
+}
+
+/* set function: mana of class  cave_type */
+static int toluaI_set_util_cave_type_mana(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mana = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: mimic of class  cave_type */
+static int toluaI_get_util_cave_type_mimic(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->mimic);
+ return 1;
+}
+
+/* set function: mimic of class  cave_type */
+static int toluaI_set_util_cave_type_mimic(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->mimic = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: effect of class  cave_type */
+static int toluaI_get_util_cave_type_effect(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->effect);
+ return 1;
+}
+
+/* set function: effect of class  cave_type */
+static int toluaI_set_util_cave_type_effect(lua_State* tolua_S)
+{
+  cave_type* self = (cave_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->effect = ((s16b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: ANGBAND_SYS */
+static int toluaI_get_util_ANGBAND_SYS(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_SYS);
+ return 1;
+}
+
+/* set function: ANGBAND_SYS */
+static int toluaI_set_util_ANGBAND_SYS(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_SYS = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_KEYBOARD */
+static int toluaI_get_util_ANGBAND_KEYBOARD(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_KEYBOARD);
+ return 1;
+}
+
+/* set function: ANGBAND_KEYBOARD */
+static int toluaI_set_util_ANGBAND_KEYBOARD(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_KEYBOARD = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_GRAF */
+static int toluaI_get_util_ANGBAND_GRAF(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_GRAF);
+ return 1;
+}
+
+/* set function: ANGBAND_GRAF */
+static int toluaI_set_util_ANGBAND_GRAF(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_GRAF = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR */
+static int toluaI_get_util_ANGBAND_DIR(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR */
+static int toluaI_set_util_ANGBAND_DIR(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_APEX */
+static int toluaI_get_util_ANGBAND_DIR_APEX(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_APEX);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_APEX */
+static int toluaI_set_util_ANGBAND_DIR_APEX(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_APEX = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_BONE */
+static int toluaI_get_util_ANGBAND_DIR_BONE(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_BONE);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_BONE */
+static int toluaI_set_util_ANGBAND_DIR_BONE(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_BONE = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_CORE */
+static int toluaI_get_util_ANGBAND_DIR_CORE(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_CORE);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_CORE */
+static int toluaI_set_util_ANGBAND_DIR_CORE(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_CORE = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_DNGN */
+static int toluaI_get_util_ANGBAND_DIR_DNGN(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_DNGN);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_DNGN */
+static int toluaI_set_util_ANGBAND_DIR_DNGN(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_DNGN = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_DATA */
+static int toluaI_get_util_ANGBAND_DIR_DATA(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_DATA);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_DATA */
+static int toluaI_set_util_ANGBAND_DIR_DATA(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_DATA = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_EDIT */
+static int toluaI_get_util_ANGBAND_DIR_EDIT(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_EDIT);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_EDIT */
+static int toluaI_set_util_ANGBAND_DIR_EDIT(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_EDIT = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_FILE */
+static int toluaI_get_util_ANGBAND_DIR_FILE(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_FILE);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_FILE */
+static int toluaI_set_util_ANGBAND_DIR_FILE(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_FILE = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_HELP */
+static int toluaI_get_util_ANGBAND_DIR_HELP(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_HELP);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_HELP */
+static int toluaI_set_util_ANGBAND_DIR_HELP(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_HELP = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_INFO */
+static int toluaI_get_util_ANGBAND_DIR_INFO(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_INFO);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_INFO */
+static int toluaI_set_util_ANGBAND_DIR_INFO(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_INFO = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_MODULES */
+static int toluaI_get_util_ANGBAND_DIR_MODULES(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_MODULES);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_MODULES */
+static int toluaI_set_util_ANGBAND_DIR_MODULES(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_MODULES = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_NOTE */
+static int toluaI_get_util_ANGBAND_DIR_NOTE(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_NOTE);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_NOTE */
+static int toluaI_set_util_ANGBAND_DIR_NOTE(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_NOTE = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_SAVE */
+static int toluaI_get_util_ANGBAND_DIR_SAVE(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_SAVE);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_SAVE */
+static int toluaI_set_util_ANGBAND_DIR_SAVE(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_SAVE = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_SCPT */
+static int toluaI_get_util_ANGBAND_DIR_SCPT(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_SCPT);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_SCPT */
+static int toluaI_set_util_ANGBAND_DIR_SCPT(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_SCPT = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_PREF */
+static int toluaI_get_util_ANGBAND_DIR_PREF(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_PREF);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_PREF */
+static int toluaI_set_util_ANGBAND_DIR_PREF(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_PREF = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_PATCH */
+static int toluaI_get_util_ANGBAND_DIR_PATCH(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_PATCH);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_PATCH */
+static int toluaI_set_util_ANGBAND_DIR_PATCH(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_PATCH = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_USER */
+static int toluaI_get_util_ANGBAND_DIR_USER(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_USER);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_USER */
+static int toluaI_set_util_ANGBAND_DIR_USER(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_USER = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_XTRA */
+static int toluaI_get_util_ANGBAND_DIR_XTRA(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_XTRA);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_XTRA */
+static int toluaI_set_util_ANGBAND_DIR_XTRA(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_XTRA = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ANGBAND_DIR_CMOV */
+static int toluaI_get_util_ANGBAND_DIR_CMOV(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)ANGBAND_DIR_CMOV);
+ return 1;
+}
+
+/* set function: ANGBAND_DIR_CMOV */
+static int toluaI_set_util_ANGBAND_DIR_CMOV(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  ANGBAND_DIR_CMOV = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* function: los */
+static int toluaI_util_los00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y1 = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x1 = ((int)  tolua_getnumber(tolua_S,2,0));
+  int y2 = ((int)  tolua_getnumber(tolua_S,3,0));
+  int x2 = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  bool toluaI_ret = (bool)  los(y1,x1,y2,x2);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'los'.");
+ return 0;
+}
+
+/* function: lua_cave_is */
+static int toluaI_util_cave_is00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"cave_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cave_type* c_ptr = ((cave_type*)  tolua_getusertype(tolua_S,1,0));
+  s32b flag = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ {
+  bool toluaI_ret = (bool)  lua_cave_is(c_ptr,flag);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'cave_is'.");
+ return 0;
+}
+
+/* function: lua_get_cave */
+static int toluaI_util_cave00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  cave_type* toluaI_ret = (cave_type*)  lua_get_cave(y,x);
+ tolua_pushusertype(tolua_S,(void*)toluaI_ret,tolua_tag(tolua_S,"cave_type"));
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'cave'.");
+ return 0;
+}
+
+/* function: set_target */
+static int toluaI_util_set_target00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  set_target(y,x);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'set_target'.");
+ return 0;
+}
+
+/* function: get_target */
+static int toluaI_util_get_target00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,1) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int dir = ((int)  tolua_getnumber(tolua_S,1,0));
+  int y = ((int)  tolua_getnumber(tolua_S,2,0));
+  int x = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  get_target(dir,&y,&x);
+ tolua_pushnumber(tolua_S,(long)y);
+ tolua_pushnumber(tolua_S,(long)x);
+ }
+ }
+ return 2;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_target'.");
+ return 0;
+}
+
+/* get function: m_allow_special */
+static int toluaI_get_util_m_allow_special(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_r_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)m_allow_special[toluaI_index]);
+ return 1;
+}
+
+/* set function: m_allow_special */
+static int toluaI_set_util_m_allow_special(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_r_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  m_allow_special[toluaI_index] = ((bool)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: k_allow_special */
+static int toluaI_get_util_k_allow_special(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_k_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)k_allow_special[toluaI_index]);
+ return 1;
+}
+
+/* set function: k_allow_special */
+static int toluaI_set_util_k_allow_special(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_k_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  k_allow_special[toluaI_index] = ((bool)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: a_allow_special */
+static int toluaI_get_util_a_allow_special(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_a_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)a_allow_special[toluaI_index]);
+ return 1;
+}
+
+/* set function: a_allow_special */
+static int toluaI_set_util_a_allow_special(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=max_a_idx)
+ tolua_error(tolua_S,"array indexing out of range.");
+  a_allow_special[toluaI_index] = ((bool)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* function: cave_set_feat */
+static int toluaI_util_cave_set_feat00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+  int feat = ((int)  tolua_getnumber(tolua_S,3,0));
+ {
+  cave_set_feat(y,x,feat);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'cave_set_feat'.");
+ return 0;
+}
+
+/* function: show_file */
+static int toluaI_util_show_file00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr name = ((cptr)  tolua_getstring(tolua_S,1,0));
+  cptr what = ((cptr)  tolua_getstring(tolua_S,2,0));
+  int line = ((int)  tolua_getnumber(tolua_S,3,0));
+  int mode = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  bool toluaI_ret = (bool)  show_file(name,what,line,mode);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'show_file'.");
+ return 0;
+}
+
+/* get function: target_who */
+static int toluaI_get_util_target_who(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)target_who);
+ return 1;
+}
+
+/* set function: target_who */
+static int toluaI_set_util_target_who(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  target_who = ((s16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: target_col */
+static int toluaI_get_util_target_col(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)target_col);
+ return 1;
+}
+
+/* set function: target_col */
+static int toluaI_set_util_target_col(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  target_col = ((s16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: target_row */
+static int toluaI_get_util_target_row(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)target_row);
+ return 1;
+}
+
+/* set function: target_row */
+static int toluaI_set_util_target_row(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  target_row = ((s16b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: max_bact */
+static int toluaI_get_util_max_bact(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)max_bact);
+ return 1;
+}
+
+/* set function: max_bact */
+static int toluaI_set_util_max_bact(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  max_bact = ((int)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: ddd */
+static int toluaI_get_util_ddd(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=9)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)ddd[toluaI_index]);
+ return 1;
+}
+
+/* set function: ddd */
+static int toluaI_set_util_ddd(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=9)
+ tolua_error(tolua_S,"array indexing out of range.");
+  ddd[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: ddx */
+static int toluaI_get_util_ddx(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=10)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)ddx[toluaI_index]);
+ return 1;
+}
+
+/* set function: ddx */
+static int toluaI_set_util_ddx(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=10)
+ tolua_error(tolua_S,"array indexing out of range.");
+  ddx[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: ddy */
+static int toluaI_get_util_ddy(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=10)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)ddy[toluaI_index]);
+ return 1;
+}
+
+/* set function: ddy */
+static int toluaI_set_util_ddy(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=10)
+ tolua_error(tolua_S,"array indexing out of range.");
+  ddy[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: ddx_ddd */
+static int toluaI_get_util_ddx_ddd(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=9)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)ddx_ddd[toluaI_index]);
+ return 1;
+}
+
+/* set function: ddx_ddd */
+static int toluaI_set_util_ddx_ddd(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=9)
+ tolua_error(tolua_S,"array indexing out of range.");
+  ddx_ddd[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: ddy_ddd */
+static int toluaI_get_util_ddy_ddd(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=9)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)ddy_ddd[toluaI_index]);
+ return 1;
+}
+
+/* set function: ddy_ddd */
+static int toluaI_set_util_ddy_ddd(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=9)
+ tolua_error(tolua_S,"array indexing out of range.");
+  ddy_ddd[toluaI_index] = ((s16b)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* function: get_map_size */
+static int toluaI_util_get_map_size00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,1) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  bool full_text = ((bool)  tolua_getnumber(tolua_S,1,0));
+  char* name = ((char*)  tolua_getstring(tolua_S,2,0));
+  int ysize = ((int)  tolua_getnumber(tolua_S,3,0));
+  int xsize = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  get_map_size(full_text,name,&ysize,&xsize);
+ tolua_pushnumber(tolua_S,(long)ysize);
+ tolua_pushnumber(tolua_S,(long)xsize);
+ }
+ }
+ return 2;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_map_size'.");
+ return 0;
+}
+
+/* function: load_map */
+static int toluaI_util_load_map00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,1) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  bool full_text = ((bool)  tolua_getnumber(tolua_S,1,0));
+  char* name = ((char*)  tolua_getstring(tolua_S,2,0));
+  int y = ((int)  tolua_getnumber(tolua_S,3,2));
+  int x = ((int)  tolua_getnumber(tolua_S,4,2));
+ {
+  load_map(full_text,name,&y,&x);
+ tolua_pushnumber(tolua_S,(long)y);
+ tolua_pushnumber(tolua_S,(long)x);
+ }
+ }
+ return 2;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'load_map'.");
+ return 0;
+}
+
+/* function: alloc_room */
+static int toluaI_util_alloc_room00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,6,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,7,LUA_TNUMBER,1) ||
+ !tolua_istype(tolua_S,8,LUA_TNUMBER,1) ||
+ !tolua_isnoobj(tolua_S,9)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int by0 = ((int)  tolua_getnumber(tolua_S,1,0));
+  int bx0 = ((int)  tolua_getnumber(tolua_S,2,0));
+  int ysize = ((int)  tolua_getnumber(tolua_S,3,0));
+  int xsize = ((int)  tolua_getnumber(tolua_S,4,0));
+  int y1 = ((int)  tolua_getnumber(tolua_S,5,0));
+  int x1 = ((int)  tolua_getnumber(tolua_S,6,0));
+  int y2 = ((int)  tolua_getnumber(tolua_S,7,0));
+  int x2 = ((int)  tolua_getnumber(tolua_S,8,0));
+ {
+  bool toluaI_ret = (bool)  alloc_room(by0,bx0,ysize,xsize,&y1,&x1,&y2,&x2);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ tolua_pushnumber(tolua_S,(long)y1);
+ tolua_pushnumber(tolua_S,(long)x1);
+ tolua_pushnumber(tolua_S,(long)y2);
+ tolua_pushnumber(tolua_S,(long)x2);
+ }
+ }
+ return 5;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'alloc_room'.");
+ return 0;
+}
+
+/* get function: option_ingame_help */
+static int toluaI_get_util_option_ingame_help(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)option_ingame_help);
+ return 1;
+}
+
+/* set function: option_ingame_help */
+static int toluaI_set_util_option_ingame_help(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  option_ingame_help = ((bool)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* function: lua_input_box */
+static int toluaI_util_input_box00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr title = ((cptr)  tolua_getstring(tolua_S,1,0));
+  int max = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  char* toluaI_ret = (char*)  lua_input_box(title,max);
+ tolua_pushstring(tolua_S,(const char*)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'input_box'.");
+ return 0;
+}
+
+/* function: lua_msg_box */
+static int toluaI_util_msg_box00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr title = ((cptr)  tolua_getstring(tolua_S,1,0));
+ {
+  char toluaI_ret = (char)  lua_msg_box(title);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'msg_box'.");
+ return 0;
+}
+
+/* function: rescale */
+static int toluaI_util_rescale00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s32b x = ((s32b)  tolua_getnumber(tolua_S,1,0));
+  s32b max = ((s32b)  tolua_getnumber(tolua_S,2,0));
+  s32b new_max = ((s32b)  tolua_getnumber(tolua_S,3,0));
+ {
+  s32b toluaI_ret = (s32b)  rescale(x,max,new_max);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'rescale'.");
+ return 0;
+}
+
+/* function: player_name_lua */
+static int toluaI_util_player_name00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  const char* toluaI_ret = (const char*)  player_name_lua();
+ tolua_pushstring(tolua_S,(const char*)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'player_name'.");
+ return 0;
+}
+
+/* function: lua_make_temp_file */
+static int toluaI_util_make_temp_file00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  lua_make_temp_file();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'make_temp_file'.");
+ return 0;
+}
+
+/* function: lua_close_temp_file */
+static int toluaI_util_close_temp_file00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  lua_close_temp_file();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'close_temp_file'.");
+ return 0;
+}
+
+/* function: lua_end_temp_file */
+static int toluaI_util_end_temp_file00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  lua_end_temp_file();
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'end_temp_file'.");
+ return 0;
+}
+
+/* function: lua_get_temp_name */
+static int toluaI_util_get_temp_name00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  cptr toluaI_ret = (cptr)  lua_get_temp_name();
+ tolua_pushstring(tolua_S,(const char*)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_temp_name'.");
+ return 0;
+}
+
+/* function: quark_str */
+static int toluaI_util_quark_str00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s16b num = ((s16b)  tolua_getnumber(tolua_S,1,0));
+ {
+  cptr toluaI_ret = (cptr)  quark_str(num);
+ tolua_pushstring(tolua_S,(const char*)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'quark_str'.");
+ return 0;
+}
+
+/* function: quark_add */
+static int toluaI_util_quark_add00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr str = ((cptr)  tolua_getstring(tolua_S,1,0));
+ {
+  s16b toluaI_ret = (s16b)  quark_add(str);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'quark_add'.");
+ return 0;
+}
+
+/* function: module_reset_dir */
+static int toluaI_util_module_reset_dir00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr dir = ((cptr)  tolua_getstring(tolua_S,1,0));
+  cptr new_path = ((cptr)  tolua_getstring(tolua_S,2,0));
+ {
+  module_reset_dir(dir,new_path);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'module_reset_dir'.");
+ return 0;
+}
+
+/* function: scansubdir */
+static int toluaI_util_scansubdir00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr dir = ((cptr)  tolua_getstring(tolua_S,1,0));
+ {
+  scansubdir(dir);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'scansubdir'.");
+ return 0;
+}
+
+/* function: file_exist */
+static int toluaI_util_file_exist00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  char* buf = ((char*)  tolua_getstring(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  file_exist(buf);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'file_exist'.");
+ return 0;
+}
+
+/* get function: game_module */
+static int toluaI_get_util_game_module(lua_State* tolua_S)
+{
+ tolua_pushstring(tolua_S,(const char*)game_module);
+ return 1;
+}
+
+/* set function: game_module */
+static int toluaI_set_util_game_module(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  game_module = ((cptr)  tolua_getstring(tolua_S,1,0));
+ return 0;
+}
+
+/* function: get_keymap_dir */
+static int toluaI_util_get_keymap_dir00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  char ch = ((char)  tolua_getnumber(tolua_S,1,0));
+ {
+  int toluaI_ret = (int)  get_keymap_dir(ch);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'get_keymap_dir'.");
+ return 0;
+}
+
+/* get function: next of class  timer_type */
+static int toluaI_get_util_timer_type_next(lua_State* tolua_S)
+{
+  timer_type* self = (timer_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushusertype(tolua_S,(void*)self->next,tolua_tag(tolua_S,"timer_type"));
+ return 1;
+}
+
+/* set function: next of class  timer_type */
+static int toluaI_set_util_timer_type_next(lua_State* tolua_S)
+{
+  timer_type* self = (timer_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,tolua_tag(tolua_S,"timer_type"),0))
+ TOLUA_ERR_ASSIGN;
+  self->next = ((timer_type*)  tolua_getusertype(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: enabled of class  timer_type */
+static int toluaI_get_util_timer_type_enabled(lua_State* tolua_S)
+{
+  timer_type* self = (timer_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->enabled);
+ return 1;
+}
+
+/* set function: enabled of class  timer_type */
+static int toluaI_set_util_timer_type_enabled(lua_State* tolua_S)
+{
+  timer_type* self = (timer_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->enabled = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: delay of class  timer_type */
+static int toluaI_get_util_timer_type_delay(lua_State* tolua_S)
+{
+  timer_type* self = (timer_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->delay);
+ return 1;
+}
+
+/* set function: delay of class  timer_type */
+static int toluaI_set_util_timer_type_delay(lua_State* tolua_S)
+{
+  timer_type* self = (timer_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->delay = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: countdown of class  timer_type */
+static int toluaI_get_util_timer_type_countdown(lua_State* tolua_S)
+{
+  timer_type* self = (timer_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->countdown);
+ return 1;
+}
+
+/* set function: countdown of class  timer_type */
+static int toluaI_set_util_timer_type_countdown(lua_State* tolua_S)
+{
+  timer_type* self = (timer_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->countdown = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: callback of class  timer_type */
+static int toluaI_get_util_timer_type_callback(lua_State* tolua_S)
+{
+  timer_type* self = (timer_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushstring(tolua_S,(const char*)self->callback);
+ return 1;
+}
+
+/* set function: callback of class  timer_type */
+static int toluaI_set_util_timer_type_callback(lua_State* tolua_S)
+{
+  timer_type* self = (timer_type*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TSTRING,0))
+ TOLUA_ERR_ASSIGN;
+  self->callback = ((cptr)  tolua_getstring(tolua_S,2,0));
+ return 0;
+}
+
+/* function: new_timer */
+static int toluaI_util_new_timer00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr callback = ((cptr)  tolua_getstring(tolua_S,1,0));
+  s32b delay = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ {
+  timer_type* toluaI_ret = (timer_type*)  new_timer(callback,delay);
+ tolua_pushusertype(tolua_S,(void*)toluaI_ret,tolua_tag(tolua_S,"timer_type"));
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'new_timer'.");
+ return 0;
+}
+
+/* function: del_timer */
+static int toluaI_util_del_timer00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"timer_type"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  timer_type* t_ptr = ((timer_type*)  tolua_getusertype(tolua_S,1,0));
+ {
+  del_timer(t_ptr);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'del_timer'.");
+ return 0;
+}
+
+/* function: lua_create_list */
+static int toluaI_util_create_list00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int size = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  list_type* toluaI_ret = (list_type*)  lua_create_list(size);
+ tolua_pushusertype(tolua_S,(void*)toluaI_ret,tolua_tag(tolua_S,"list_type"));
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'create_list'.");
+ return 0;
+}
+
+/* function: lua_delete_list */
+static int toluaI_util_delete_list00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"list_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  list_type* tolua_var_1 = ((list_type*)  tolua_getusertype(tolua_S,1,0));
+  int size = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  lua_delete_list(tolua_var_1,size);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'delete_list'.");
+ return 0;
+}
+
+/* function: lua_add_to_list */
+static int toluaI_util_add_to_list00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"list_type"),0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  list_type* tolua_var_2 = ((list_type*)  tolua_getusertype(tolua_S,1,0));
+  int idx = ((int)  tolua_getnumber(tolua_S,2,0));
+  cptr str = ((cptr)  tolua_getstring(tolua_S,3,0));
+ {
+  lua_add_to_list(tolua_var_2,idx,str);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'add_to_list'.");
+ return 0;
+}
+
+/* function: lua_display_list */
+static int toluaI_util_display_list00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,6,tolua_tag(tolua_S,"list_type"),0) ||
+ !tolua_istype(tolua_S,7,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,8,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,9,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,10,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,11)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+  int h = ((int)  tolua_getnumber(tolua_S,3,0));
+  int w = ((int)  tolua_getnumber(tolua_S,4,0));
+  cptr title = ((cptr)  tolua_getstring(tolua_S,5,0));
+  list_type* list = ((list_type*)  tolua_getusertype(tolua_S,6,0));
+  int max = ((int)  tolua_getnumber(tolua_S,7,0));
+  int begin = ((int)  tolua_getnumber(tolua_S,8,0));
+  int sel = ((int)  tolua_getnumber(tolua_S,9,0));
+  byte sel_color = ((byte)  tolua_getnumber(tolua_S,10,0));
+ {
+  lua_display_list(y,x,h,w,title,list,max,begin,sel,sel_color);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'display_list'.");
+ return 0;
+}
+
+/* function: file_character */
+static int toluaI_util_file_character00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  cptr name = ((cptr)  tolua_getstring(tolua_S,1,0));
+  bool full = ((bool)  tolua_getnumber(tolua_S,2,0));
+ {
+  errr toluaI_ret = (errr)  file_character(name,full);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'file_character'.");
+ return 0;
+}
+
+/* function: calc_bonuses */
+static int toluaI_util_calc_bonuses00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  bool silent = ((bool)  tolua_getnumber(tolua_S,1,0));
+ {
+  calc_bonuses(silent);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'calc_bonuses'.");
+ return 0;
+}
+
+/* function: note_spot */
+static int toluaI_util_note_spot00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  note_spot(y,x);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'note_spot'.");
+ return 0;
+}
+
+/* function: lite_spot */
+static int toluaI_util_lite_spot00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int y = ((int)  tolua_getnumber(tolua_S,1,0));
+  int x = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  lite_spot(y,x);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'lite_spot'.");
+ return 0;
+}
+
+/* Open function */
+int tolua_util_open (lua_State* tolua_S)
+{
+ tolua_open(tolua_S);
+ toluaI_reg_types(tolua_S);
+ tolua_constant(tolua_S,NULL,"TRUE",TRUE);
+ tolua_constant(tolua_S,NULL,"FALSE",FALSE);
+ tolua_constant(tolua_S,NULL,"ESCAPE",ESCAPE);
+ tolua_constant(tolua_S,NULL,"TERM_DARK",TERM_DARK);
+ tolua_constant(tolua_S,NULL,"TERM_WHITE",TERM_WHITE);
+ tolua_constant(tolua_S,NULL,"TERM_SLATE",TERM_SLATE);
+ tolua_constant(tolua_S,NULL,"TERM_ORANGE",TERM_ORANGE);
+ tolua_constant(tolua_S,NULL,"TERM_RED",TERM_RED);
+ tolua_constant(tolua_S,NULL,"TERM_GREEN",TERM_GREEN);
+ tolua_constant(tolua_S,NULL,"TERM_BLUE",TERM_BLUE);
+ tolua_constant(tolua_S,NULL,"TERM_UMBER",TERM_UMBER);
+ tolua_constant(tolua_S,NULL,"TERM_L_DARK",TERM_L_DARK);
+ tolua_constant(tolua_S,NULL,"TERM_L_WHITE",TERM_L_WHITE);
+ tolua_constant(tolua_S,NULL,"TERM_VIOLET",TERM_VIOLET);
+ tolua_constant(tolua_S,NULL,"TERM_YELLOW",TERM_YELLOW);
+ tolua_constant(tolua_S,NULL,"TERM_L_RED",TERM_L_RED);
+ tolua_constant(tolua_S,NULL,"TERM_L_GREEN",TERM_L_GREEN);
+ tolua_constant(tolua_S,NULL,"TERM_L_BLUE",TERM_L_BLUE);
+ tolua_constant(tolua_S,NULL,"TERM_L_UMBER",TERM_L_UMBER);
+ tolua_constant(tolua_S,NULL,"HOOK_MONSTER_DEATH",HOOK_MONSTER_DEATH);
+ tolua_constant(tolua_S,NULL,"HOOK_OPEN",HOOK_OPEN);
+ tolua_constant(tolua_S,NULL,"HOOK_GEN_QUEST",HOOK_GEN_QUEST);
+ tolua_constant(tolua_S,NULL,"HOOK_END_TURN",HOOK_END_TURN);
+ tolua_constant(tolua_S,NULL,"HOOK_FEELING",HOOK_FEELING);
+ tolua_constant(tolua_S,NULL,"HOOK_NEW_MONSTER",HOOK_NEW_MONSTER);
+ tolua_constant(tolua_S,NULL,"HOOK_GEN_LEVEL",HOOK_GEN_LEVEL);
+ tolua_constant(tolua_S,NULL,"HOOK_BUILD_ROOM1",HOOK_BUILD_ROOM1);
+ tolua_constant(tolua_S,NULL,"HOOK_NEW_LEVEL",HOOK_NEW_LEVEL);
+ tolua_constant(tolua_S,NULL,"HOOK_QUEST_FINISH",HOOK_QUEST_FINISH);
+ tolua_constant(tolua_S,NULL,"HOOK_QUEST_FAIL",HOOK_QUEST_FAIL);
+ tolua_constant(tolua_S,NULL,"HOOK_GIVE",HOOK_GIVE);
+ tolua_constant(tolua_S,NULL,"HOOK_CHAR_DUMP",HOOK_CHAR_DUMP);
+ tolua_constant(tolua_S,NULL,"HOOK_INIT_QUEST",HOOK_INIT_QUEST);
+ tolua_constant(tolua_S,NULL,"HOOK_WILD_GEN",HOOK_WILD_GEN);
+ tolua_constant(tolua_S,NULL,"HOOK_DROP",HOOK_DROP);
+ tolua_constant(tolua_S,NULL,"HOOK_IDENTIFY",HOOK_IDENTIFY);
+ tolua_constant(tolua_S,NULL,"HOOK_MOVE",HOOK_MOVE);
+ tolua_constant(tolua_S,NULL,"HOOK_STAIR",HOOK_STAIR);
+ tolua_constant(tolua_S,NULL,"HOOK_MONSTER_AI",HOOK_MONSTER_AI);
+ tolua_constant(tolua_S,NULL,"HOOK_PLAYER_LEVEL",HOOK_PLAYER_LEVEL);
+ tolua_constant(tolua_S,NULL,"HOOK_WIELD",HOOK_WIELD);
+ tolua_constant(tolua_S,NULL,"HOOK_INIT",HOOK_INIT);
+ tolua_constant(tolua_S,NULL,"HOOK_QUAFF",HOOK_QUAFF);
+ tolua_constant(tolua_S,NULL,"HOOK_AIM",HOOK_AIM);
+ tolua_constant(tolua_S,NULL,"HOOK_USE",HOOK_USE);
+ tolua_constant(tolua_S,NULL,"HOOK_ACTIVATE",HOOK_ACTIVATE);
+ tolua_constant(tolua_S,NULL,"HOOK_ZAP",HOOK_ZAP);
+ tolua_constant(tolua_S,NULL,"HOOK_READ",HOOK_READ);
+ tolua_constant(tolua_S,NULL,"HOOK_CALC_BONUS",HOOK_CALC_BONUS);
+ tolua_constant(tolua_S,NULL,"HOOK_CALC_BONUS_END",HOOK_CALC_BONUS_END);
+ tolua_constant(tolua_S,NULL,"HOOK_CALC_POWERS",HOOK_CALC_POWERS);
+ tolua_constant(tolua_S,NULL,"HOOK_KEYPRESS",HOOK_KEYPRESS);
+ tolua_constant(tolua_S,NULL,"HOOK_CHAT",HOOK_CHAT);
+ tolua_constant(tolua_S,NULL,"HOOK_MON_SPEAK",HOOK_MON_SPEAK);
+ tolua_constant(tolua_S,NULL,"HOOK_MKEY",HOOK_MKEY);
+ tolua_constant(tolua_S,NULL,"HOOK_BIRTH_OBJECTS",HOOK_BIRTH_OBJECTS);
+ tolua_constant(tolua_S,NULL,"HOOK_ACTIVATE_DESC",HOOK_ACTIVATE_DESC);
+ tolua_constant(tolua_S,NULL,"HOOK_INIT_GAME",HOOK_INIT_GAME);
+ tolua_constant(tolua_S,NULL,"HOOK_ACTIVATE_POWER",HOOK_ACTIVATE_POWER);
+ tolua_constant(tolua_S,NULL,"HOOK_ITEM_NAME",HOOK_ITEM_NAME);
+ tolua_constant(tolua_S,NULL,"HOOK_SAVE_GAME",HOOK_SAVE_GAME);
+ tolua_constant(tolua_S,NULL,"HOOK_LOAD_GAME",HOOK_LOAD_GAME);
+ tolua_constant(tolua_S,NULL,"HOOK_LEVEL_REGEN",HOOK_LEVEL_REGEN);
+ tolua_constant(tolua_S,NULL,"HOOK_LEVEL_END_GEN",HOOK_LEVEL_END_GEN);
+ tolua_constant(tolua_S,NULL,"HOOK_BUILDING_ACTION",HOOK_BUILDING_ACTION);
+ tolua_constant(tolua_S,NULL,"HOOK_PROCESS_WORLD",HOOK_PROCESS_WORLD);
+ tolua_constant(tolua_S,NULL,"HOOK_WIELD_SLOT",HOOK_WIELD_SLOT);
+ tolua_constant(tolua_S,NULL,"HOOK_STORE_STOCK",HOOK_STORE_STOCK);
+ tolua_constant(tolua_S,NULL,"HOOK_STORE_BUY",HOOK_STORE_BUY);
+ tolua_constant(tolua_S,NULL,"HOOK_GEN_LEVEL_BEGIN",HOOK_GEN_LEVEL_BEGIN);
+ tolua_constant(tolua_S,NULL,"HOOK_GET",HOOK_GET);
+ tolua_constant(tolua_S,NULL,"HOOK_REDRAW",HOOK_REDRAW);
+ tolua_constant(tolua_S,NULL,"HOOK_RECALC_SKILLS",HOOK_RECALC_SKILLS);
+ tolua_constant(tolua_S,NULL,"HOOK_ENTER_DUNGEON",HOOK_ENTER_DUNGEON);
+ tolua_constant(tolua_S,NULL,"HOOK_FIRE",HOOK_FIRE);
+ tolua_constant(tolua_S,NULL,"HOOK_EAT",HOOK_EAT);
+ tolua_constant(tolua_S,NULL,"HOOK_DIE",HOOK_DIE);
+ tolua_constant(tolua_S,NULL,"HOOK_CALC_HP",HOOK_CALC_HP);
+ tolua_constant(tolua_S,NULL,"HOOK_GF_COLOR",HOOK_GF_COLOR);
+ tolua_constant(tolua_S,NULL,"HOOK_GF_EXEC",HOOK_GF_EXEC);
+ tolua_constant(tolua_S,NULL,"HOOK_CALC_MANA",HOOK_CALC_MANA);
+ tolua_constant(tolua_S,NULL,"HOOK_LOAD_END",HOOK_LOAD_END);
+ tolua_constant(tolua_S,NULL,"HOOK_RECALL",HOOK_RECALL);
+ tolua_constant(tolua_S,NULL,"HOOK_FOLLOW_GOD",HOOK_FOLLOW_GOD);
+ tolua_constant(tolua_S,NULL,"HOOK_SACRIFICE_GOD",HOOK_SACRIFICE_GOD);
+ tolua_constant(tolua_S,NULL,"HOOK_BODY_PARTS",HOOK_BODY_PARTS);
+ tolua_constant(tolua_S,NULL,"HOOK_APPLY_MAGIC",HOOK_APPLY_MAGIC);
+ tolua_constant(tolua_S,NULL,"HOOK_PLAYER_EXP",HOOK_PLAYER_EXP);
+ tolua_constant(tolua_S,NULL,"HOOK_BIRTH",HOOK_BIRTH);
+ tolua_constant(tolua_S,NULL,"HOOK_CALC_LITE",HOOK_CALC_LITE);
+ tolua_constant(tolua_S,NULL,"HOOK_LEARN_ABILITY",HOOK_LEARN_ABILITY);
+ tolua_constant(tolua_S,NULL,"HOOK_MOVED",HOOK_MOVED);
+ tolua_constant(tolua_S,NULL,"HOOK_GAME_START",HOOK_GAME_START);
+ tolua_constant(tolua_S,NULL,"HOOK_TAKEOFF",HOOK_TAKEOFF);
+ tolua_constant(tolua_S,NULL,"HOOK_CALC_WEIGHT",HOOK_CALC_WEIGHT);
+ tolua_constant(tolua_S,NULL,"HOOK_FORBID_TRAVEL",HOOK_FORBID_TRAVEL);
+ tolua_constant(tolua_S,NULL,"HOOK_DEBUG_COMMAND",HOOK_DEBUG_COMMAND);
+ tolua_globalvar(tolua_S,"turn",toluaI_get_util_turn,toluaI_set_util_turn);
+ tolua_globalvar(tolua_S,"old_turn",toluaI_get_util_old_turn,toluaI_set_util_old_turn);
+ tolua_globalvar(tolua_S,"cur_wid",toluaI_get_util_cur_wid,toluaI_set_util_cur_wid);
+ tolua_globalvar(tolua_S,"cur_hgt",toluaI_get_util_cur_hgt,toluaI_set_util_cur_hgt);
+ tolua_function(tolua_S,NULL,"disturb",toluaI_util_disturb00);
+ tolua_function(tolua_S,NULL,"bst",toluaI_util_bst00);
+ tolua_function(tolua_S,NULL,"path_build",toluaI_util_path_build00);
+ tolua_function(tolua_S,NULL,"move_cursor",toluaI_util_move_cursor00);
+ tolua_function(tolua_S,NULL,"flush",toluaI_util_flush00);
+ tolua_globalvar(tolua_S,"inkey_scan",toluaI_get_util_inkey_scan,toluaI_set_util_inkey_scan);
+ tolua_function(tolua_S,NULL,"inkey",toluaI_util_inkey00);
+ tolua_function(tolua_S,NULL,"cmsg_print",toluaI_util_cmsg_print00);
+ tolua_function(tolua_S,NULL,"msg_print",toluaI_util_msg_print00);
+ tolua_function(tolua_S,NULL,"screen_save",toluaI_util_screen_save00);
+ tolua_function(tolua_S,NULL,"screen_load",toluaI_util_screen_load00);
+ tolua_function(tolua_S,NULL,"Term_save",toluaI_util_Term_save00);
+ tolua_function(tolua_S,NULL,"Term_load",toluaI_util_Term_load00);
+ tolua_function(tolua_S,NULL,"c_put_str",toluaI_util_c_put_str00);
+ tolua_function(tolua_S,NULL,"c_prt",toluaI_util_c_prt00);
+ tolua_function(tolua_S,NULL,"prt",toluaI_util_prt00);
+ tolua_function(tolua_S,NULL,"message_add",toluaI_util_message_add00);
+ tolua_function(tolua_S,NULL,"display_message",toluaI_util_display_message00);
+ tolua_function(tolua_S,NULL,"clear_from",toluaI_util_clear_from00);
+ tolua_function(tolua_S,NULL,"askfor_aux",toluaI_util_askfor_aux00);
+ tolua_function(tolua_S,NULL,"get_string",toluaI_util_get_string00);
+ tolua_function(tolua_S,NULL,"get_check",toluaI_util_get_check00);
+ tolua_function(tolua_S,NULL,"get_com",toluaI_util_get_com00);
+ tolua_function(tolua_S,NULL,"get_quantity",toluaI_util_get_quantity00);
+ tolua_function(tolua_S,NULL,"test_monster_name",toluaI_util_test_monster_name00);
+ tolua_function(tolua_S,NULL,"test_item_name",toluaI_util_test_item_name00);
+ tolua_function(tolua_S,NULL,"luck",toluaI_util_luck00);
+ tolua_function(tolua_S,NULL,"get_player_race_name",toluaI_util_get_player_race_name00);
+ tolua_function(tolua_S,NULL,"quit",toluaI_util_quit00);
+ tolua_function(tolua_S,NULL,"value_scale",toluaI_util_value_scale00);
+ tolua_function(tolua_S,NULL,"text_out_c",toluaI_util_text_out_c00);
+ tolua_function(tolua_S,NULL,"text_out",toluaI_util_text_out00);
+ tolua_function(tolua_S,NULL,"change_option",toluaI_util_change_option00);
+ tolua_globalvar(tolua_S,"process_hooks_restart",toluaI_get_util_process_hooks_restart,toluaI_set_util_process_hooks_restart);
+ tolua_function(tolua_S,NULL,"dump_hooks",toluaI_util_dump_hooks00);
+ tolua_function(tolua_S,NULL,"add_hook_script",toluaI_util_add_hook_script00);
+ tolua_function(tolua_S,NULL,"del_hook_name",toluaI_util_del_hook_name00);
+ tolua_function(tolua_S,NULL,"tome_dofile",toluaI_util_tome_dofile00);
+ tolua_function(tolua_S,NULL,"tome_dofile_anywhere",toluaI_util_tome_dofile_anywhere00);
+ tolua_function(tolua_S,NULL,"exec_lua",toluaI_util_exec_lua00);
+ tolua_function(tolua_S,NULL,"dump_lua_stack",toluaI_util_dump_lua_stack00);
+ tolua_function(tolua_S,NULL,"string_exec_lua",toluaI_util_string_exec_lua00);
+ tolua_function(tolua_S,NULL,"print_hook",toluaI_util_print_hook00);
+ tolua_function(tolua_S,NULL,"register_savefile",toluaI_util_register_savefile00);
+ tolua_function(tolua_S,NULL,"save_number_key",toluaI_util_save_number_key00);
+ tolua_globalarray(tolua_S,"adj_mag_study",toluaI_get_util_adj_mag_study,toluaI_set_util_adj_mag_study);
+ tolua_globalarray(tolua_S,"adj_mag_mana",toluaI_get_util_adj_mag_mana,toluaI_set_util_adj_mag_mana);
+ tolua_globalarray(tolua_S,"adj_mag_fail",toluaI_get_util_adj_mag_fail,toluaI_set_util_adj_mag_fail);
+ tolua_globalarray(tolua_S,"adj_mag_stat",toluaI_get_util_adj_mag_stat,toluaI_set_util_adj_mag_stat);
+ tolua_globalarray(tolua_S,"adj_chr_gold",toluaI_get_util_adj_chr_gold,toluaI_set_util_adj_chr_gold);
+ tolua_globalarray(tolua_S,"adj_int_dev",toluaI_get_util_adj_int_dev,toluaI_set_util_adj_int_dev);
+ tolua_globalarray(tolua_S,"adj_wis_sav",toluaI_get_util_adj_wis_sav,toluaI_set_util_adj_wis_sav);
+ tolua_globalarray(tolua_S,"adj_dex_dis",toluaI_get_util_adj_dex_dis,toluaI_set_util_adj_dex_dis);
+ tolua_globalarray(tolua_S,"adj_int_dis",toluaI_get_util_adj_int_dis,toluaI_set_util_adj_int_dis);
+ tolua_globalarray(tolua_S,"adj_dex_ta",toluaI_get_util_adj_dex_ta,toluaI_set_util_adj_dex_ta);
+ tolua_globalarray(tolua_S,"adj_str_td",toluaI_get_util_adj_str_td,toluaI_set_util_adj_str_td);
+ tolua_globalarray(tolua_S,"adj_dex_th",toluaI_get_util_adj_dex_th,toluaI_set_util_adj_dex_th);
+ tolua_globalarray(tolua_S,"adj_str_th",toluaI_get_util_adj_str_th,toluaI_set_util_adj_str_th);
+ tolua_globalarray(tolua_S,"adj_str_wgt",toluaI_get_util_adj_str_wgt,toluaI_set_util_adj_str_wgt);
+ tolua_globalarray(tolua_S,"adj_str_hold",toluaI_get_util_adj_str_hold,toluaI_set_util_adj_str_hold);
+ tolua_globalarray(tolua_S,"adj_str_dig",toluaI_get_util_adj_str_dig,toluaI_set_util_adj_str_dig);
+ tolua_globalarray(tolua_S,"adj_str_blow",toluaI_get_util_adj_str_blow,toluaI_set_util_adj_str_blow);
+ tolua_globalarray(tolua_S,"adj_dex_blow",toluaI_get_util_adj_dex_blow,toluaI_set_util_adj_dex_blow);
+ tolua_globalarray(tolua_S,"adj_dex_safe",toluaI_get_util_adj_dex_safe,toluaI_set_util_adj_dex_safe);
+ tolua_globalarray(tolua_S,"adj_con_fix",toluaI_get_util_adj_con_fix,toluaI_set_util_adj_con_fix);
+ tolua_globalarray(tolua_S,"adj_con_mhp",toluaI_get_util_adj_con_mhp,toluaI_set_util_adj_con_mhp);
+ tolua_function(tolua_S,NULL,"repeat_push",toluaI_util_repeat_push00);
+ tolua_function(tolua_S,NULL,"repeat_pull",toluaI_util_repeat_pull00);
+ tolua_function(tolua_S,NULL,"repeat_check",toluaI_util_repeat_check00);
+ tolua_function(tolua_S,NULL,"get_count",toluaI_util_get_count00);
+ tolua_constant(tolua_S,NULL,"FF1_NO_WALK",FF1_NO_WALK);
+ tolua_constant(tolua_S,NULL,"FF1_NO_VISION",FF1_NO_VISION);
+ tolua_constant(tolua_S,NULL,"FF1_CAN_LEVITATE",FF1_CAN_LEVITATE);
+ tolua_constant(tolua_S,NULL,"FF1_CAN_PASS",FF1_CAN_PASS);
+ tolua_constant(tolua_S,NULL,"FF1_FLOOR",FF1_FLOOR);
+ tolua_constant(tolua_S,NULL,"FF1_WALL",FF1_WALL);
+ tolua_constant(tolua_S,NULL,"FF1_PERMANENT",FF1_PERMANENT);
+ tolua_constant(tolua_S,NULL,"FF1_CAN_FLY",FF1_CAN_FLY);
+ tolua_constant(tolua_S,NULL,"FF1_REMEMBER",FF1_REMEMBER);
+ tolua_constant(tolua_S,NULL,"FF1_NOTICE",FF1_NOTICE);
+ tolua_constant(tolua_S,NULL,"FF1_DONT_NOTICE_RUNNING",FF1_DONT_NOTICE_RUNNING);
+ tolua_constant(tolua_S,NULL,"FF1_CAN_RUN",FF1_CAN_RUN);
+ tolua_constant(tolua_S,NULL,"FF1_DOOR",FF1_DOOR);
+ tolua_constant(tolua_S,NULL,"FF1_SUPPORT_LIGHT",FF1_SUPPORT_LIGHT);
+ tolua_constant(tolua_S,NULL,"FF1_CAN_CLIMB",FF1_CAN_CLIMB);
+ tolua_constant(tolua_S,NULL,"FF1_TUNNELABLE",FF1_TUNNELABLE);
+ tolua_constant(tolua_S,NULL,"FF1_WEB",FF1_WEB);
+ tolua_constant(tolua_S,NULL,"FF1_ATTR_MULTI",FF1_ATTR_MULTI);
+ tolua_constant(tolua_S,NULL,"FF1_SUPPORT_GROWTH",FF1_SUPPORT_GROWTH);
+ tolua_cclass(tolua_S,"cave_type","");
+ tolua_tablevar(tolua_S,"cave_type","info",toluaI_get_util_cave_type_info,toluaI_set_util_cave_type_info);
+ tolua_tablevar(tolua_S,"cave_type","feat",toluaI_get_util_cave_type_feat,toluaI_set_util_cave_type_feat);
+ tolua_tablevar(tolua_S,"cave_type","o_idx",toluaI_get_util_cave_type_o_idx,toluaI_set_util_cave_type_o_idx);
+ tolua_tablevar(tolua_S,"cave_type","m_idx",toluaI_get_util_cave_type_m_idx,toluaI_set_util_cave_type_m_idx);
+ tolua_tablevar(tolua_S,"cave_type","t_idx",toluaI_get_util_cave_type_t_idx,toluaI_set_util_cave_type_t_idx);
+ tolua_tablevar(tolua_S,"cave_type","special",toluaI_get_util_cave_type_special,toluaI_set_util_cave_type_special);
+ tolua_tablevar(tolua_S,"cave_type","special2",toluaI_get_util_cave_type_special2,toluaI_set_util_cave_type_special2);
+ tolua_tablevar(tolua_S,"cave_type","inscription",toluaI_get_util_cave_type_inscription,toluaI_set_util_cave_type_inscription);
+ tolua_tablevar(tolua_S,"cave_type","mana",toluaI_get_util_cave_type_mana,toluaI_set_util_cave_type_mana);
+ tolua_tablevar(tolua_S,"cave_type","mimic",toluaI_get_util_cave_type_mimic,toluaI_set_util_cave_type_mimic);
+ tolua_tablevar(tolua_S,"cave_type","effect",toluaI_get_util_cave_type_effect,toluaI_set_util_cave_type_effect);
+ tolua_globalvar(tolua_S,"ANGBAND_SYS",toluaI_get_util_ANGBAND_SYS,toluaI_set_util_ANGBAND_SYS);
+ tolua_globalvar(tolua_S,"ANGBAND_KEYBOARD",toluaI_get_util_ANGBAND_KEYBOARD,toluaI_set_util_ANGBAND_KEYBOARD);
+ tolua_globalvar(tolua_S,"ANGBAND_GRAF",toluaI_get_util_ANGBAND_GRAF,toluaI_set_util_ANGBAND_GRAF);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR",toluaI_get_util_ANGBAND_DIR,toluaI_set_util_ANGBAND_DIR);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_APEX",toluaI_get_util_ANGBAND_DIR_APEX,toluaI_set_util_ANGBAND_DIR_APEX);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_BONE",toluaI_get_util_ANGBAND_DIR_BONE,toluaI_set_util_ANGBAND_DIR_BONE);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_CORE",toluaI_get_util_ANGBAND_DIR_CORE,toluaI_set_util_ANGBAND_DIR_CORE);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_DNGN",toluaI_get_util_ANGBAND_DIR_DNGN,toluaI_set_util_ANGBAND_DIR_DNGN);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_DATA",toluaI_get_util_ANGBAND_DIR_DATA,toluaI_set_util_ANGBAND_DIR_DATA);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_EDIT",toluaI_get_util_ANGBAND_DIR_EDIT,toluaI_set_util_ANGBAND_DIR_EDIT);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_FILE",toluaI_get_util_ANGBAND_DIR_FILE,toluaI_set_util_ANGBAND_DIR_FILE);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_HELP",toluaI_get_util_ANGBAND_DIR_HELP,toluaI_set_util_ANGBAND_DIR_HELP);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_INFO",toluaI_get_util_ANGBAND_DIR_INFO,toluaI_set_util_ANGBAND_DIR_INFO);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_MODULES",toluaI_get_util_ANGBAND_DIR_MODULES,toluaI_set_util_ANGBAND_DIR_MODULES);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_NOTE",toluaI_get_util_ANGBAND_DIR_NOTE,toluaI_set_util_ANGBAND_DIR_NOTE);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_SAVE",toluaI_get_util_ANGBAND_DIR_SAVE,toluaI_set_util_ANGBAND_DIR_SAVE);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_SCPT",toluaI_get_util_ANGBAND_DIR_SCPT,toluaI_set_util_ANGBAND_DIR_SCPT);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_PREF",toluaI_get_util_ANGBAND_DIR_PREF,toluaI_set_util_ANGBAND_DIR_PREF);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_PATCH",toluaI_get_util_ANGBAND_DIR_PATCH,toluaI_set_util_ANGBAND_DIR_PATCH);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_USER",toluaI_get_util_ANGBAND_DIR_USER,toluaI_set_util_ANGBAND_DIR_USER);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_XTRA",toluaI_get_util_ANGBAND_DIR_XTRA,toluaI_set_util_ANGBAND_DIR_XTRA);
+ tolua_globalvar(tolua_S,"ANGBAND_DIR_CMOV",toluaI_get_util_ANGBAND_DIR_CMOV,toluaI_set_util_ANGBAND_DIR_CMOV);
+ tolua_function(tolua_S,NULL,"los",toluaI_util_los00);
+ tolua_function(tolua_S,NULL,"cave_is",toluaI_util_cave_is00);
+ tolua_function(tolua_S,NULL,"cave",toluaI_util_cave00);
+ tolua_function(tolua_S,NULL,"set_target",toluaI_util_set_target00);
+ tolua_function(tolua_S,NULL,"get_target",toluaI_util_get_target00);
+ tolua_globalarray(tolua_S,"m_allow_special",toluaI_get_util_m_allow_special,toluaI_set_util_m_allow_special);
+ tolua_globalarray(tolua_S,"k_allow_special",toluaI_get_util_k_allow_special,toluaI_set_util_k_allow_special);
+ tolua_globalarray(tolua_S,"a_allow_special",toluaI_get_util_a_allow_special,toluaI_set_util_a_allow_special);
+ tolua_function(tolua_S,NULL,"cave_set_feat",toluaI_util_cave_set_feat00);
+ tolua_function(tolua_S,NULL,"show_file",toluaI_util_show_file00);
+ tolua_globalvar(tolua_S,"target_who",toluaI_get_util_target_who,toluaI_set_util_target_who);
+ tolua_globalvar(tolua_S,"target_col",toluaI_get_util_target_col,toluaI_set_util_target_col);
+ tolua_globalvar(tolua_S,"target_row",toluaI_get_util_target_row,toluaI_set_util_target_row);
+ tolua_globalvar(tolua_S,"max_bact",toluaI_get_util_max_bact,toluaI_set_util_max_bact);
+ tolua_globalarray(tolua_S,"ddd",toluaI_get_util_ddd,toluaI_set_util_ddd);
+ tolua_globalarray(tolua_S,"ddx",toluaI_get_util_ddx,toluaI_set_util_ddx);
+ tolua_globalarray(tolua_S,"ddy",toluaI_get_util_ddy,toluaI_set_util_ddy);
+ tolua_globalarray(tolua_S,"ddx_ddd",toluaI_get_util_ddx_ddd,toluaI_set_util_ddx_ddd);
+ tolua_globalarray(tolua_S,"ddy_ddd",toluaI_get_util_ddy_ddd,toluaI_set_util_ddy_ddd);
+ tolua_function(tolua_S,NULL,"get_map_size",toluaI_util_get_map_size00);
+ tolua_function(tolua_S,NULL,"load_map",toluaI_util_load_map00);
+ tolua_function(tolua_S,NULL,"alloc_room",toluaI_util_alloc_room00);
+ tolua_globalvar(tolua_S,"option_ingame_help",toluaI_get_util_option_ingame_help,toluaI_set_util_option_ingame_help);
+ tolua_function(tolua_S,NULL,"input_box",toluaI_util_input_box00);
+ tolua_function(tolua_S,NULL,"msg_box",toluaI_util_msg_box00);
+ tolua_function(tolua_S,NULL,"rescale",toluaI_util_rescale00);
+ tolua_function(tolua_S,NULL,"player_name",toluaI_util_player_name00);
+ tolua_function(tolua_S,NULL,"make_temp_file",toluaI_util_make_temp_file00);
+ tolua_function(tolua_S,NULL,"close_temp_file",toluaI_util_close_temp_file00);
+ tolua_function(tolua_S,NULL,"end_temp_file",toluaI_util_end_temp_file00);
+ tolua_function(tolua_S,NULL,"get_temp_name",toluaI_util_get_temp_name00);
+ tolua_function(tolua_S,NULL,"quark_str",toluaI_util_quark_str00);
+ tolua_function(tolua_S,NULL,"quark_add",toluaI_util_quark_add00);
+ tolua_function(tolua_S,NULL,"module_reset_dir",toluaI_util_module_reset_dir00);
+ tolua_function(tolua_S,NULL,"scansubdir",toluaI_util_scansubdir00);
+ tolua_function(tolua_S,NULL,"file_exist",toluaI_util_file_exist00);
+ tolua_globalvar(tolua_S,"game_module",toluaI_get_util_game_module,toluaI_set_util_game_module);
+ tolua_function(tolua_S,NULL,"get_keymap_dir",toluaI_util_get_keymap_dir00);
+ tolua_cclass(tolua_S,"timer_type","");
+ tolua_tablevar(tolua_S,"timer_type","next",toluaI_get_util_timer_type_next,toluaI_set_util_timer_type_next);
+ tolua_tablevar(tolua_S,"timer_type","enabled",toluaI_get_util_timer_type_enabled,toluaI_set_util_timer_type_enabled);
+ tolua_tablevar(tolua_S,"timer_type","delay",toluaI_get_util_timer_type_delay,toluaI_set_util_timer_type_delay);
+ tolua_tablevar(tolua_S,"timer_type","countdown",toluaI_get_util_timer_type_countdown,toluaI_set_util_timer_type_countdown);
+ tolua_tablevar(tolua_S,"timer_type","callback",toluaI_get_util_timer_type_callback,toluaI_set_util_timer_type_callback);
+ tolua_function(tolua_S,NULL,"new_timer",toluaI_util_new_timer00);
+ tolua_function(tolua_S,NULL,"del_timer",toluaI_util_del_timer00);
+ tolua_cclass(tolua_S,"list_type","");
+ tolua_function(tolua_S,NULL,"create_list",toluaI_util_create_list00);
+ tolua_function(tolua_S,NULL,"delete_list",toluaI_util_delete_list00);
+ tolua_function(tolua_S,NULL,"add_to_list",toluaI_util_add_to_list00);
+ tolua_function(tolua_S,NULL,"display_list",toluaI_util_display_list00);
+ tolua_function(tolua_S,NULL,"file_character",toluaI_util_file_character00);
+ tolua_function(tolua_S,NULL,"calc_bonuses",toluaI_util_calc_bonuses00);
+ tolua_function(tolua_S,NULL,"note_spot",toluaI_util_note_spot00);
+ tolua_function(tolua_S,NULL,"lite_spot",toluaI_util_lite_spot00);
+ return 1;
+}
+/* Close function */
+void tolua_util_close (lua_State* tolua_S)
+{
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TRUE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FALSE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ESCAPE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_DARK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_WHITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_SLATE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_ORANGE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_RED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_GREEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_BLUE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_UMBER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_L_DARK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_L_WHITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_VIOLET");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_YELLOW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_L_RED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_L_GREEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_L_BLUE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_L_UMBER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_MONSTER_DEATH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_OPEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_GEN_QUEST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_END_TURN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_FEELING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_NEW_MONSTER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_GEN_LEVEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_BUILD_ROOM1");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_NEW_LEVEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_QUEST_FINISH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_QUEST_FAIL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_GIVE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_CHAR_DUMP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_INIT_QUEST");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_WILD_GEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_DROP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_IDENTIFY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_MOVE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_STAIR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_MONSTER_AI");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_PLAYER_LEVEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_WIELD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_INIT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_QUAFF");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_AIM");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_USE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_ACTIVATE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_ZAP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_READ");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_CALC_BONUS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_CALC_BONUS_END");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_CALC_POWERS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_KEYPRESS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_CHAT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_MON_SPEAK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_MKEY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_BIRTH_OBJECTS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_ACTIVATE_DESC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_INIT_GAME");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_ACTIVATE_POWER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_ITEM_NAME");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_SAVE_GAME");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_LOAD_GAME");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_LEVEL_REGEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_LEVEL_END_GEN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_BUILDING_ACTION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_PROCESS_WORLD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_WIELD_SLOT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_STORE_STOCK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_STORE_BUY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_GEN_LEVEL_BEGIN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_GET");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_REDRAW");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_RECALC_SKILLS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_ENTER_DUNGEON");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_FIRE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_EAT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_DIE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_CALC_HP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_GF_COLOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_GF_EXEC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_CALC_MANA");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_LOAD_END");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_RECALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_FOLLOW_GOD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_SACRIFICE_GOD");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_BODY_PARTS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_APPLY_MAGIC");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_PLAYER_EXP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_BIRTH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_CALC_LITE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_LEARN_ABILITY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_MOVED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_GAME_START");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_TAKEOFF");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_CALC_WEIGHT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_FORBID_TRAVEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"HOOK_DEBUG_COMMAND");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"turn"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"old_turn"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"cur_wid"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"cur_hgt"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"disturb");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"bst");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"path_build");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"move_cursor");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"flush");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"inkey_scan"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"inkey");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"cmsg_print");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"msg_print");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"screen_save");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"screen_load");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"Term_save");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"Term_load");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"c_put_str");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"c_prt");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"prt");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"message_add");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"display_message");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"clear_from");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"askfor_aux");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_string");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_check");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_com");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_quantity");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"test_monster_name");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"test_item_name");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"luck");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_player_race_name");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"quit");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"value_scale");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"text_out_c");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"text_out");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"change_option");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"process_hooks_restart"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"dump_hooks");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"add_hook_script");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"del_hook_name");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"tome_dofile");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"tome_dofile_anywhere");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"exec_lua");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"dump_lua_stack");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"string_exec_lua");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"print_hook");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"register_savefile");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"save_number_key");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_mag_study");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_mag_mana");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_mag_fail");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_mag_stat");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_chr_gold");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_int_dev");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_wis_sav");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_dex_dis");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_int_dis");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_dex_ta");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_str_td");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_dex_th");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_str_th");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_str_wgt");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_str_hold");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_str_dig");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_str_blow");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_dex_blow");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_dex_safe");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_con_fix");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"adj_con_mhp");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"repeat_push");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"repeat_pull");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"repeat_check");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_count");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_NO_WALK");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_NO_VISION");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_CAN_LEVITATE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_CAN_PASS");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_FLOOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_WALL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_PERMANENT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_CAN_FLY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_REMEMBER");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_NOTICE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_DONT_NOTICE_RUNNING");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_CAN_RUN");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_DOOR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_SUPPORT_LIGHT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_CAN_CLIMB");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_TUNNELABLE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_WEB");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_ATTR_MULTI");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"FF1_SUPPORT_GROWTH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"cave_type");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_SYS"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_KEYBOARD"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_GRAF"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_APEX"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_BONE"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_CORE"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_DNGN"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_DATA"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_EDIT"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_FILE"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_HELP"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_INFO"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_MODULES"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_NOTE"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_SAVE"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_SCPT"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_PREF"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_PATCH"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_USER"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_XTRA"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"ANGBAND_DIR_CMOV"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"los");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"cave_is");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"cave");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"set_target");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_target");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"m_allow_special");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"k_allow_special");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"a_allow_special");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"cave_set_feat");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"show_file");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"target_who"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"target_col"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"target_row"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"max_bact"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ddd");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ddx");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ddy");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ddx_ddd");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ddy_ddd");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_map_size");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"load_map");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"alloc_room");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"option_ingame_help"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"input_box");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"msg_box");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"rescale");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"player_name");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"make_temp_file");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"close_temp_file");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"end_temp_file");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_temp_name");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"quark_str");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"quark_add");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"module_reset_dir");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"scansubdir");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"file_exist");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"game_module"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"get_keymap_dir");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"timer_type");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"new_timer");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"del_timer");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"list_type");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"create_list");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"delete_list");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"add_to_list");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"display_list");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"file_character");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"calc_bonuses");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"note_spot");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"lite_spot");
+}
diff -Nru --strip-trailing-cr tome-2.5.3/src/w_z_pack.c tome-2.5.3-lua.files/src/w_z_pack.c
--- tome-2.5.3/src/w_z_pack.c	1969-12-31 16:00:00.000000000 -0800
+++ tome-2.5.3-lua.files/src/w_z_pack.c	2010-09-26 07:36:56.000000000 -0700
@@ -0,0 +1,1182 @@
+/*
+** Lua binding: z_pack
+** Generated automatically by tolua 4.0a - angband on Sun Sep 26 07:36:56 2010.
+*/
+
+#include "lua/tolua.h"
+
+/* Exported function */
+int tolua_z_pack_open (lua_State* tolua_S);
+void tolua_z_pack_close (lua_State* tolua_S);
+
+#include "angband.h"
+static s32b lua_rand_int(s32b m) {return rand_int(m);}
+static s32b lua_rand_range(s32b A, s32b B) {return ((A) + (rand_int(1+(B)-(A))));}
+static s32b lua_rand_spread(s32b A, s32b D) {return ((A) + (rand_int(1+(D)+(D))) - (D));}
+static s32b lua_randint(s32b m) {return rand_int(m) + 1;}
+static bool lua_magik(s32b P) {return (rand_int(100) < (P));}
+
+/* function to register type */
+static void toluaI_reg_types (lua_State* tolua_S)
+{
+ tolua_usertype(tolua_S,"zsock_hooks");
+ tolua_usertype(tolua_S,"timer_callback");
+ tolua_usertype(tolua_S,"ip_connection");
+}
+
+/* error messages */
+#define TOLUA_ERR_SELF tolua_error(tolua_S,"invalid 'self'")
+#define TOLUA_ERR_ASSIGN tolua_error(tolua_S,"#vinvalid type in variable assignment.")
+
+/* get function: Term_xtra_long */
+static int toluaI_get_z_pack_Term_xtra_long(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)Term_xtra_long);
+ return 1;
+}
+
+/* set function: Term_xtra_long */
+static int toluaI_set_z_pack_Term_xtra_long(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  Term_xtra_long = ((long)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: scansubdir_dir */
+static int toluaI_get_z_pack_scansubdir_dir(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=1024)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushnumber(tolua_S,(long)scansubdir_dir[toluaI_index]);
+ return 1;
+}
+
+/* set function: scansubdir_dir */
+static int toluaI_set_z_pack_scansubdir_dir(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=1024)
+ tolua_error(tolua_S,"array indexing out of range.");
+  scansubdir_dir[toluaI_index] = ((char)  tolua_getnumber(tolua_S,3,0));
+ return 0;
+}
+
+/* get function: scansubdir_max */
+static int toluaI_get_z_pack_scansubdir_max(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)scansubdir_max);
+ return 1;
+}
+
+/* set function: scansubdir_max */
+static int toluaI_set_z_pack_scansubdir_max(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  scansubdir_max = ((int)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: scansubdir_result */
+static int toluaI_get_z_pack_scansubdir_result(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=scansubdir_max)
+ tolua_error(tolua_S,"array indexing out of range.");
+ tolua_pushstring(tolua_S,(const char*)scansubdir_result[toluaI_index]);
+ return 1;
+}
+
+/* set function: scansubdir_result */
+static int toluaI_set_z_pack_scansubdir_result(lua_State* tolua_S)
+{
+ int toluaI_index;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ tolua_error(tolua_S,"invalid type in array indexing.");
+ toluaI_index = (int)tolua_getnumber(tolua_S,2,0)-1;
+ if (toluaI_index<0 || toluaI_index>=scansubdir_max)
+ tolua_error(tolua_S,"array indexing out of range.");
+  scansubdir_result[toluaI_index] = ((cptr)  tolua_getstring(tolua_S,3,0));
+ return 0;
+}
+
+/* function: Term_xtra */
+static int toluaI_z_pack_Term_xtra00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int n = ((int)  tolua_getnumber(tolua_S,1,0));
+  int v = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  errr toluaI_ret = (errr)  Term_xtra(n,v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'Term_xtra'.");
+ return 0;
+}
+
+/* function: Term_set_cursor */
+static int toluaI_z_pack_Term_set_cursor00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int v = ((int)  tolua_getnumber(tolua_S,1,0));
+ {
+  errr toluaI_ret = (errr)  Term_set_cursor(v);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'Term_set_cursor'.");
+ return 0;
+}
+
+/* function: Term_gotoxy */
+static int toluaI_z_pack_Term_gotoxy00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int x = ((int)  tolua_getnumber(tolua_S,1,0));
+  int y = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  errr toluaI_ret = (errr)  Term_gotoxy(x,y);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'Term_gotoxy'.");
+ return 0;
+}
+
+/* function: Term_putch */
+static int toluaI_z_pack_Term_putch00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int x = ((int)  tolua_getnumber(tolua_S,1,0));
+  int y = ((int)  tolua_getnumber(tolua_S,2,0));
+  byte a = ((byte)  tolua_getnumber(tolua_S,3,0));
+  char c = ((char)  tolua_getnumber(tolua_S,4,0));
+ {
+  errr toluaI_ret = (errr)  Term_putch(x,y,a,c);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'Term_putch'.");
+ return 0;
+}
+
+/* function: Term_putstr */
+static int toluaI_z_pack_Term_putstr00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,6)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int x = ((int)  tolua_getnumber(tolua_S,1,0));
+  int y = ((int)  tolua_getnumber(tolua_S,2,0));
+  int n = ((int)  tolua_getnumber(tolua_S,3,0));
+  byte a = ((byte)  tolua_getnumber(tolua_S,4,0));
+  cptr s = ((cptr)  tolua_getstring(tolua_S,5,0));
+ {
+  errr toluaI_ret = (errr)  Term_putstr(x,y,n,a,s);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'Term_putstr'.");
+ return 0;
+}
+
+/* function: Term_clear */
+static int toluaI_z_pack_Term_clear00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  errr toluaI_ret = (errr)  Term_clear();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'Term_clear'.");
+ return 0;
+}
+
+/* function: Term_redraw */
+static int toluaI_z_pack_Term_redraw00(lua_State* tolua_S)
+{
+ if (
+ !tolua_isnoobj(tolua_S,1)
+ )
+ goto tolua_lerror;
+ else
+ {
+ {
+  errr toluaI_ret = (errr)  Term_redraw();
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'Term_redraw'.");
+ return 0;
+}
+
+/* function: Term_redraw_section */
+static int toluaI_z_pack_Term_redraw_section00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int x1 = ((int)  tolua_getnumber(tolua_S,1,0));
+  int y1 = ((int)  tolua_getnumber(tolua_S,2,0));
+  int x2 = ((int)  tolua_getnumber(tolua_S,3,0));
+  int y2 = ((int)  tolua_getnumber(tolua_S,4,0));
+ {
+  errr toluaI_ret = (errr)  Term_redraw_section(x1,y1,x2,y2);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'Term_redraw_section'.");
+ return 0;
+}
+
+/* function: Term_get_size */
+static int toluaI_z_pack_Term_get_size00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int w = ((int)  tolua_getnumber(tolua_S,1,0));
+  int h = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  errr toluaI_ret = (errr)  Term_get_size(&w,&h);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ tolua_pushnumber(tolua_S,(long)w);
+ tolua_pushnumber(tolua_S,(long)h);
+ }
+ }
+ return 3;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'Term_get_size'.");
+ return 0;
+}
+
+/* function: lua_rand_int */
+static int toluaI_z_pack_rand_int00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s32b m = ((s32b)  tolua_getnumber(tolua_S,1,0));
+ {
+  s32b toluaI_ret = (s32b)  lua_rand_int(m);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'rand_int'.");
+ return 0;
+}
+
+/* function: lua_rand_range */
+static int toluaI_z_pack_rand_range00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s32b A = ((s32b)  tolua_getnumber(tolua_S,1,0));
+  s32b B = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ {
+  s32b toluaI_ret = (s32b)  lua_rand_range(A,B);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'rand_range'.");
+ return 0;
+}
+
+/* function: lua_rand_spread */
+static int toluaI_z_pack_rand_spread00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s32b A = ((s32b)  tolua_getnumber(tolua_S,1,0));
+  s32b D = ((s32b)  tolua_getnumber(tolua_S,2,0));
+ {
+  s32b toluaI_ret = (s32b)  lua_rand_spread(A,D);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'rand_spread'.");
+ return 0;
+}
+
+/* function: lua_randint */
+static int toluaI_z_pack_randint00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s32b m = ((s32b)  tolua_getnumber(tolua_S,1,0));
+ {
+  s32b toluaI_ret = (s32b)  lua_randint(m);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'randint'.");
+ return 0;
+}
+
+/* function: lua_magik */
+static int toluaI_z_pack_magik00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  s32b P = ((s32b)  tolua_getnumber(tolua_S,1,0));
+ {
+  bool toluaI_ret = (bool)  lua_magik(P);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'magik'.");
+ return 0;
+}
+
+/* get function: Rand_quick */
+static int toluaI_get_z_pack_Rand_quick(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)Rand_quick);
+ return 1;
+}
+
+/* set function: Rand_quick */
+static int toluaI_set_z_pack_Rand_quick(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  Rand_quick = ((bool)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* get function: Rand_value */
+static int toluaI_get_z_pack_Rand_value(lua_State* tolua_S)
+{
+ tolua_pushnumber(tolua_S,(long)Rand_value);
+ return 1;
+}
+
+/* set function: Rand_value */
+static int toluaI_set_z_pack_Rand_value(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  Rand_value = ((u32b)  tolua_getnumber(tolua_S,1,0));
+ return 0;
+}
+
+/* function: damroll */
+static int toluaI_z_pack_damroll00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int num = ((int)  tolua_getnumber(tolua_S,1,0));
+  int sides = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  s16b toluaI_ret = (s16b)  damroll(num,sides);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'damroll'.");
+ return 0;
+}
+
+/* function: maxroll */
+static int toluaI_z_pack_maxroll00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,2,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  int num = ((int)  tolua_getnumber(tolua_S,1,0));
+  int sides = ((int)  tolua_getnumber(tolua_S,2,0));
+ {
+  s16b toluaI_ret = (s16b)  maxroll(num,sides);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'maxroll'.");
+ return 0;
+}
+
+/* get function: setup of class  ip_connection */
+static int toluaI_get_z_pack_ip_connection_setup(lua_State* tolua_S)
+{
+  ip_connection* self = (ip_connection*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->setup);
+ return 1;
+}
+
+/* set function: setup of class  ip_connection */
+static int toluaI_set_z_pack_ip_connection_setup(lua_State* tolua_S)
+{
+  ip_connection* self = (ip_connection*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->setup = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: conn_ip of class  ip_connection */
+static int toluaI_get_z_pack_ip_connection_conn_ip(lua_State* tolua_S)
+{
+  ip_connection* self = (ip_connection*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->conn_ip);
+ return 1;
+}
+
+/* set function: conn_ip of class  ip_connection */
+static int toluaI_set_z_pack_ip_connection_conn_ip(lua_State* tolua_S)
+{
+  ip_connection* self = (ip_connection*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->conn_ip = ((long)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: conn_port of class  ip_connection */
+static int toluaI_get_z_pack_ip_connection_conn_port(lua_State* tolua_S)
+{
+  ip_connection* self = (ip_connection*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->conn_port);
+ return 1;
+}
+
+/* set function: conn_port of class  ip_connection */
+static int toluaI_set_z_pack_ip_connection_conn_port(lua_State* tolua_S)
+{
+  ip_connection* self = (ip_connection*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->conn_port = ((int)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: conn_type of class  ip_connection */
+static int toluaI_get_z_pack_ip_connection_conn_type(lua_State* tolua_S)
+{
+  ip_connection* self = (ip_connection*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->conn_type);
+ return 1;
+}
+
+/* set function: conn_type of class  ip_connection */
+static int toluaI_set_z_pack_ip_connection_conn_type(lua_State* tolua_S)
+{
+  ip_connection* self = (ip_connection*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->conn_type = ((byte)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: connected of class  ip_connection */
+static int toluaI_get_z_pack_ip_connection_connected(lua_State* tolua_S)
+{
+  ip_connection* self = (ip_connection*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->connected);
+ return 1;
+}
+
+/* set function: connected of class  ip_connection */
+static int toluaI_set_z_pack_ip_connection_connected(lua_State* tolua_S)
+{
+  ip_connection* self = (ip_connection*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->connected = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: socket of class  ip_connection */
+static int toluaI_get_z_pack_ip_connection_socket(lua_State* tolua_S)
+{
+  ip_connection* self = (ip_connection*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushuserdata(tolua_S,(void*)self->socket);
+ return 1;
+}
+
+/* set function: socket of class  ip_connection */
+static int toluaI_set_z_pack_ip_connection_socket(lua_State* tolua_S)
+{
+  ip_connection* self = (ip_connection*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TUSERDATA,0))
+ TOLUA_ERR_ASSIGN;
+  self->socket = ((void*)  tolua_getuserdata(tolua_S,2,0));
+ return 0;
+}
+
+/* get function: server of class  ip_connection */
+static int toluaI_get_z_pack_ip_connection_server(lua_State* tolua_S)
+{
+  ip_connection* self = (ip_connection*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ tolua_pushnumber(tolua_S,(long)self->server);
+ return 1;
+}
+
+/* set function: server of class  ip_connection */
+static int toluaI_set_z_pack_ip_connection_server(lua_State* tolua_S)
+{
+  ip_connection* self = (ip_connection*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) TOLUA_ERR_SELF;
+ if (!tolua_istype(tolua_S,2,LUA_TNUMBER,0))
+ TOLUA_ERR_ASSIGN;
+  self->server = ((bool)  tolua_getnumber(tolua_S,2,0));
+ return 0;
+}
+
+/* method: new_connection of class  zsock_hooks */
+static int toluaI_z_pack_zsock_hooks_new_connection00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"zsock_hooks"),0) ||
+ !tolua_isnoobj(tolua_S,2)
+ )
+ goto tolua_lerror;
+ else
+ {
+  zsock_hooks* self = (zsock_hooks*)  tolua_getusertype(tolua_S,1,0);
+ if (!self) tolua_error(tolua_S,"invalid 'self' in function 'new_connection'");
+ {
+  ip_connection* toluaI_ret = (ip_connection*)  self->new_connection();
+ tolua_pushusertype(tolua_S,(void*)toluaI_ret,tolua_tag(tolua_S,"ip_connection"));
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'new_connection'.");
+ return 0;
+}
+
+/* method: free_connection of class  zsock_hooks */
+static int toluaI_z_pack_zsock_hooks_free_connection00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"zsock_hooks"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"ip_connection"),0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  zsock_hooks* self = (zsock_hooks*)  tolua_getusertype(tolua_S,1,0);
+  ip_connection* c = ((ip_connection*)  tolua_getusertype(tolua_S,2,0));
+ if (!self) tolua_error(tolua_S,"invalid 'self' in function 'free_connection'");
+ {
+  self->free_connection(c);
+ }
+ }
+ return 0;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'free_connection'.");
+ return 0;
+}
+
+/* method: setup of class  zsock_hooks */
+static int toluaI_z_pack_zsock_hooks_setup00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"zsock_hooks"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"ip_connection"),0) ||
+ !tolua_istype(tolua_S,3,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,5,LUA_TNUMBER,0) ||
+ !tolua_istype(tolua_S,6,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,7)
+ )
+ goto tolua_lerror;
+ else
+ {
+  zsock_hooks* self = (zsock_hooks*)  tolua_getusertype(tolua_S,1,0);
+  ip_connection* conn = ((ip_connection*)  tolua_getusertype(tolua_S,2,0));
+  cptr conn_ip = ((cptr)  tolua_getstring(tolua_S,3,0));
+  int port = ((int)  tolua_getnumber(tolua_S,4,0));
+  byte conn_type = ((byte)  tolua_getnumber(tolua_S,5,0));
+  bool server = ((bool)  tolua_getnumber(tolua_S,6,0));
+ if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setup'");
+ {
+  bool toluaI_ret = (bool)  self->setup(conn,conn_ip,port,conn_type,server);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'setup'.");
+ return 0;
+}
+
+/* method: unsetup of class  zsock_hooks */
+static int toluaI_z_pack_zsock_hooks_unsetup00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"zsock_hooks"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"ip_connection"),0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  zsock_hooks* self = (zsock_hooks*)  tolua_getusertype(tolua_S,1,0);
+  ip_connection* conn = ((ip_connection*)  tolua_getusertype(tolua_S,2,0));
+ if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unsetup'");
+ {
+  bool toluaI_ret = (bool)  self->unsetup(conn);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'unsetup'.");
+ return 0;
+}
+
+/* method: open of class  zsock_hooks */
+static int toluaI_z_pack_zsock_hooks_open00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"zsock_hooks"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"ip_connection"),0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  zsock_hooks* self = (zsock_hooks*)  tolua_getusertype(tolua_S,1,0);
+  ip_connection* conn = ((ip_connection*)  tolua_getusertype(tolua_S,2,0));
+ if (!self) tolua_error(tolua_S,"invalid 'self' in function 'open'");
+ {
+  bool toluaI_ret = (bool)  self->open(conn);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'open'.");
+ return 0;
+}
+
+/* method: close of class  zsock_hooks */
+static int toluaI_z_pack_zsock_hooks_close00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"zsock_hooks"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"ip_connection"),0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  zsock_hooks* self = (zsock_hooks*)  tolua_getusertype(tolua_S,1,0);
+  ip_connection* conn = ((ip_connection*)  tolua_getusertype(tolua_S,2,0));
+ if (!self) tolua_error(tolua_S,"invalid 'self' in function 'close'");
+ {
+  bool toluaI_ret = (bool)  self->close(conn);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'close'.");
+ return 0;
+}
+
+/* method: write of class  zsock_hooks */
+static int toluaI_z_pack_zsock_hooks_write00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"zsock_hooks"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"ip_connection"),0) ||
+ !tolua_istype(tolua_S,3,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  zsock_hooks* self = (zsock_hooks*)  tolua_getusertype(tolua_S,1,0);
+  ip_connection* conn = ((ip_connection*)  tolua_getusertype(tolua_S,2,0));
+  cptr str = ((cptr)  tolua_getstring(tolua_S,3,0));
+  int size = ((int)  tolua_getnumber(tolua_S,4,0));
+ if (!self) tolua_error(tolua_S,"invalid 'self' in function 'write'");
+ {
+  bool toluaI_ret = (bool)  self->write(conn,str,&size);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ tolua_pushnumber(tolua_S,(long)size);
+ }
+ }
+ return 2;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'write'.");
+ return 0;
+}
+
+/* method: write_simple of class  zsock_hooks */
+static int toluaI_z_pack_zsock_hooks_write_simple00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"zsock_hooks"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"ip_connection"),0) ||
+ !tolua_istype(tolua_S,3,LUA_TSTRING,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  zsock_hooks* self = (zsock_hooks*)  tolua_getusertype(tolua_S,1,0);
+  ip_connection* conn = ((ip_connection*)  tolua_getusertype(tolua_S,2,0));
+  cptr str = ((cptr)  tolua_getstring(tolua_S,3,0));
+ if (!self) tolua_error(tolua_S,"invalid 'self' in function 'write_simple'");
+ {
+  bool toluaI_ret = (bool)  self->write_simple(conn,str);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'write_simple'.");
+ return 0;
+}
+
+/* method: read_simple of class  zsock_hooks */
+static int toluaI_z_pack_zsock_hooks_read_simple00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"zsock_hooks"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"ip_connection"),0) ||
+ !tolua_istype(tolua_S,3,LUA_TSTRING,0) ||
+ !tolua_istype(tolua_S,4,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,5)
+ )
+ goto tolua_lerror;
+ else
+ {
+  zsock_hooks* self = (zsock_hooks*)  tolua_getusertype(tolua_S,1,0);
+  ip_connection* conn = ((ip_connection*)  tolua_getusertype(tolua_S,2,0));
+  char* str = ((char*)  tolua_getstring(tolua_S,3,0));
+  int len = ((int)  tolua_getnumber(tolua_S,4,0));
+ if (!self) tolua_error(tolua_S,"invalid 'self' in function 'read_simple'");
+ {
+  bool toluaI_ret = (bool)  self->read_simple(conn,str,len);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'read_simple'.");
+ return 0;
+}
+
+/* method: accept of class  zsock_hooks */
+static int toluaI_z_pack_zsock_hooks_accept00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"zsock_hooks"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"ip_connection"),0) ||
+ !tolua_istype(tolua_S,3,tolua_tag(tolua_S,"ip_connection"),0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  zsock_hooks* self = (zsock_hooks*)  tolua_getusertype(tolua_S,1,0);
+  ip_connection* conn = ((ip_connection*)  tolua_getusertype(tolua_S,2,0));
+  ip_connection* child = ((ip_connection*)  tolua_getusertype(tolua_S,3,0));
+ if (!self) tolua_error(tolua_S,"invalid 'self' in function 'accept'");
+ {
+  bool toluaI_ret = (bool)  self->accept(conn,child);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'accept'.");
+ return 0;
+}
+
+/* method: can_read of class  zsock_hooks */
+static int toluaI_z_pack_zsock_hooks_can_read00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"zsock_hooks"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"ip_connection"),0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  zsock_hooks* self = (zsock_hooks*)  tolua_getusertype(tolua_S,1,0);
+  ip_connection* conn = ((ip_connection*)  tolua_getusertype(tolua_S,2,0));
+ if (!self) tolua_error(tolua_S,"invalid 'self' in function 'can_read'");
+ {
+  bool toluaI_ret = (bool)  self->can_read(conn);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'can_read'.");
+ return 0;
+}
+
+/* method: wait of class  zsock_hooks */
+static int toluaI_z_pack_zsock_hooks_wait00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"zsock_hooks"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"ip_connection"),0) ||
+ !tolua_istype(tolua_S,3,LUA_TNUMBER,0) ||
+ !tolua_isnoobj(tolua_S,4)
+ )
+ goto tolua_lerror;
+ else
+ {
+  zsock_hooks* self = (zsock_hooks*)  tolua_getusertype(tolua_S,1,0);
+  ip_connection* conn = ((ip_connection*)  tolua_getusertype(tolua_S,2,0));
+  int seconds = ((int)  tolua_getnumber(tolua_S,3,0));
+ if (!self) tolua_error(tolua_S,"invalid 'self' in function 'wait'");
+ {
+  bool toluaI_ret = (bool)  self->wait(conn,seconds);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'wait'.");
+ return 0;
+}
+
+/* method: add_timer of class  zsock_hooks */
+static int toluaI_z_pack_zsock_hooks_add_timer00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"zsock_hooks"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"timer_callback"),0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  zsock_hooks* self = (zsock_hooks*)  tolua_getusertype(tolua_S,1,0);
+  timer_callback callback = *((timer_callback*)  tolua_getusertype(tolua_S,2,0));
+ if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add_timer'");
+ {
+  bool toluaI_ret = (bool)  self->add_timer(callback);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'add_timer'.");
+ return 0;
+}
+
+/* method: remove_timer of class  zsock_hooks */
+static int toluaI_z_pack_zsock_hooks_remove_timer00(lua_State* tolua_S)
+{
+ if (
+ !tolua_istype(tolua_S,1,tolua_tag(tolua_S,"zsock_hooks"),0) ||
+ !tolua_istype(tolua_S,2,tolua_tag(tolua_S,"timer_callback"),0) ||
+ !tolua_isnoobj(tolua_S,3)
+ )
+ goto tolua_lerror;
+ else
+ {
+  zsock_hooks* self = (zsock_hooks*)  tolua_getusertype(tolua_S,1,0);
+  timer_callback callback = *((timer_callback*)  tolua_getusertype(tolua_S,2,0));
+ if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove_timer'");
+ {
+  bool toluaI_ret = (bool)  self->remove_timer(callback);
+ tolua_pushnumber(tolua_S,(long)toluaI_ret);
+ }
+ }
+ return 1;
+tolua_lerror:
+ tolua_error(tolua_S,"#ferror in function 'remove_timer'.");
+ return 0;
+}
+
+/* get function: zsock */
+static int toluaI_get_z_pack_zsock(lua_State* tolua_S)
+{
+ tolua_pushusertype(tolua_S,(void*)&zsock,tolua_tag(tolua_S,"zsock_hooks"));
+ return 1;
+}
+
+/* set function: zsock */
+static int toluaI_set_z_pack_zsock(lua_State* tolua_S)
+{
+ if (!tolua_istype(tolua_S,1,tolua_tag(tolua_S,"zsock_hooks"),0))
+ TOLUA_ERR_ASSIGN;
+  zsock = *((zsock_hooks*)  tolua_getusertype(tolua_S,1,0));
+ return 0;
+}
+
+/* Open function */
+int tolua_z_pack_open (lua_State* tolua_S)
+{
+ tolua_open(tolua_S);
+ toluaI_reg_types(tolua_S);
+ tolua_constant(tolua_S,NULL,"TERM_XTRA_EVENT",TERM_XTRA_EVENT);
+ tolua_constant(tolua_S,NULL,"TERM_XTRA_FLUSH",TERM_XTRA_FLUSH);
+ tolua_constant(tolua_S,NULL,"TERM_XTRA_CLEAR",TERM_XTRA_CLEAR);
+ tolua_constant(tolua_S,NULL,"TERM_XTRA_SHAPE",TERM_XTRA_SHAPE);
+ tolua_constant(tolua_S,NULL,"TERM_XTRA_FROSH",TERM_XTRA_FROSH);
+ tolua_constant(tolua_S,NULL,"TERM_XTRA_FRESH",TERM_XTRA_FRESH);
+ tolua_constant(tolua_S,NULL,"TERM_XTRA_NOISE",TERM_XTRA_NOISE);
+ tolua_constant(tolua_S,NULL,"TERM_XTRA_SOUND",TERM_XTRA_SOUND);
+ tolua_constant(tolua_S,NULL,"TERM_XTRA_BORED",TERM_XTRA_BORED);
+ tolua_constant(tolua_S,NULL,"TERM_XTRA_REACT",TERM_XTRA_REACT);
+ tolua_constant(tolua_S,NULL,"TERM_XTRA_ALIVE",TERM_XTRA_ALIVE);
+ tolua_constant(tolua_S,NULL,"TERM_XTRA_LEVEL",TERM_XTRA_LEVEL);
+ tolua_constant(tolua_S,NULL,"TERM_XTRA_DELAY",TERM_XTRA_DELAY);
+ tolua_constant(tolua_S,NULL,"TERM_XTRA_GET_DELAY",TERM_XTRA_GET_DELAY);
+ tolua_constant(tolua_S,NULL,"TERM_XTRA_SCANSUBDIR",TERM_XTRA_SCANSUBDIR);
+ tolua_globalvar(tolua_S,"Term_xtra_long",toluaI_get_z_pack_Term_xtra_long,toluaI_set_z_pack_Term_xtra_long);
+ tolua_globalarray(tolua_S,"scansubdir_dir",toluaI_get_z_pack_scansubdir_dir,toluaI_set_z_pack_scansubdir_dir);
+ tolua_globalvar(tolua_S,"scansubdir_max",toluaI_get_z_pack_scansubdir_max,toluaI_set_z_pack_scansubdir_max);
+ tolua_globalarray(tolua_S,"scansubdir_result",toluaI_get_z_pack_scansubdir_result,toluaI_set_z_pack_scansubdir_result);
+ tolua_function(tolua_S,NULL,"Term_xtra",toluaI_z_pack_Term_xtra00);
+ tolua_function(tolua_S,NULL,"Term_set_cursor",toluaI_z_pack_Term_set_cursor00);
+ tolua_function(tolua_S,NULL,"Term_gotoxy",toluaI_z_pack_Term_gotoxy00);
+ tolua_function(tolua_S,NULL,"Term_putch",toluaI_z_pack_Term_putch00);
+ tolua_function(tolua_S,NULL,"Term_putstr",toluaI_z_pack_Term_putstr00);
+ tolua_function(tolua_S,NULL,"Term_clear",toluaI_z_pack_Term_clear00);
+ tolua_function(tolua_S,NULL,"Term_redraw",toluaI_z_pack_Term_redraw00);
+ tolua_function(tolua_S,NULL,"Term_redraw_section",toluaI_z_pack_Term_redraw_section00);
+ tolua_function(tolua_S,NULL,"Term_get_size",toluaI_z_pack_Term_get_size00);
+ tolua_function(tolua_S,NULL,"rand_int",toluaI_z_pack_rand_int00);
+ tolua_function(tolua_S,NULL,"rand_range",toluaI_z_pack_rand_range00);
+ tolua_function(tolua_S,NULL,"rand_spread",toluaI_z_pack_rand_spread00);
+ tolua_function(tolua_S,NULL,"randint",toluaI_z_pack_randint00);
+ tolua_function(tolua_S,NULL,"magik",toluaI_z_pack_magik00);
+ tolua_globalvar(tolua_S,"Rand_quick",toluaI_get_z_pack_Rand_quick,toluaI_set_z_pack_Rand_quick);
+ tolua_globalvar(tolua_S,"Rand_value",toluaI_get_z_pack_Rand_value,toluaI_set_z_pack_Rand_value);
+ tolua_function(tolua_S,NULL,"damroll",toluaI_z_pack_damroll00);
+ tolua_function(tolua_S,NULL,"maxroll",toluaI_z_pack_maxroll00);
+ tolua_cclass(tolua_S,"ip_connection","");
+ tolua_tablevar(tolua_S,"ip_connection","setup",toluaI_get_z_pack_ip_connection_setup,toluaI_set_z_pack_ip_connection_setup);
+ tolua_tablevar(tolua_S,"ip_connection","conn_ip",toluaI_get_z_pack_ip_connection_conn_ip,toluaI_set_z_pack_ip_connection_conn_ip);
+ tolua_tablevar(tolua_S,"ip_connection","conn_port",toluaI_get_z_pack_ip_connection_conn_port,toluaI_set_z_pack_ip_connection_conn_port);
+ tolua_tablevar(tolua_S,"ip_connection","conn_type",toluaI_get_z_pack_ip_connection_conn_type,toluaI_set_z_pack_ip_connection_conn_type);
+ tolua_tablevar(tolua_S,"ip_connection","connected",toluaI_get_z_pack_ip_connection_connected,toluaI_set_z_pack_ip_connection_connected);
+ tolua_tablevar(tolua_S,"ip_connection","socket",toluaI_get_z_pack_ip_connection_socket,toluaI_set_z_pack_ip_connection_socket);
+ tolua_tablevar(tolua_S,"ip_connection","server",toluaI_get_z_pack_ip_connection_server,toluaI_set_z_pack_ip_connection_server);
+ tolua_constant(tolua_S,NULL,"ZSOCK_TYPE_TCP",ZSOCK_TYPE_TCP);
+ tolua_constant(tolua_S,NULL,"ZSOCK_TIMER_DELAY",ZSOCK_TIMER_DELAY);
+ tolua_cclass(tolua_S,"zsock_hooks","");
+ tolua_function(tolua_S,"zsock_hooks","new_connection",toluaI_z_pack_zsock_hooks_new_connection00);
+ tolua_function(tolua_S,"zsock_hooks","free_connection",toluaI_z_pack_zsock_hooks_free_connection00);
+ tolua_function(tolua_S,"zsock_hooks","setup",toluaI_z_pack_zsock_hooks_setup00);
+ tolua_function(tolua_S,"zsock_hooks","unsetup",toluaI_z_pack_zsock_hooks_unsetup00);
+ tolua_function(tolua_S,"zsock_hooks","open",toluaI_z_pack_zsock_hooks_open00);
+ tolua_function(tolua_S,"zsock_hooks","close",toluaI_z_pack_zsock_hooks_close00);
+ tolua_function(tolua_S,"zsock_hooks","write",toluaI_z_pack_zsock_hooks_write00);
+ tolua_function(tolua_S,"zsock_hooks","write_simple",toluaI_z_pack_zsock_hooks_write_simple00);
+ tolua_function(tolua_S,"zsock_hooks","read_simple",toluaI_z_pack_zsock_hooks_read_simple00);
+ tolua_function(tolua_S,"zsock_hooks","accept",toluaI_z_pack_zsock_hooks_accept00);
+ tolua_function(tolua_S,"zsock_hooks","can_read",toluaI_z_pack_zsock_hooks_can_read00);
+ tolua_function(tolua_S,"zsock_hooks","wait",toluaI_z_pack_zsock_hooks_wait00);
+ tolua_function(tolua_S,"zsock_hooks","add_timer",toluaI_z_pack_zsock_hooks_add_timer00);
+ tolua_function(tolua_S,"zsock_hooks","remove_timer",toluaI_z_pack_zsock_hooks_remove_timer00);
+ tolua_globalvar(tolua_S,"zsock",toluaI_get_z_pack_zsock,toluaI_set_z_pack_zsock);
+ return 1;
+}
+/* Close function */
+void tolua_z_pack_close (lua_State* tolua_S)
+{
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_XTRA_EVENT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_XTRA_FLUSH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_XTRA_CLEAR");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_XTRA_SHAPE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_XTRA_FROSH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_XTRA_FRESH");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_XTRA_NOISE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_XTRA_SOUND");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_XTRA_BORED");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_XTRA_REACT");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_XTRA_ALIVE");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_XTRA_LEVEL");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_XTRA_DELAY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_XTRA_GET_DELAY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"TERM_XTRA_SCANSUBDIR");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"Term_xtra_long"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"scansubdir_dir");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"scansubdir_max"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"scansubdir_result");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"Term_xtra");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"Term_set_cursor");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"Term_gotoxy");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"Term_putch");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"Term_putstr");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"Term_clear");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"Term_redraw");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"Term_redraw_section");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"Term_get_size");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"rand_int");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"rand_range");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"rand_spread");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"randint");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"magik");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"Rand_quick"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"Rand_value"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"damroll");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"maxroll");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ip_connection");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ZSOCK_TYPE_TCP");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"ZSOCK_TIMER_DELAY");
+ lua_pushnil(tolua_S); lua_setglobal(tolua_S,"zsock_hooks");
+ lua_getglobals(tolua_S);
+ lua_pushstring(tolua_S,"zsock"); lua_pushnil(tolua_S); lua_rawset(tolua_S,-3);
+ lua_pop(tolua_S,1);
+}
